Search.setIndex({"docnames": ["class-structs", "classes", "classes/AlsaFirewire", "classes/AlsaFirewireInterface", "classes/EfwProtocol", "classes/EfwProtocolInterface", "classes/MotuCommandDsp", "classes/MotuCommandDspInterface", "classes/MotuRegisterDsp", "classes/MotuRegisterDspInterface", "classes/QuadletNotification", "classes/QuadletNotificationInterface", "classes/SndDice", "classes/SndDiceClass", "classes/SndDigi00x", "classes/SndDigi00xClass", "classes/SndEfw", "classes/SndEfwClass", "classes/SndFireface", "classes/SndFirefaceClass", "classes/SndMotu", "classes/SndMotuClass", "classes/SndMotuRegisterDspParameter", "classes/SndTascam", "classes/SndTascamClass", "classes/SndUnit", "classes/SndUnitClass", "classes/TascamProtocol", "classes/TascamProtocolInterface", "classes/TimestampedQuadletNotification", "classes/TimestampedQuadletNotificationInterface", "enums", "functions", "hierarchy", "iface-structs", "index", "interfaces", "mapping", "structs"], "filenames": ["class-structs.rst", "classes.rst", "classes/AlsaFirewire.rst", "classes/AlsaFirewireInterface.rst", "classes/EfwProtocol.rst", "classes/EfwProtocolInterface.rst", "classes/MotuCommandDsp.rst", "classes/MotuCommandDspInterface.rst", "classes/MotuRegisterDsp.rst", "classes/MotuRegisterDspInterface.rst", "classes/QuadletNotification.rst", "classes/QuadletNotificationInterface.rst", "classes/SndDice.rst", "classes/SndDiceClass.rst", "classes/SndDigi00x.rst", "classes/SndDigi00xClass.rst", "classes/SndEfw.rst", "classes/SndEfwClass.rst", "classes/SndFireface.rst", "classes/SndFirefaceClass.rst", "classes/SndMotu.rst", "classes/SndMotuClass.rst", "classes/SndMotuRegisterDspParameter.rst", "classes/SndTascam.rst", "classes/SndTascamClass.rst", "classes/SndUnit.rst", "classes/SndUnitClass.rst", "classes/TascamProtocol.rst", "classes/TascamProtocolInterface.rst", "classes/TimestampedQuadletNotification.rst", "classes/TimestampedQuadletNotificationInterface.rst", "enums.rst", "functions.rst", "hierarchy.rst", "iface-structs.rst", "index.rst", "interfaces.rst", "mapping.rst", "structs.rst"], "titles": ["Class Structures", "Classes", "Hitaki.AlsaFirewire", "Hitaki.AlsaFirewireInterface", "Hitaki.EfwProtocol", "Hitaki.EfwProtocolInterface", "Hitaki.MotuCommandDsp", "Hitaki.MotuCommandDspInterface", "Hitaki.MotuRegisterDsp", "Hitaki.MotuRegisterDspInterface", "Hitaki.QuadletNotification", "Hitaki.QuadletNotificationInterface", "Hitaki.SndDice", "Hitaki.SndDiceClass", "Hitaki.SndDigi00x", "Hitaki.SndDigi00xClass", "Hitaki.SndEfw", "Hitaki.SndEfwClass", "Hitaki.SndFireface", "Hitaki.SndFirefaceClass", "Hitaki.SndMotu", "Hitaki.SndMotuClass", "Hitaki.SndMotuRegisterDspParameter", "Hitaki.SndTascam", "Hitaki.SndTascamClass", "Hitaki.SndUnit", "Hitaki.SndUnitClass", "Hitaki.TascamProtocol", "Hitaki.TascamProtocolInterface", "Hitaki.TimestampedQuadletNotification", "Hitaki.TimestampedQuadletNotificationInterface", "Enums", "Functions", "Hierarchy", "Interface Structures", "Hitaki 0.0 (0.2.1)", "Interfaces", "Symbol Mapping", "Structures"], "terms": {"hitaki": [0, 1, 31, 32, 33, 34, 36, 37, 38], "snddiceclass": [0, 12, 37], "snddigi00xclass": [0, 14, 37], "sndefwclass": [0, 16, 37], "sndfirefaceclass": [0, 18, 37], "sndmotuclass": [0, 20, 37], "sndtascamclass": [0, 23, 37], "sndunitclass": [0, 25, 37], "snddice": [1, 2, 10, 33, 37], "snddigi00x": [1, 2, 10, 33, 37], "sndefw": [1, 2, 4, 33, 37], "sndfirefac": [1, 2, 29, 33, 37], "sndmotu": [1, 2, 6, 8, 10, 33, 37], "sndtascam": [1, 2, 27, 33, 37], "sndunit": [1, 2, 33, 37], "gobject": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35], "ginterfac": [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 23, 25, 27, 29], "implement": [2, 4, 6, 8, 10, 16, 18, 20, 23, 27, 29], "create_sourc": [2, 3, 37], "lock": [2, 3, 37], "open": [2, 3, 37], "path": 2, "open_flag": 2, "unlock": [2, 3, 37], "do_create_sourc": 2, "do_lock": 2, "do_open": 2, "do_unlock": 2, "name": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "type": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32], "flag": [2, 4, 8, 10, 18, 22, 27, 29], "short": [2, 4, 8, 10, 27, 29], "descript": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35], "card": [2, 31], "id": 2, "int": [2, 4, 8, 10, 22, 27, 29, 31, 32], "r": [2, 3, 5, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30], "The": [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 23, 25, 27, 29, 31, 32], "numer": [2, 22, 27], "identifi": [2, 8], "sound": [2, 8, 12, 14, 16, 18, 20, 23, 25, 31], "guid": 2, "global": 2, "uniqu": 2, "node": 2, "ieee": [2, 29, 35], "1394": [2, 29, 35], "bu": [2, 35], "i": [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 23, 25, 27, 29, 31, 35], "disconnect": [2, 31], "bool": [2, 4, 6, 8, 27], "w": 2, "en": 2, "whether": [2, 22], "unavail": 2, "associ": [2, 31], "unit": [2, 4, 10, 12, 14, 16, 18, 20, 23, 25, 29, 31, 35], "devic": [2, 4, 16, 27, 31, 35], "str": [2, 31, 32], "linux": [2, 8], "firewir": [2, 6, 8, 10, 14, 20, 22, 23, 25, 27, 29, 31, 35], "subsystem": 2, "alsafirewiretyp": [2, 31, 37], "none": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30], "base": [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 23, 25, 27, 29, 31], "structur": [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 23, 25, 27, 29, 35], "alsafirewireinterfac": [2, 34, 37], "an": [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 23, 25, 27, 29], "interfac": [2, 4, 6, 8, 10, 18, 27, 29, 35], "oper": [2, 4, 6, 8, 10, 27, 29, 31, 35], "alsa": [2, 4, 10, 12, 14, 16, 18, 20, 23, 25, 29, 31, 35], "hwdep": [2, 31, 35], "charact": [2, 31, 35], "audio": [2, 4, 16, 22, 35], "music": [2, 35], "all": 2, "driver": [2, 4, 10, 12, 14, 16, 18, 20, 23, 25, 29], "stack": [2, 10, 23, 25, 29, 31, 35], "allow": 2, "userspac": 2, "applic": 2, "us": [2, 4, 31], "specif": [2, 4, 10, 25, 29], "function": [2, 4, 10, 22, 25, 29, 31, 35], "via": 2, "includ": [2, 4, 18, 29, 31], "common": [2, 25], "part": [2, 27], "ifac": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 18, 27, 28, 29, 30, 31], "object": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 23, 25, 27, 28, 29, 30, 31, 33], "rais": [2, 4, 6, 8, 27], "glib": [2, 4, 6, 8, 27, 31, 32, 35], "error": [2, 4, 6, 8, 27, 31, 32], "return": [2, 4, 6, 8, 12, 14, 16, 18, 20, 22, 23, 25, 27, 31, 32], "true": [2, 4, 6, 8, 27], "overal": [2, 4, 6, 8, 27], "finish": [2, 4, 6, 8, 27, 31], "successfulli": [2, 4, 6, 8, 27, 31], "els": [2, 4, 6, 8, 22, 27], "fals": [2, 4, 6, 8, 27], "sourc": [2, 22, 31], "A": [2, 8, 10, 12, 14, 16, 18, 20, 22, 23, 25, 29, 31, 32], "struct": [2, 8, 12, 14, 16, 18, 20, 22, 23, 25, 31, 32], "handl": [2, 4], "event": [2, 8, 18], "from": [2, 4, 12, 14, 16, 18, 20, 23, 25, 31, 32], "alloc": 2, "kernel": [2, 8], "bound": 2, "so": 2, "prohibit": [2, 31], "start": 2, "packet": [2, 4, 6, 8, 27, 31], "stream": [2, 31], "paramet": [2, 4, 6, 8, 10, 18, 22, 27, 29, 31, 32], "special": 2, "file": 2, "2": [2, 18, 20, 23, 31], "system": [2, 31], "call": [2, 4, 31], "can": [2, 18], "prop": 2, "card_id": 2, "default": 2, "valu": [2, 4, 8, 18, 22, 27, 29, 31], "0": [2, 8, 18, 31], "readabl": 2, "is_disconnect": [2, 31, 37], "writabl": 2, "explicit_notifi": 2, "It": [2, 4], "becom": 2, "when": [2, 4, 8, 10, 18, 22, 27, 29], "remov": 2, "unbound": 2, "Then": 2, "owner": 2, "thi": [2, 4], "should": [2, 4], "unref": 2, "quickli": 2, "possibl": 2, "releas": 2, "is_lock": [2, 31, 37], "node_devic": 2, "which": [2, 4, 8, 10, 27, 29], "own": 2, "e": 2, "g": 2, "fw1": 2, "unit_typ": 2, "dice": [2, 12, 31, 37], "access": [3, 5, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30], "typeinterfac": [3, 5, 7, 9, 11, 28, 30], "class": [3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 22, 24, 26, 28, 30, 31, 35], "receive_respons": [4, 37], "buffer": 4, "transact": [4, 31, 37], "categori": [4, 31], "command": [4, 6, 31], "arg": 4, "param": [4, 8], "timeout_m": 4, "transmit_request": [4, 5, 37], "do_get_seqnum": 4, "do_respond": 4, "version": 4, "seqnum": 4, "statu": [4, 27, 31], "do_transmit_request": 4, "respond": [4, 5], "emit": [4, 8, 10, 27, 29], "transfer": [4, 6, 8, 10, 27, 29], "asynchron": [4, 27], "respons": [4, 31], "echo": [4, 16], "efw": 4, "process": [4, 31], "read": [4, 6, 8, 27], "content": 4, "efwprotocolinterfac": [4, 34, 37], "firework": [4, 16, 31, 37], "protocol": [4, 6, 8, 16, 20, 23, 27, 31], "listen": 4, "address": 4, "space": 4, "request": [4, 29, 31], "frame": [4, 6, 8], "accept": 4, "byte": [4, 8, 18, 22], "pars": 4, "given": 4, "one": 4, "least": [4, 8], "result": [4, 31], "py": [4, 8, 10, 27], "func": [4, 8, 10, 27], "per": 4, "": [4, 18], "expect": 4, "ani": [4, 18, 25, 31], "One": 4, "arrai": [4, 8, 22], "element": [4, 8, 22], "quadlet": [4, 10, 23, 29, 31], "data": [4, 6, 8, 18, 22], "argument": 4, "save": 4, "caller": 4, "give": 4, "enough": 4, "against": 4, "sinc": 4, "librari": [4, 35], "perform": 4, "realloc": 4, "due": [4, 31], "reason": 4, "point": 4, "pointer": 4, "immut": 4, "mutabl": 4, "timeout": [4, 31, 37], "wait": 4, "match": 4, "resp_seqnum": 4, "sequenc": [4, 8], "number": [4, 31], "vfunc": 4, "intern": 4, "after": [4, 27], "compos": 4, "receiv": [4, 8, 10, 18, 27, 29], "retriev": [4, 31, 32], "transmit": 4, "increment": 4, "1": [4, 8, 12, 14, 16, 18, 20, 23, 25, 31], "efwprotocolerror": [4, 31, 32, 37], "closur": [4, 8, 10, 27], "target": [4, 10, 29], "efw_protocol": 4, "run_last": [4, 8, 10, 27, 29], "action": [4, 8, 10, 27, 29], "get_seqnum": 5, "read_float_met": [6, 7, 37], "meter": [6, 8], "do_read_float_met": 6, "motucommanddspinterfac": [6, 34, 37], "dsp": [6, 8, 22, 31], "model": [6, 8, 22], "motu": [6, 8, 20, 22, 31, 37], "seri": [6, 8, 18, 20, 22, 23, 27, 31], "mark": [6, 8, 20, 22], "unicorn": [6, 8, 20, 22], "isochron": [6, 8, 27, 29], "deliv": [6, 8], "pcm": [6, 8], "midi": [6, 8, 18], "messag": [6, 8, 10, 18, 29], "well": [6, 8], "inform": [6, 8, 27], "float": 6, "cach": [6, 8], "read_byte_met": [8, 9, 37], "read_paramet": [8, 9, 37], "do_chang": [8, 27], "do_read_byte_met": 8, "do_read_paramet": 8, "chang": [8, 9, 27, 28], "regist": [8, 22, 29], "moturegisterdspinterfac": [8, 34, 37], "index": [8, 22, 27], "23": 8, "input": [8, 18, 22], "24": 8, "47": 8, "output": [8, 18, 22], "sndmoturegisterdspparamet": [8, 37, 38], "unsign": [8, 18, 29], "32": [8, 18], "bit": [8, 18, 22, 29], "encod": [8, 18], "motu_register_dsp": 8, "consist": [8, 22, 23], "most": 8, "signific": 8, "next": 8, "two": [8, 22], "ar": [8, 18], "mean": 8, "decid": 8, "depend": [8, 18, 35], "For": [8, 18], "see": 8, "parser": 8, "c": [8, 37], "do_notifi": 10, "notifi": [10, 11, 29], "notif": [10, 29], "quadletnotificationinterfac": [10, 34, 37], "some": [10, 29], "support": [10, 12, 14, 16, 18, 20, 23, 25, 29, 31], "have": [10, 29], "purpos": [10, 29], "quadlet_notif": 10, "alsafirewir": [12, 14, 16, 18, 20, 23, 25, 31, 36, 37], "quadletnotif": [12, 14, 20, 36, 37], "subclass": [12, 14, 16, 18, 20, 23, 25], "inherit": [12, 14, 16, 18, 20, 23, 25], "37": [12, 14, 16, 18, 20, 23, 25], "4": [12, 14, 16, 18, 20, 22, 23, 25, 31], "objectclass": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26], "5": [12, 14, 16, 18, 20, 23, 25, 31], "new": [12, 14, 16, 18, 20, 22, 23, 25, 37], "7": [12, 14, 16, 18, 20, 23, 25, 31], "6": [12, 14, 16, 18, 20, 23, 25, 31], "parent_inst": [12, 14, 16, 18, 20, 23, 25], "kwarg": [12, 14, 16, 18, 20, 23, 25], "abstract": [12, 14, 16, 18, 20, 23, 25], "No": [12, 14, 16, 18, 20, 23, 25], "deriv": [12, 14, 16, 18, 20, 23, 25], "tcat": 12, "asic": [12, 31], "snd": [12, 14, 16, 18, 20, 23], "classmethod": [12, 14, 16, 18, 20, 22, 23, 25, 31], "instanc": [12, 14, 16, 18, 20, 22, 23, 25, 31], "instanti": [12, 14, 16, 18, 20, 22, 23, 25], "parent_class": [13, 15, 17, 19, 21, 24, 26], "digidesign": 14, "digi00x": [14, 31, 37], "famili": 14, "efwprotocol": [16, 36, 37], "3": [16, 18, 20, 29, 31], "timestampedquadletnotif": [18, 36, 37], "rme": [18, 31], "firefac": [18, 31, 37], "400": 18, "dispatch": 18, "knob": 18, "control": [18, 27], "integ": [18, 29], "kind": 18, "detect": [18, 22], "below": [18, 22], "0x00000100": 18, "physic": 18, "port": 18, "0x01000000": 18, "0x04000000": 18, "level": [18, 22], "channel": [18, 22, 31], "mask": [18, 22], "0x000000ff": 18, "0x00ff0000": 18, "pair": [18, 22], "posit": 18, "0xf0000000": 18, "0x00000000": 18, "microphon": 18, "0x10000000": 18, "line": [18, 22], "0x20000000": 18, "0x30000000": 18, "0x40000000": 18, "0x50000000": 18, "headphon": [18, 22], "0x60000000": 18, "pdif": 18, "0x70000000": 18, "adat": 18, "0x80000000": 18, "0x90000000": 18, "0xa0000000": 18, "0x02000000": 18, "both": 18, "unless": 18, "0x08000000": 18, "just": 18, "right": 18, "found": 18, "left": 18, "0x00fffc00": 18, "rang": 18, "differ": [18, 22, 27], "zero": 18, "0x00002800": 18, "10": [18, 22, 31], "db": 18, "0x00002c00": 18, "11": [18, 31], "0x00003000": 18, "12": [18, 31], "0x0000fc00": 18, "63": 18, "0x00010000": 18, "64": [18, 23], "0x00010400": 18, "65": 18, "0x00000400": 18, "0x00000800": 18, "0x00000c00": 18, "0x00008800": 18, "17": 18, "0x000008c0": 18, "0x00000900": 18, "18": 18, "infinit": 18, "0x0000f800": 18, "58": 18, "0x0000f400": 18, "56": 18, "0x0000f000": 18, "54": 18, "0x0000ec00": 18, "53": 18, "0x0000e800": 18, "52": 18, "0x00001c00": 18, "0x00001800": 18, "0x00001400": 18, "motucommanddsp": [20, 36, 37], "moturegisterdsp": [20, 36, 37], "reserv": 22, "get_headphone_output_paired_assign": [22, 37], "get_headphone_output_paired_volum": [22, 37], "get_input_flag": [22, 37], "get_input_gain_and_invert": [22, 37], "get_line_input_boost_flag": [22, 37], "get_line_input_nominal_level_flag": [22, 37], "get_main_output_paired_volum": [22, 37], "get_mixer_output_paired_flag": [22, 37], "get_mixer_output_paired_volum": [22, 37], "get_mixer_source_flag": [22, 37], "mixer": 22, "get_mixer_source_gain": [22, 37], "get_mixer_source_paired_bal": [22, 37], "get_mixer_source_paired_width": [22, 37], "get_mixer_source_pan": [22, 37], "box": 22, "contain": 22, "assign": 22, "get": 22, "ha": 22, "volum": 22, "between": [22, 31], "0x00": 22, "0x80": 22, "0x01": 22, "make": 22, "0x02": 22, "enabl": 22, "phantom": 22, "power": 22, "0x04": 22, "attenu": 22, "pad": 22, "0x08": 22, "plug": 22, "insert": 22, "jack": 22, "gain": 22, "invert": 22, "gain_and_invert": 22, "interpret": 22, "group": 22, "ultralit": 22, "0x1f": 22, "0x20": 22, "phase": 22, "express": 22, "pre": 22, "0x3f": 22, "0x40": 22, "boost": 22, "boost_flag": 22, "correspond": 22, "stand": 22, "nominal_level_flag": 22, "nomin": 22, "dbu": 22, "dbv": 22, "main": 22, "indic": 22, "0x0f": 22, "destin": 22, "0x10": 22, "mute": 22, "up": 22, "solo": 22, "l": 22, "balanc": 22, "width": 22, "pan": [22, 31], "tascamprotocol": [23, 36, 37], "tascam": [23, 27, 31, 37], "imag": [23, 27], "state": [23, 27], "accord": 23, "sndrv_firewire_tascam_state_count": 23, "uapi": 23, "without": 25, "read_stat": [27, 28, 37], "befor": 27, "do_read_st": 27, "tascamprotocolinterfac": [27, 34, 37], "either": 27, "latest": 27, "tascam_protocol": 27, "info": 27, "do_notified_at": 29, "tstamp": 29, "timestampedquadletnotificationinterfac": [29, 34, 37], "time": 29, "stamp": 29, "notified_at": [29, 30], "timestamped_quadlet_notif": 29, "cycl": 29, "arriv": 29, "16": 29, "higher": 29, "three": 29, "low": 29, "order": 29, "second": 29, "rest": 29, "13": [29, 31], "format": 29, "cycle_tim": 29, "alsafirewireerror": [31, 32, 37], "genum": 31, "enumer": [31, 32], "report": 31, "quark": [31, 32, 37], "alia": [31, 32], "code": [31, 32], "to_label": [31, 37], "string": [31, 32], "label": [31, 32], "fail": [31, 37], "is_open": [31, 37], "alreadi": 31, "is_not_open": [31, 37], "yet": 31, "is_us": [31, 37], "other": 31, "is_unlock": [31, 37], "avail": 31, "wrong_class": [31, 37], "mismatch": 31, "thetyp": 31, "defin": 31, "board": 31, "modul": 31, "bebob": [31, 37], "oxfw": [31, 37], "8": 31, "invalid": [31, 37], "condit": 31, "incomplet": [31, 37], "2147483648": 31, "ok": [31, 37], "bad": [31, 37], "header": 31, "bad_channel": [31, 37], "bad_pan": [31, 37], "flash_busi": [31, 37], "flash": 31, "busi": 31, "bad_mirror": [31, 37], "mirror": 31, "bad_l": [31, 37], "14": 31, "led": 31, "bad_paramet": [31, 37], "15": 31, "bad_command": [31, 37], "comm_err": [31, 37], "commun": 31, "bad_quad_count": [31, 37], "unsupport": [31, 37], "cancel": 31, "dsp_timeout": [31, 37], "did": 31, "within": 31, "bad_rat": [31, 37], "sampl": 31, "frequenc": 31, "bad_clock": [31, 37], "9": 31, "clock": 31, "alsa_firewire_error_quark": [32, 37], "alsa_firewire_error_to_label": [32, 37], "efw_protocol_error_quark": [32, 37], "efw_protocol_error_to_label": [32, 37], "parent": 35, "project": 35, "libhitaki": 35, "share": 35, "homepag": 35, "http": 35, "github": 35, "com": 35, "debian": 35, "packag": 35, "gir1": 35, "hierarchi": 35, "enum": 35, "symbol": 35, "map": 35, "python": 37, "hitaki_alsa_firewire_create_sourc": 37, "hitaki_alsa_firewire_error_fail": 37, "hitaki_alsa_firewire_error_is_disconnect": 37, "hitaki_alsa_firewire_error_is_lock": 37, "hitaki_alsa_firewire_error_is_not_open": 37, "hitaki_alsa_firewire_error_is_open": 37, "hitaki_alsa_firewire_error_is_unlock": 37, "hitaki_alsa_firewire_error_is_us": 37, "hitaki_alsa_firewire_error_quark": 37, "hitaki_alsa_firewire_error_to_label": 37, "hitaki_alsa_firewire_error_wrong_class": 37, "hitaki_alsa_firewire_lock": 37, "hitaki_alsa_firewire_open": 37, "hitaki_alsa_firewire_type_bebob": 37, "hitaki_alsa_firewire_type_dic": 37, "hitaki_alsa_firewire_type_digi00x": 37, "hitaki_alsa_firewire_type_firefac": 37, "hitaki_alsa_firewire_type_firework": 37, "hitaki_alsa_firewire_type_motu": 37, "hitaki_alsa_firewire_type_oxfw": 37, "hitaki_alsa_firewire_type_tascam": 37, "hitaki_alsa_firewire_unlock": 37, "hitaki_efw_protocol_error_bad": 37, "hitaki_efw_protocol_error_bad_channel": 37, "hitaki_efw_protocol_error_bad_clock": 37, "hitaki_efw_protocol_error_bad_command": 37, "hitaki_efw_protocol_error_bad_l": 37, "hitaki_efw_protocol_error_bad_mirror": 37, "hitaki_efw_protocol_error_bad_pan": 37, "hitaki_efw_protocol_error_bad_paramet": 37, "hitaki_efw_protocol_error_bad_quad_count": 37, "hitaki_efw_protocol_error_bad_r": 37, "hitaki_efw_protocol_error_comm_err": 37, "hitaki_efw_protocol_error_dsp_timeout": 37, "hitaki_efw_protocol_error_flash_busi": 37, "hitaki_efw_protocol_error_incomplet": 37, "hitaki_efw_protocol_error_invalid": 37, "hitaki_efw_protocol_error_ok": 37, "hitaki_efw_protocol_error_quark": 37, "hitaki_efw_protocol_error_timeout": 37, "hitaki_efw_protocol_error_to_label": 37, "hitaki_efw_protocol_error_unsupport": 37, "hitaki_efw_protocol_receive_respons": 37, "hitaki_efw_protocol_transact": 37, "hitaki_efw_protocol_transmit_request": 37, "hitaki_motu_command_dsp_read_float_met": 37, "hitaki_motu_register_dsp_read_byte_met": 37, "hitaki_motu_register_dsp_read_paramet": 37, "hitaki_snd_dice_new": 37, "hitaki_snd_digi00x_new": 37, "hitaki_snd_efw_new": 37, "hitaki_snd_fireface_new": 37, "hitaki_snd_motu_new": 37, "hitaki_snd_motu_register_dsp_parameter_get_headphone_output_paired_assign": 37, "hitaki_snd_motu_register_dsp_parameter_get_headphone_output_paired_volum": 37, "hitaki_snd_motu_register_dsp_parameter_get_input_flag": 37, "hitaki_snd_motu_register_dsp_parameter_get_input_gain_and_invert": 37, "hitaki_snd_motu_register_dsp_parameter_get_line_input_boost_flag": 37, "hitaki_snd_motu_register_dsp_parameter_get_line_input_nominal_level_flag": 37, "hitaki_snd_motu_register_dsp_parameter_get_main_output_paired_volum": 37, "hitaki_snd_motu_register_dsp_parameter_get_mixer_output_paired_flag": 37, "hitaki_snd_motu_register_dsp_parameter_get_mixer_output_paired_volum": 37, "hitaki_snd_motu_register_dsp_parameter_get_mixer_source_flag": 37, "hitaki_snd_motu_register_dsp_parameter_get_mixer_source_gain": 37, "hitaki_snd_motu_register_dsp_parameter_get_mixer_source_paired_bal": 37, "hitaki_snd_motu_register_dsp_parameter_get_mixer_source_paired_width": 37, "hitaki_snd_motu_register_dsp_parameter_get_mixer_source_pan": 37, "hitaki_snd_motu_register_dsp_parameter_new": 37, "hitaki_snd_tascam_new": 37, "hitaki_snd_unit_new": 37, "hitaki_tascam_protocol_read_st": 37, "hitakialsafirewir": 37, "hitakialsafirewireerror": 37, "hitakialsafirewireinterfac": 37, "hitakialsafirewiretyp": 37, "hitakiefwprotocol": 37, "hitakiefwprotocolerror": 37, "hitakiefwprotocolinterfac": 37, "hitakimotucommanddsp": 37, "hitakimotucommanddspinterfac": 37, "hitakimoturegisterdsp": 37, "hitakimoturegisterdspinterfac": 37, "hitakiquadletnotif": 37, "hitakiquadletnotificationinterfac": 37, "hitakisnddic": 37, "hitakisnddiceclass": 37, "hitakisnddigi00x": 37, "hitakisnddigi00xclass": 37, "hitakisndefw": 37, "hitakisndefwclass": 37, "hitakisndfirefac": 37, "hitakisndfirefaceclass": 37, "hitakisndmotu": 37, "hitakisndmotuclass": 37, "hitakisndmoturegisterdspparamet": 37, "hitakisndtascam": 37, "hitakisndtascamclass": 37, "hitakisndunit": 37, "hitakisndunitclass": 37, "hitakitascamprotocol": 37, "hitakitascamprotocolinterfac": 37, "hitakitimestampedquadletnotif": 37, "hitakitimestampedquadletnotificationinterfac": 37}, "objects": {"Hitaki": [[2, 0, 1, "", "AlsaFirewire"], [31, 0, 1, "", "AlsaFirewireError"], [3, 0, 1, "", "AlsaFirewireInterface"], [31, 0, 1, "", "AlsaFirewireType"], [4, 0, 1, "", "EfwProtocol"], [31, 0, 1, "", "EfwProtocolError"], [5, 0, 1, "", "EfwProtocolInterface"], [6, 0, 1, "", "MotuCommandDsp"], [7, 0, 1, "", "MotuCommandDspInterface"], [8, 0, 1, "", "MotuRegisterDsp"], [9, 0, 1, "", "MotuRegisterDspInterface"], [10, 0, 1, "", "QuadletNotification"], [11, 0, 1, "", "QuadletNotificationInterface"], [12, 0, 1, "", "SndDice"], [13, 0, 1, "", "SndDiceClass"], [14, 0, 1, "", "SndDigi00x"], [15, 0, 1, "", "SndDigi00xClass"], [16, 0, 1, "", "SndEfw"], [17, 0, 1, "", "SndEfwClass"], [18, 0, 1, "", "SndFireface"], [19, 0, 1, "", "SndFirefaceClass"], [20, 0, 1, "", "SndMotu"], [21, 0, 1, "", "SndMotuClass"], [22, 0, 1, "", "SndMotuRegisterDspParameter"], [23, 0, 1, "", "SndTascam"], [24, 0, 1, "", "SndTascamClass"], [25, 0, 1, "", "SndUnit"], [26, 0, 1, "", "SndUnitClass"], [27, 0, 1, "", "TascamProtocol"], [28, 0, 1, "", "TascamProtocolInterface"], [29, 0, 1, "", "TimestampedQuadletNotification"], [30, 0, 1, "", "TimestampedQuadletNotificationInterface"], [32, 4, 1, "", "alsa_firewire_error_quark"], [32, 4, 1, "", "alsa_firewire_error_to_label"], [32, 4, 1, "", "efw_protocol_error_quark"], [32, 4, 1, "", "efw_protocol_error_to_label"]], "Hitaki.AlsaFirewire": [[2, 1, 1, "", "create_source"], [2, 1, 1, "", "do_create_source"], [2, 1, 1, "", "do_lock"], [2, 1, 1, "", "do_open"], [2, 1, 1, "", "do_unlock"], [2, 1, 1, "", "lock"], [2, 1, 1, "", "open"], [2, 1, 1, "", "unlock"]], "Hitaki.AlsaFirewire.props": [[2, 2, 1, "", "card_id"], [2, 2, 1, "", "guid"], [2, 2, 1, "", "is_disconnected"], [2, 2, 1, "", "is_locked"], [2, 2, 1, "", "node_device"], [2, 2, 1, "", "unit_type"]], "Hitaki.AlsaFirewireError": [[31, 3, 1, "", "FAILED"], [31, 3, 1, "", "IS_DISCONNECTED"], [31, 3, 1, "", "IS_LOCKED"], [31, 3, 1, "", "IS_NOT_OPENED"], [31, 3, 1, "", "IS_OPENED"], [31, 3, 1, "", "IS_UNLOCKED"], [31, 3, 1, "", "IS_USED"], [31, 3, 1, "", "WRONG_CLASS"], [31, 1, 1, "", "quark"], [31, 1, 1, "", "to_label"]], "Hitaki.AlsaFirewireType": [[31, 3, 1, "", "BEBOB"], [31, 3, 1, "", "DICE"], [31, 3, 1, "", "DIGI00X"], [31, 3, 1, "", "FIREFACE"], [31, 3, 1, "", "FIREWORKS"], [31, 3, 1, "", "MOTU"], [31, 3, 1, "", "OXFW"], [31, 3, 1, "", "TASCAM"]], "Hitaki.EfwProtocol": [[4, 1, 1, "", "do_get_seqnum"], [4, 1, 1, "", "do_responded"], [4, 1, 1, "", "do_transmit_request"], [4, 1, 1, "", "receive_response"], [4, 1, 1, "", "transaction"], [4, 1, 1, "", "transmit_request"]], "Hitaki.EfwProtocol.signals": [[4, 4, 1, "", "responded"]], "Hitaki.EfwProtocolError": [[31, 3, 1, "", "BAD"], [31, 3, 1, "", "BAD_CHANNEL"], [31, 3, 1, "", "BAD_CLOCK"], [31, 3, 1, "", "BAD_COMMAND"], [31, 3, 1, "", "BAD_LED"], [31, 3, 1, "", "BAD_MIRROR"], [31, 3, 1, "", "BAD_PAN"], [31, 3, 1, "", "BAD_PARAMETER"], [31, 3, 1, "", "BAD_QUAD_COUNT"], [31, 3, 1, "", "BAD_RATE"], [31, 3, 1, "", "COMM_ERR"], [31, 3, 1, "", "DSP_TIMEOUT"], [31, 3, 1, "", "FLASH_BUSY"], [31, 3, 1, "", "INCOMPLETE"], [31, 3, 1, "", "INVALID"], [31, 3, 1, "", "OK"], [31, 3, 1, "", "TIMEOUT"], [31, 3, 1, "", "UNSUPPORTED"], [31, 1, 1, "", "quark"], [31, 1, 1, "", "to_label"]], "Hitaki.MotuCommandDsp": [[6, 1, 1, "", "do_read_float_meter"], [6, 1, 1, "", "read_float_meter"]], "Hitaki.MotuRegisterDsp": [[8, 1, 1, "", "do_changed"], [8, 1, 1, "", "do_read_byte_meter"], [8, 1, 1, "", "do_read_parameter"], [8, 1, 1, "", "read_byte_meter"], [8, 1, 1, "", "read_parameter"]], "Hitaki.MotuRegisterDsp.signals": [[8, 4, 1, "", "changed"]], "Hitaki.QuadletNotification": [[10, 1, 1, "", "do_notified"]], "Hitaki.QuadletNotification.signals": [[10, 4, 1, "", "notified"]], "Hitaki.SndDice": [[12, 1, 1, "", "new"]], "Hitaki.SndDigi00x": [[14, 1, 1, "", "new"]], "Hitaki.SndEfw": [[16, 1, 1, "", "new"]], "Hitaki.SndFireface": [[18, 1, 1, "", "new"]], "Hitaki.SndMotu": [[20, 1, 1, "", "new"]], "Hitaki.SndMotuRegisterDspParameter": [[22, 1, 1, "", "get_headphone_output_paired_assignment"], [22, 1, 1, "", "get_headphone_output_paired_volume"], [22, 1, 1, "", "get_input_flag"], [22, 1, 1, "", "get_input_gain_and_invert"], [22, 1, 1, "", "get_line_input_boost_flag"], [22, 1, 1, "", "get_line_input_nominal_level_flag"], [22, 1, 1, "", "get_main_output_paired_volume"], [22, 1, 1, "", "get_mixer_output_paired_flag"], [22, 1, 1, "", "get_mixer_output_paired_volume"], [22, 1, 1, "", "get_mixer_source_flag"], [22, 1, 1, "", "get_mixer_source_gain"], [22, 1, 1, "", "get_mixer_source_paired_balance"], [22, 1, 1, "", "get_mixer_source_paired_width"], [22, 1, 1, "", "get_mixer_source_pan"], [22, 1, 1, "", "new"]], "Hitaki.SndTascam": [[23, 1, 1, "", "new"]], "Hitaki.SndUnit": [[25, 1, 1, "", "new"]], "Hitaki.TascamProtocol": [[27, 1, 1, "", "do_changed"], [27, 1, 1, "", "do_read_state"], [27, 1, 1, "", "read_state"]], "Hitaki.TascamProtocol.signals": [[27, 4, 1, "", "changed"]], "Hitaki.TimestampedQuadletNotification": [[29, 1, 1, "", "do_notified_at"]], "Hitaki.TimestampedQuadletNotification.signals": [[29, 4, 1, "", "notified_at"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:data", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "data", "Python data"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"class": [0, 1, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 23, 25, 27, 29], "structur": [0, 34, 38], "hitaki": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35], "alsafirewir": 2, "method": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "virtual": [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 23, 25, 27, 29], "properti": [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 23, 25, 27, 29], "signal": [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 23, 25, 27, 29], "field": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "detail": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "alsafirewireinterfac": 3, "efwprotocol": 4, "efwprotocolinterfac": 5, "motucommanddsp": 6, "motucommanddspinterfac": 7, "moturegisterdsp": 8, "moturegisterdspinterfac": 9, "quadletnotif": 10, "quadletnotificationinterfac": 11, "snddice": 12, "snddiceclass": 13, "snddigi00x": 14, "snddigi00xclass": 15, "sndefw": 16, "sndefwclass": 17, "sndfirefac": 18, "sndfirefaceclass": 19, "sndmotu": 20, "sndmotuclass": 21, "sndmoturegisterdspparamet": 22, "sndtascam": 23, "sndtascamclass": 24, "sndunit": 25, "sndunitclass": 26, "tascamprotocol": 27, "tascamprotocolinterfac": 28, "timestampedquadletnotif": 29, "timestampedquadletnotificationinterfac": 30, "enum": 31, "function": 32, "hierarchi": 33, "interfac": [34, 36], "0": 35, "2": 35, "1": 35, "api": 35, "symbol": 37, "map": 37}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Class Structures": [[0, "class-structures"]], "Classes": [[1, "classes"]], "Hitaki.AlsaFirewire": [[2, "hitaki-alsafirewire"]], "Methods": [[2, "methods"], [3, "methods"], [4, "methods"], [5, "methods"], [6, "methods"], [7, "methods"], [8, "methods"], [9, "methods"], [10, "methods"], [11, "methods"], [12, "methods"], [13, "methods"], [14, "methods"], [15, "methods"], [16, "methods"], [17, "methods"], [18, "methods"], [19, "methods"], [20, "methods"], [21, "methods"], [22, "methods"], [23, "methods"], [24, "methods"], [25, "methods"], [26, "methods"], [27, "methods"], [28, "methods"], [29, "methods"], [30, "methods"]], "Virtual Methods": [[2, "virtual-methods"], [4, "virtual-methods"], [6, "virtual-methods"], [8, "virtual-methods"], [10, "virtual-methods"], [12, "virtual-methods"], [14, "virtual-methods"], [16, "virtual-methods"], [18, "virtual-methods"], [20, "virtual-methods"], [23, "virtual-methods"], [25, "virtual-methods"], [27, "virtual-methods"], [29, "virtual-methods"]], "Properties": [[2, "properties"], [4, "properties"], [6, "properties"], [8, "properties"], [10, "properties"], [12, "properties"], [14, "properties"], [16, "properties"], [18, "properties"], [20, "properties"], [23, "properties"], [25, "properties"], [27, "properties"], [29, "properties"]], "Signals": [[2, "signals"], [4, "signals"], [6, "signals"], [8, "signals"], [10, "signals"], [12, "signals"], [14, "signals"], [16, "signals"], [18, "signals"], [20, "signals"], [23, "signals"], [25, "signals"], [27, "signals"], [29, "signals"]], "Fields": [[2, "fields"], [3, "fields"], [4, "fields"], [5, "fields"], [6, "fields"], [7, "fields"], [8, "fields"], [9, "fields"], [10, "fields"], [11, "fields"], [12, "fields"], [13, "fields"], [14, "fields"], [15, "fields"], [16, "fields"], [17, "fields"], [18, "fields"], [19, "fields"], [20, "fields"], [21, "fields"], [22, "fields"], [23, "fields"], [24, "fields"], [25, "fields"], [26, "fields"], [27, "fields"], [28, "fields"], [29, "fields"], [30, "fields"]], "Class Details": [[2, "class-details"], [4, "class-details"], [6, "class-details"], [8, "class-details"], [10, "class-details"], [12, "class-details"], [14, "class-details"], [16, "class-details"], [18, "class-details"], [20, "class-details"], [23, "class-details"], [25, "class-details"], [27, "class-details"], [29, "class-details"]], "Property Details": [[2, "property-details"]], "Hitaki.AlsaFirewireInterface": [[3, "hitaki-alsafirewireinterface"]], "Details": [[3, "details"], [5, "details"], [7, "details"], [9, "details"], [11, "details"], [13, "details"], [15, "details"], [17, "details"], [19, "details"], [21, "details"], [22, "details"], [24, "details"], [26, "details"], [28, "details"], [30, "details"], [31, "details"], [32, "details"]], "Hitaki.EfwProtocol": [[4, "hitaki-efwprotocol"]], "Signal Details": [[4, "signal-details"], [8, "signal-details"], [10, "signal-details"], [27, "signal-details"], [29, "signal-details"]], "Hitaki.EfwProtocolInterface": [[5, "hitaki-efwprotocolinterface"]], "Hitaki.MotuCommandDsp": [[6, "hitaki-motucommanddsp"]], "Hitaki.MotuCommandDspInterface": [[7, "hitaki-motucommanddspinterface"]], "Hitaki.MotuRegisterDsp": [[8, "hitaki-moturegisterdsp"]], "Hitaki.MotuRegisterDspInterface": [[9, "hitaki-moturegisterdspinterface"]], "Hitaki.QuadletNotification": [[10, "hitaki-quadletnotification"]], "Hitaki.QuadletNotificationInterface": [[11, "hitaki-quadletnotificationinterface"]], "Hitaki.SndDice": [[12, "hitaki-snddice"]], "Hitaki.SndDiceClass": [[13, "hitaki-snddiceclass"]], "Hitaki.SndDigi00x": [[14, "hitaki-snddigi00x"]], "Hitaki.SndDigi00xClass": [[15, "hitaki-snddigi00xclass"]], "Hitaki.SndEfw": [[16, "hitaki-sndefw"]], "Hitaki.SndEfwClass": [[17, "hitaki-sndefwclass"]], "Hitaki.SndFireface": [[18, "hitaki-sndfireface"]], "Hitaki.SndFirefaceClass": [[19, "hitaki-sndfirefaceclass"]], "Hitaki.SndMotu": [[20, "hitaki-sndmotu"]], "Hitaki.SndMotuClass": [[21, "hitaki-sndmotuclass"]], "Hitaki.SndMotuRegisterDspParameter": [[22, "hitaki-sndmoturegisterdspparameter"]], "Hitaki.SndTascam": [[23, "hitaki-sndtascam"]], "Hitaki.SndTascamClass": [[24, "hitaki-sndtascamclass"]], "Hitaki.SndUnit": [[25, "hitaki-sndunit"]], "Hitaki.SndUnitClass": [[26, "hitaki-sndunitclass"]], "Hitaki.TascamProtocol": [[27, "hitaki-tascamprotocol"]], "Hitaki.TascamProtocolInterface": [[28, "hitaki-tascamprotocolinterface"]], "Hitaki.TimestampedQuadletNotification": [[29, "hitaki-timestampedquadletnotification"]], "Hitaki.TimestampedQuadletNotificationInterface": [[30, "hitaki-timestampedquadletnotificationinterface"]], "Enums": [[31, "enums"]], "Functions": [[32, "functions"]], "Hierarchy": [[33, "hierarchy"]], "Interface Structures": [[34, "interface-structures"]], "Hitaki 0.0 (0.2.1)": [[35, "hitaki-0-0-0-2-1"]], "API": [[35, "api"]], "Interfaces": [[36, "interfaces"]], "Symbol Mapping": [[37, "symbol-mapping"]], "Structures": [[38, "structures"]]}, "indexentries": {"hitaki.alsafirewire (built-in class)": [[2, "Hitaki.AlsaFirewire"]], "hitaki.alsafirewire.props.card_id (built-in variable)": [[2, "Hitaki.AlsaFirewire.props.card_id"]], "hitaki.alsafirewire.props.guid (built-in variable)": [[2, "Hitaki.AlsaFirewire.props.guid"]], "hitaki.alsafirewire.props.is_disconnected (built-in variable)": [[2, "Hitaki.AlsaFirewire.props.is_disconnected"]], "hitaki.alsafirewire.props.is_locked (built-in variable)": [[2, "Hitaki.AlsaFirewire.props.is_locked"]], "hitaki.alsafirewire.props.node_device (built-in variable)": [[2, "Hitaki.AlsaFirewire.props.node_device"]], "hitaki.alsafirewire.props.unit_type (built-in variable)": [[2, "Hitaki.AlsaFirewire.props.unit_type"]], "create_source() (hitaki.alsafirewire method)": [[2, "Hitaki.AlsaFirewire.create_source"]], "do_create_source() (hitaki.alsafirewire method)": [[2, "Hitaki.AlsaFirewire.do_create_source"]], "do_lock() (hitaki.alsafirewire method)": [[2, "Hitaki.AlsaFirewire.do_lock"]], "do_open() (hitaki.alsafirewire method)": [[2, "Hitaki.AlsaFirewire.do_open"]], "do_unlock() (hitaki.alsafirewire method)": [[2, "Hitaki.AlsaFirewire.do_unlock"]], "lock() (hitaki.alsafirewire method)": [[2, "Hitaki.AlsaFirewire.lock"]], "open() (hitaki.alsafirewire method)": [[2, "Hitaki.AlsaFirewire.open"]], "unlock() (hitaki.alsafirewire method)": [[2, "Hitaki.AlsaFirewire.unlock"]], "hitaki.alsafirewireinterface (built-in class)": [[3, "Hitaki.AlsaFirewireInterface"]], "hitaki.efwprotocol (built-in class)": [[4, "Hitaki.EfwProtocol"]], "hitaki.efwprotocol.signals.responded()": [[4, "Hitaki.EfwProtocol.signals.responded"]], "built-in function": [[4, "Hitaki.EfwProtocol.signals.responded"], [8, "Hitaki.MotuRegisterDsp.signals.changed"], [10, "Hitaki.QuadletNotification.signals.notified"], [27, "Hitaki.TascamProtocol.signals.changed"], [29, "Hitaki.TimestampedQuadletNotification.signals.notified_at"], [32, "Hitaki.alsa_firewire_error_quark"], [32, "Hitaki.alsa_firewire_error_to_label"], [32, "Hitaki.efw_protocol_error_quark"], [32, "Hitaki.efw_protocol_error_to_label"]], "do_get_seqnum() (hitaki.efwprotocol method)": [[4, "Hitaki.EfwProtocol.do_get_seqnum"]], "do_responded() (hitaki.efwprotocol method)": [[4, "Hitaki.EfwProtocol.do_responded"]], "do_transmit_request() (hitaki.efwprotocol method)": [[4, "Hitaki.EfwProtocol.do_transmit_request"]], "receive_response() (hitaki.efwprotocol method)": [[4, "Hitaki.EfwProtocol.receive_response"]], "transaction() (hitaki.efwprotocol method)": [[4, "Hitaki.EfwProtocol.transaction"]], "transmit_request() (hitaki.efwprotocol method)": [[4, "Hitaki.EfwProtocol.transmit_request"]], "hitaki.efwprotocolinterface (built-in class)": [[5, "Hitaki.EfwProtocolInterface"]], "hitaki.motucommanddsp (built-in class)": [[6, "Hitaki.MotuCommandDsp"]], "do_read_float_meter() (hitaki.motucommanddsp method)": [[6, "Hitaki.MotuCommandDsp.do_read_float_meter"]], "read_float_meter() (hitaki.motucommanddsp method)": [[6, "Hitaki.MotuCommandDsp.read_float_meter"]], "hitaki.motucommanddspinterface (built-in class)": [[7, "Hitaki.MotuCommandDspInterface"]], "hitaki.moturegisterdsp (built-in class)": [[8, "Hitaki.MotuRegisterDsp"]], "hitaki.moturegisterdsp.signals.changed()": [[8, "Hitaki.MotuRegisterDsp.signals.changed"]], "do_changed() (hitaki.moturegisterdsp method)": [[8, "Hitaki.MotuRegisterDsp.do_changed"]], "do_read_byte_meter() (hitaki.moturegisterdsp method)": [[8, "Hitaki.MotuRegisterDsp.do_read_byte_meter"]], "do_read_parameter() (hitaki.moturegisterdsp method)": [[8, "Hitaki.MotuRegisterDsp.do_read_parameter"]], "read_byte_meter() (hitaki.moturegisterdsp method)": [[8, "Hitaki.MotuRegisterDsp.read_byte_meter"]], "read_parameter() (hitaki.moturegisterdsp method)": [[8, "Hitaki.MotuRegisterDsp.read_parameter"]], "hitaki.moturegisterdspinterface (built-in class)": [[9, "Hitaki.MotuRegisterDspInterface"]], "hitaki.quadletnotification (built-in class)": [[10, "Hitaki.QuadletNotification"]], "hitaki.quadletnotification.signals.notified()": [[10, "Hitaki.QuadletNotification.signals.notified"]], "do_notified() (hitaki.quadletnotification method)": [[10, "Hitaki.QuadletNotification.do_notified"]], "hitaki.quadletnotificationinterface (built-in class)": [[11, "Hitaki.QuadletNotificationInterface"]], "hitaki.snddice (built-in class)": [[12, "Hitaki.SndDice"]], "new() (hitaki.snddice class method)": [[12, "Hitaki.SndDice.new"]], "hitaki.snddiceclass (built-in class)": [[13, "Hitaki.SndDiceClass"]], "hitaki.snddigi00x (built-in class)": [[14, "Hitaki.SndDigi00x"]], "new() (hitaki.snddigi00x class method)": [[14, "Hitaki.SndDigi00x.new"]], "hitaki.snddigi00xclass (built-in class)": [[15, "Hitaki.SndDigi00xClass"]], "hitaki.sndefw (built-in class)": [[16, "Hitaki.SndEfw"]], "new() (hitaki.sndefw class method)": [[16, "Hitaki.SndEfw.new"]], "hitaki.sndefwclass (built-in class)": [[17, "Hitaki.SndEfwClass"]], "hitaki.sndfireface (built-in class)": [[18, "Hitaki.SndFireface"]], "new() (hitaki.sndfireface class method)": [[18, "Hitaki.SndFireface.new"]], "hitaki.sndfirefaceclass (built-in class)": [[19, "Hitaki.SndFirefaceClass"]], "hitaki.sndmotu (built-in class)": [[20, "Hitaki.SndMotu"]], "new() (hitaki.sndmotu class method)": [[20, "Hitaki.SndMotu.new"]], "hitaki.sndmotuclass (built-in class)": [[21, "Hitaki.SndMotuClass"]], "hitaki.sndmoturegisterdspparameter (built-in class)": [[22, "Hitaki.SndMotuRegisterDspParameter"]], "get_headphone_output_paired_assignment() (hitaki.sndmoturegisterdspparameter method)": [[22, "Hitaki.SndMotuRegisterDspParameter.get_headphone_output_paired_assignment"]], "get_headphone_output_paired_volume() (hitaki.sndmoturegisterdspparameter method)": [[22, "Hitaki.SndMotuRegisterDspParameter.get_headphone_output_paired_volume"]], "get_input_flag() (hitaki.sndmoturegisterdspparameter method)": [[22, "Hitaki.SndMotuRegisterDspParameter.get_input_flag"]], "get_input_gain_and_invert() (hitaki.sndmoturegisterdspparameter method)": [[22, "Hitaki.SndMotuRegisterDspParameter.get_input_gain_and_invert"]], "get_line_input_boost_flag() (hitaki.sndmoturegisterdspparameter method)": [[22, "Hitaki.SndMotuRegisterDspParameter.get_line_input_boost_flag"]], "get_line_input_nominal_level_flag() (hitaki.sndmoturegisterdspparameter method)": [[22, "Hitaki.SndMotuRegisterDspParameter.get_line_input_nominal_level_flag"]], "get_main_output_paired_volume() (hitaki.sndmoturegisterdspparameter method)": [[22, "Hitaki.SndMotuRegisterDspParameter.get_main_output_paired_volume"]], "get_mixer_output_paired_flag() (hitaki.sndmoturegisterdspparameter method)": [[22, "Hitaki.SndMotuRegisterDspParameter.get_mixer_output_paired_flag"]], "get_mixer_output_paired_volume() (hitaki.sndmoturegisterdspparameter method)": [[22, "Hitaki.SndMotuRegisterDspParameter.get_mixer_output_paired_volume"]], "get_mixer_source_flag() (hitaki.sndmoturegisterdspparameter method)": [[22, "Hitaki.SndMotuRegisterDspParameter.get_mixer_source_flag"]], "get_mixer_source_gain() (hitaki.sndmoturegisterdspparameter method)": [[22, "Hitaki.SndMotuRegisterDspParameter.get_mixer_source_gain"]], "get_mixer_source_paired_balance() (hitaki.sndmoturegisterdspparameter method)": [[22, "Hitaki.SndMotuRegisterDspParameter.get_mixer_source_paired_balance"]], "get_mixer_source_paired_width() (hitaki.sndmoturegisterdspparameter method)": [[22, "Hitaki.SndMotuRegisterDspParameter.get_mixer_source_paired_width"]], "get_mixer_source_pan() (hitaki.sndmoturegisterdspparameter method)": [[22, "Hitaki.SndMotuRegisterDspParameter.get_mixer_source_pan"]], "new() (hitaki.sndmoturegisterdspparameter class method)": [[22, "Hitaki.SndMotuRegisterDspParameter.new"]], "hitaki.sndtascam (built-in class)": [[23, "Hitaki.SndTascam"]], "new() (hitaki.sndtascam class method)": [[23, "Hitaki.SndTascam.new"]], "hitaki.sndtascamclass (built-in class)": [[24, "Hitaki.SndTascamClass"]], "hitaki.sndunit (built-in class)": [[25, "Hitaki.SndUnit"]], "new() (hitaki.sndunit class method)": [[25, "Hitaki.SndUnit.new"]], "hitaki.sndunitclass (built-in class)": [[26, "Hitaki.SndUnitClass"]], "hitaki.tascamprotocol (built-in class)": [[27, "Hitaki.TascamProtocol"]], "hitaki.tascamprotocol.signals.changed()": [[27, "Hitaki.TascamProtocol.signals.changed"]], "do_changed() (hitaki.tascamprotocol method)": [[27, "Hitaki.TascamProtocol.do_changed"]], "do_read_state() (hitaki.tascamprotocol method)": [[27, "Hitaki.TascamProtocol.do_read_state"]], "read_state() (hitaki.tascamprotocol method)": [[27, "Hitaki.TascamProtocol.read_state"]], "hitaki.tascamprotocolinterface (built-in class)": [[28, "Hitaki.TascamProtocolInterface"]], "hitaki.timestampedquadletnotification (built-in class)": [[29, "Hitaki.TimestampedQuadletNotification"]], "hitaki.timestampedquadletnotification.signals.notified_at()": [[29, "Hitaki.TimestampedQuadletNotification.signals.notified_at"]], "do_notified_at() (hitaki.timestampedquadletnotification method)": [[29, "Hitaki.TimestampedQuadletNotification.do_notified_at"]], "hitaki.timestampedquadletnotificationinterface (built-in class)": [[30, "Hitaki.TimestampedQuadletNotificationInterface"]], "bad (hitaki.efwprotocolerror attribute)": [[31, "Hitaki.EfwProtocolError.BAD"]], "bad_channel (hitaki.efwprotocolerror attribute)": [[31, "Hitaki.EfwProtocolError.BAD_CHANNEL"]], "bad_clock (hitaki.efwprotocolerror attribute)": [[31, "Hitaki.EfwProtocolError.BAD_CLOCK"]], "bad_command (hitaki.efwprotocolerror attribute)": [[31, "Hitaki.EfwProtocolError.BAD_COMMAND"]], "bad_led (hitaki.efwprotocolerror attribute)": [[31, "Hitaki.EfwProtocolError.BAD_LED"]], "bad_mirror (hitaki.efwprotocolerror attribute)": [[31, "Hitaki.EfwProtocolError.BAD_MIRROR"]], "bad_pan (hitaki.efwprotocolerror attribute)": [[31, "Hitaki.EfwProtocolError.BAD_PAN"]], "bad_parameter (hitaki.efwprotocolerror attribute)": [[31, "Hitaki.EfwProtocolError.BAD_PARAMETER"]], "bad_quad_count (hitaki.efwprotocolerror attribute)": [[31, "Hitaki.EfwProtocolError.BAD_QUAD_COUNT"]], "bad_rate (hitaki.efwprotocolerror attribute)": [[31, "Hitaki.EfwProtocolError.BAD_RATE"]], "bebob (hitaki.alsafirewiretype attribute)": [[31, "Hitaki.AlsaFirewireType.BEBOB"]], "comm_err (hitaki.efwprotocolerror attribute)": [[31, "Hitaki.EfwProtocolError.COMM_ERR"]], "dice (hitaki.alsafirewiretype attribute)": [[31, "Hitaki.AlsaFirewireType.DICE"]], "digi00x (hitaki.alsafirewiretype attribute)": [[31, "Hitaki.AlsaFirewireType.DIGI00X"]], "dsp_timeout (hitaki.efwprotocolerror attribute)": [[31, "Hitaki.EfwProtocolError.DSP_TIMEOUT"]], "failed (hitaki.alsafirewireerror attribute)": [[31, "Hitaki.AlsaFirewireError.FAILED"]], "fireface (hitaki.alsafirewiretype attribute)": [[31, "Hitaki.AlsaFirewireType.FIREFACE"]], "fireworks (hitaki.alsafirewiretype attribute)": [[31, "Hitaki.AlsaFirewireType.FIREWORKS"]], "flash_busy (hitaki.efwprotocolerror attribute)": [[31, "Hitaki.EfwProtocolError.FLASH_BUSY"]], "hitaki.alsafirewireerror (built-in class)": [[31, "Hitaki.AlsaFirewireError"]], "hitaki.alsafirewiretype (built-in class)": [[31, "Hitaki.AlsaFirewireType"]], "hitaki.efwprotocolerror (built-in class)": [[31, "Hitaki.EfwProtocolError"]], "incomplete (hitaki.efwprotocolerror attribute)": [[31, "Hitaki.EfwProtocolError.INCOMPLETE"]], "invalid (hitaki.efwprotocolerror attribute)": [[31, "Hitaki.EfwProtocolError.INVALID"]], "is_disconnected (hitaki.alsafirewireerror attribute)": [[31, "Hitaki.AlsaFirewireError.IS_DISCONNECTED"]], "is_locked (hitaki.alsafirewireerror attribute)": [[31, "Hitaki.AlsaFirewireError.IS_LOCKED"]], "is_not_opened (hitaki.alsafirewireerror attribute)": [[31, "Hitaki.AlsaFirewireError.IS_NOT_OPENED"]], "is_opened (hitaki.alsafirewireerror attribute)": [[31, "Hitaki.AlsaFirewireError.IS_OPENED"]], "is_unlocked (hitaki.alsafirewireerror attribute)": [[31, "Hitaki.AlsaFirewireError.IS_UNLOCKED"]], "is_used (hitaki.alsafirewireerror attribute)": [[31, "Hitaki.AlsaFirewireError.IS_USED"]], "motu (hitaki.alsafirewiretype attribute)": [[31, "Hitaki.AlsaFirewireType.MOTU"]], "ok (hitaki.efwprotocolerror attribute)": [[31, "Hitaki.EfwProtocolError.OK"]], "oxfw (hitaki.alsafirewiretype attribute)": [[31, "Hitaki.AlsaFirewireType.OXFW"]], "tascam (hitaki.alsafirewiretype attribute)": [[31, "Hitaki.AlsaFirewireType.TASCAM"]], "timeout (hitaki.efwprotocolerror attribute)": [[31, "Hitaki.EfwProtocolError.TIMEOUT"]], "unsupported (hitaki.efwprotocolerror attribute)": [[31, "Hitaki.EfwProtocolError.UNSUPPORTED"]], "wrong_class (hitaki.alsafirewireerror attribute)": [[31, "Hitaki.AlsaFirewireError.WRONG_CLASS"]], "quark() (hitaki.alsafirewireerror class method)": [[31, "Hitaki.AlsaFirewireError.quark"]], "quark() (hitaki.efwprotocolerror class method)": [[31, "Hitaki.EfwProtocolError.quark"]], "to_label() (hitaki.alsafirewireerror class method)": [[31, "Hitaki.AlsaFirewireError.to_label"]], "to_label() (hitaki.efwprotocolerror class method)": [[31, "Hitaki.EfwProtocolError.to_label"]], "hitaki.alsa_firewire_error_quark()": [[32, "Hitaki.alsa_firewire_error_quark"]], "hitaki.alsa_firewire_error_to_label()": [[32, "Hitaki.alsa_firewire_error_to_label"]], "hitaki.efw_protocol_error_quark()": [[32, "Hitaki.efw_protocol_error_quark"]], "hitaki.efw_protocol_error_to_label()": [[32, "Hitaki.efw_protocol_error_to_label"]]}})