Search.setIndex({"docnames": ["class-structs", "classes", "classes/CycleTime", "classes/FwFcp", "classes/FwFcpClass", "classes/FwNode", "classes/FwNodeClass", "classes/FwReq", "classes/FwReqClass", "classes/FwResp", "classes/FwRespClass", "enums", "functions", "hierarchy", "index", "mapping", "structs"], "filenames": ["class-structs.rst", "classes.rst", "classes/CycleTime.rst", "classes/FwFcp.rst", "classes/FwFcpClass.rst", "classes/FwNode.rst", "classes/FwNodeClass.rst", "classes/FwReq.rst", "classes/FwReqClass.rst", "classes/FwResp.rst", "classes/FwRespClass.rst", "enums.rst", "functions.rst", "hierarchy.rst", "index.rst", "mapping.rst", "structs.rst"], "titles": ["Class Structures", "Classes", "Hinawa.CycleTime", "Hinawa.FwFcp", "Hinawa.FwFcpClass", "Hinawa.FwNode", "Hinawa.FwNodeClass", "Hinawa.FwReq", "Hinawa.FwReqClass", "Hinawa.FwResp", "Hinawa.FwRespClass", "Enums", "Functions", "Hierarchy", "Hinawa 4.0 (4.0.2)", "Symbol Mapping", "Structures"], "terms": {"hinawa": [0, 1, 11, 12, 13, 15, 16], "fwfcpclass": [0, 3, 15], "fwnodeclass": [0, 5, 15], "fwreqclass": [0, 7, 15], "fwrespclass": [0, 4, 9, 15], "fwfcp": [1, 9, 11, 13, 15], "fwnode": [1, 3, 7, 9, 11, 13, 15], "fwreq": [1, 3, 11, 13, 15], "fwresp": [1, 3, 11, 13, 15], "none": [2, 3, 4, 5, 6, 7, 8, 10], "class": [2, 4, 6, 8, 10, 11, 14], "new": [2, 3, 5, 7, 9, 11, 12, 15], "parse_tstamp": [2, 15], "tstamp": [2, 3, 7, 9, 12], "compute_tstamp": [2, 15], "get_clock_id": [2, 15], "get_field": [2, 15], "get_raw": [2, 15], "get_system_tim": [2, 15], "A": [2, 3, 5, 7, 9, 11, 12], "box": 2, "object": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13], "express": [2, 9], "data": [2, 3, 5, 7, 9, 11], "cycl": [2, 3, 7, 9, 11, 12], "time": [2, 3, 7, 9, 12], "struct": [2, 3, 5, 7, 9, 11, 12], "valu": [2, 3, 5, 7, 9, 11, 12], "1394": [2, 3, 5, 7, 9, 11, 12, 14], "ohci": [2, 5, 9, 12, 14], "well": 2, "linux": [2, 3, 5, 7, 9], "system": [2, 5, 9, 11], "refer": [2, 5], "clock_id": [2, 5], "classmethod": [2, 3, 5, 7, 9, 11], "return": [2, 3, 5, 7, 9, 11, 12], "an": [2, 3, 5, 7, 9, 14], "instanc": [2, 3, 5, 7, 9, 11], "type": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "alloc": [2, 9], "version": [2, 3, 5, 7, 9, 11, 12], "2": [2, 3, 5, 7, 9, 11, 12], "6": [2, 3, 7, 9, 11, 12], "paramet": [2, 3, 5, 7, 9, 12], "int": [2, 3, 5, 7, 9, 11, 12], "The": [2, 3, 5, 7, 9, 11, 12], "stamp": [2, 3, 7, 9, 12], "retriev": [2, 5, 12], "from": [2, 7, 12], "each": [2, 3, 7, 9, 12], "context": [2, 12], "result": [2, 12], "pars": [2, 12], "first": [2, 3, 7, 12], "element": [2, 3, 7, 9, 12], "i": [2, 3, 5, 7, 9, 11, 12, 14], "three": [2, 3, 7, 9, 12], "order": [2, 3, 7, 9, 12], "bit": [2, 3, 7, 9, 12], "second": [2, 3, 7, 9, 12], "format": [2, 3, 7, 9, 12], "ieee": [2, 3, 5, 7, 9, 11, 12, 14], "cycle_tim": [2, 3, 5, 7, 9, 12], "regist": [2, 3, 5, 7, 9, 12], "up": [2, 9, 12], "7": [2, 3, 5, 7, 9, 11, 12], "13": [2, 3, 7, 9, 12], "999": [2, 12], "isoc_cycl": [2, 12], "count": [2, 12], "unsign": [2, 3, 7, 9, 12], "16": [2, 3, 7, 9, 11, 12], "integ": [2, 3, 7, 9, 12], "asynchron": [2, 3, 7, 11, 12, 14], "transmit": [2, 12], "AT": [2, 12], "receiv": [2, 3, 5, 7, 9, 12], "ar": [2, 3, 7, 12], "isochron": [2, 3, 5, 7, 9, 12], "IT": [2, 12], "ir": [2, 5, 12], "127": 2, "comput": 2, "complet": [2, 11, 15], "intern": [2, 5], "read": [2, 3, 5, 7, 11], "For": [2, 11], "precis": [2, 9], "should": [2, 3, 7], "call": [2, 5, 7, 9, 11], "condit": 2, "between": [2, 9], "receipt": 2, "access": [2, 3, 4, 5, 6, 7, 8, 9, 10], "within": [2, 7, 9], "8": [2, 3, 9, 11], "numer": [2, 5], "id": [2, 5, 9], "clock": [2, 5], "sourc": [2, 5, 9], "timestamp": [2, 5], "One": [2, 5, 7, 9], "clock_realtim": [2, 5], "0": [2, 3, 5, 7, 9, 11], "clock_monoton": [2, 5], "1": [2, 3, 5, 7, 9, 11, 12], "clock_monotonic_raw": [2, 5], "4": [2, 3, 5, 7, 9, 11], "avail": [2, 5], "uapi": [2, 5], "kernel": [2, 3, 5, 7, 9, 14], "get": [2, 5], "hardwar": [2, 5, 9, 14], "includ": [2, 3, 7, 9], "offset": [2, 9], "its": 2, "arrai": [2, 3, 7, 9], "sec": 2, "7999": 2, "third": [2, 3], "3071": 2, "raw": 2, "tv_sec": 2, "part": 2, "tv_nsec": 2, "nanosecond": 2, "enough": [2, 3, 7], "size": [2, 9, 11], "strorag": 2, "gobject": [3, 5, 6, 7, 8, 9, 10, 11, 13, 14], "subclass": [3, 5, 7, 9], "inherit": [3, 5, 7, 9], "5": [3, 5, 7, 9, 11], "37": [3, 5, 7, 9], "objectclass": [3, 5, 6, 7, 8, 9, 10], "avc_transact": [3, 15], "cmd": 3, "resp": 3, "timeout_m": [3, 7], "avc_transaction_with_tstamp": [3, 15], "bind": [3, 15], "node": [3, 5, 7, 9, 11], "command": [3, 15], "command_with_tstamp": [3, 15], "unbind": [3, 15], "do_respond": [3, 7], "gener": [3, 5, 9, 11, 15], "frame": [3, 7, 9], "3": [3, 7, 9, 11], "name": [3, 4, 5, 6, 7, 8, 9, 10], "flag": [3, 5, 7, 9], "short": [3, 5, 7, 9], "descript": [3, 4, 5, 6, 7, 8, 9, 10, 14], "bound": [3, 11], "bool": [3, 5, 7, 9], "r": [3, 4, 5, 6, 7, 8, 9, 10], "whether": [3, 9], "thi": [3, 5, 7, 9, 14], "protocol": 3, "ani": [3, 5, 9], "respond": [3, 4, 7, 8, 9], "emit": [3, 5, 7, 9], "when": [3, 5, 7, 9], "transfer": [3, 7, 9], "packet": [3, 7], "respons": [3, 7, 9, 11], "fcp": 3, "process": [3, 7], "successfulli": [3, 5, 7, 9], "content": [3, 5, 7], "parent_inst": [3, 5, 7, 9], "kwarg": [3, 5, 7, 9], "base": [3, 5, 7, 9, 11], "abstract": [3, 5, 7, 9], "No": [3, 5, 7, 9], "structur": [3, 5, 7, 9, 14], "transact": [3, 7, 9, 11, 14, 15], "executor": [3, 7], "bu": [3, 5, 7, 9, 11, 14], "support": [3, 7], "function": [3, 7, 9, 14], "control": 3, "iec": 3, "61883": 3, "consist": 3, "pair": 3, "while": 3, "ha": [3, 7, 9, 11, 12], "mechan": 3, "match": 3, "them": 3, "In": [3, 5, 9], "av": 3, "c": [3, 15], "digit": 3, "interfac": 3, "set": [3, 11], "specif": [3, 9, 11], "sep": 3, "2004": 3, "1394ta": 3, "thei": 3, "loos": 3, "emploi": 3, "wai": 3, "align": [3, 5], "byte": [3, 5, 7, 9], "applic": [3, 5], "instanti": [3, 5, 7, 9], "request": [3, 7, 9, 10, 11, 15], "argument": [3, 7, 9], "point": [3, 7], "immut": [3, 7], "caller": [3, 7], "give": [3, 7], "buffer": [3, 7], "space": [3, 7, 11], "against": [3, 5, 7], "sinc": [3, 7], "librari": [3, 7, 14], "perform": [3, 7], "realloc": [3, 7], "due": [3, 7, 11], "reason": [3, 7], "pointer": [3, 7], "mutabl": [3, 7], "timeout": [3, 7, 11, 15], "wait": [3, 7], "finish": [3, 5, 7, 9], "rais": [3, 5, 7, 9], "glib": [3, 5, 7, 9, 11, 12, 14], "error": [3, 5, 7, 9, 11, 12], "true": [3, 5, 7, 9], "overal": [3, 5, 7, 9], "oper": [3, 5, 7, 9, 11, 14], "otherwis": [3, 5, 7, 9], "fals": [3, 5, 7, 9], "us": [3, 5, 11], "initi": [3, 7, 9], "expand": 3, "case": 3, "interim": 3, "statu": 3, "arriv": [3, 7, 9], "thu": 3, "advanc": 3, "which": [3, 5, 7, 9, 11, 12], "wa": [3, 7], "sent": [3, 7], "start": [3, 9, 11], "listen": [3, 5, 9], "subact": [3, 7, 9], "py": [3, 5, 7, 9], "func": [3, 5, 7, 9], "two": [3, 7], "higher": [3, 7, 9], "low": [3, 7, 9], "rest": [3, 7, 9], "If": [3, 7, 9], "abi": [3, 7, 9], "firewir": [3, 5, 7, 9, 11], "subsystem": [3, 7, 9], "less": [3, 7, 9], "than": [3, 7, 9, 11], "invalid": [3, 7, 9, 11, 15], "obj": [3, 7, 9], "g_maxuint16": 3, "stop": [3, 9], "pend": 3, "forc": 3, "abort": [3, 11, 15], "topologi": [3, 5], "closur": [3, 5, 7, 9], "fw_fcp": 3, "run_last": [3, 5, 7, 9], "g_maxuint": [3, 7, 9], "prop": [3, 5, 9], "is_bound": 3, "default": [3, 5, 9], "readabl": [3, 5, 9], "parent_class": [4, 6, 8, 10], "create_sourc": [5, 15], "get_config_rom": [5, 15], "open": [5, 11, 15], "path": 5, "open_flag": 5, "read_cycle_tim": [5, 15], "do_bus_upd": 5, "do_disconnect": 5, "manag": 5, "plai": 5, "role": 5, "current": 5, "card": [5, 9], "index": [5, 9], "commun": 5, "resourc": 5, "local": [5, 9], "associ": [5, 11], "effect": 5, "after": 5, "root": 5, "updat": 5, "disconnect": [5, 6, 11, 15], "anymor": 5, "event": [5, 7], "addition": 5, "provid": [5, 9], "some": 5, "fundament": 5, "inform": 5, "about": 5, "gsrc": 5, "creat": 5, "maincontext": 5, "dispatch": [5, 7], "imag": 5, "configur": 5, "rom": 5, "cach": 5, "big": 5, "endian": 5, "str": 5, "charact": [5, 11], "devic": [5, 7, 11], "o_rdonli": 5, "fulfil": 5, "cycletim": [5, 15, 16], "dedic": [5, 9], "bus_upd": [5, 6], "fw_node": 5, "handler": [5, 7, 9], "can": 5, "via": 5, "It": 5, "": 5, "prefer": 5, "unref": 5, "immedi": 5, "releas": [5, 9, 15], "file": 5, "descriptor": 5, "bus_manager_node_id": 5, "card_id": [5, 9], "stabl": 5, "ir_manager_node_id": 5, "local_node_id": 5, "node_id": 5, "root_node_id": 5, "tcode": [7, 9, 11], "addr": [7, 9], "length": 7, "transaction_with_tstamp": [7, 15], "rcode": [7, 9, 11], "request_tstamp": 7, "response_tstamp": 7, "all": 7, "defiend": 7, "1212": 7, "fwtcode": [7, 9, 11, 15], "code": [7, 11, 12], "enum": [7, 9, 12, 14], "destin": [7, 9], "address": [7, 9, 11], "target": 7, "rang": [7, 9, 11], "unit": 7, "lock": [7, 11], "execut": 7, "given": 7, "accord": 7, "run": 7, "millisecond": 7, "thin": 7, "wrapper": 7, "fwrcode": [7, 9, 11, 12, 15], "fw_req": 7, "reserv": [9, 11, 15], "width": 9, "reserve_within_region": [9, 15], "region_start": 9, "region_end": 9, "set_resp_fram": [9, 15], "do_request": 9, "src_node_id": 9, "dst_node_id": 9, "onc": 9, "success": 9, "whenev": 9, "specifi": 9, "indic": 9, "essenc": 9, "variant": 9, "region": 9, "look": 9, "end": 9, "mai": 9, "vari": 9, "everi": 9, "enumer": 9, "correspond": 9, "defin": 9, "fw_resp": 9, "expect": [9, 11], "furthermor": 9, "src": 9, "dst": 9, "have": 9, "is_reserv": 9, "fwfcperror": [11, 12, 15], "fwnodeerror": [11, 12, 15], "fwreqerror": [11, 15], "fwresperror": [11, 12, 15], "genum": 11, "quark": [11, 12, 15], "alia": [11, 12], "cancel": [11, 15], "large_resp": [11, 15], "larger": 11, "reset": 11, "domain": [11, 12], "alreadi": 11, "not_open": [11, 15], "fail": [11, 15], "represent": 11, "send_error": [11, 15], "send": 11, "17": 11, "busi": [11, 15], "18": 11, "busy": 11, "19": 11, "no_ack": [11, 15], "20": 11, "acknowledg": 11, "21": 11, "out": 11, "conflict_error": [11, 15], "conflict": 11, "data_error": [11, 15], "type_error": [11, 15], "address_error": [11, 15], "actual": 11, "equival": 11, "addr_space_us": [11, 15], "exclus": 11, "write_quadlet_request": [11, 15], "write": 11, "quadlet": 11, "write_block_request": [11, 15], "block": 11, "stream_data": [11, 15], "10": 11, "stream": 11, "lock_respons": [11, 15], "11": 11, "lock_mask_swap": [11, 15], "mask": 11, "swap": 11, "lock_compare_swap": [11, 15], "compar": 11, "lock_fetch_add": [11, 15], "fetch": 11, "add": 11, "write_respons": [11, 15], "lock_little_add": [11, 15], "littl": 11, "lock_bounded_add": [11, 15], "lock_wrap_add": [11, 15], "22": 11, "wrap": 11, "lock_vendor_depend": [11, 15], "23": 11, "vendor": 11, "depend": [11, 14], "read_quadlet_request": [11, 15], "read_block_request": [11, 15], "read_quadlet_respons": [11, 15], "read_block_respons": [11, 15], "cycle_start": [11, 15], "lock_request": [11, 15], "9": 11, "cycle_time_parse_tstamp": [12, 15], "fw_fcp_error_quark": [12, 15], "fw_node_error_quark": [12, 15], "fw_req_error_quark": [12, 15], "fw_resp_error_quark": [12, 15], "field": 12, "parent": 14, "project": 14, "libhinawa": 14, "o": 14, "homepag": 14, "http": 14, "git": 14, "org": 14, "pub": 14, "scm": 14, "lib": 14, "ieee1394": 14, "debian": 14, "packag": 14, "gir1": 14, "hierarchi": 14, "symbol": 14, "map": 14, "python": 15, "hinawa_cycle_time_compute_tstamp": 15, "hinawa_cycle_time_get_clock_id": 15, "hinawa_cycle_time_get_field": 15, "hinawa_cycle_time_get_raw": 15, "hinawa_cycle_time_get_system_tim": 15, "hinawa_cycle_time_new": 15, "hinawa_cycle_time_parse_tstamp": 15, "hinawa_fw_fcp_avc_transact": 15, "hinawa_fw_fcp_avc_transaction_with_tstamp": 15, "hinawa_fw_fcp_bind": 15, "hinawa_fw_fcp_command": 15, "hinawa_fw_fcp_command_with_tstamp": 15, "hinawa_fw_fcp_error_abort": 15, "hinawa_fw_fcp_error_large_resp": 15, "hinawa_fw_fcp_error_quark": 15, "hinawa_fw_fcp_error_timeout": 15, "hinawa_fw_fcp_new": 15, "hinawa_fw_fcp_unbind": 15, "hinawa_fw_node_create_sourc": 15, "hinawa_fw_node_error_disconnect": 15, "hinawa_fw_node_error_fail": 15, "hinawa_fw_node_error_not_open": 15, "hinawa_fw_node_error_open": 15, "hinawa_fw_node_error_quark": 15, "hinawa_fw_node_get_config_rom": 15, "hinawa_fw_node_new": 15, "hinawa_fw_node_open": 15, "hinawa_fw_node_read_cycle_tim": 15, "hinawa_fw_rcode_address_error": 15, "hinawa_fw_rcode_busi": 15, "hinawa_fw_rcode_cancel": 15, "hinawa_fw_rcode_complet": 15, "hinawa_fw_rcode_conflict_error": 15, "hinawa_fw_rcode_data_error": 15, "hinawa_fw_rcode_gener": 15, "hinawa_fw_rcode_invalid": 15, "hinawa_fw_rcode_no_ack": 15, "hinawa_fw_rcode_send_error": 15, "hinawa_fw_rcode_type_error": 15, "hinawa_fw_req_error_address_error": 15, "hinawa_fw_req_error_busi": 15, "hinawa_fw_req_error_cancel": 15, "hinawa_fw_req_error_conflict_error": 15, "hinawa_fw_req_error_data_error": 15, "hinawa_fw_req_error_gener": 15, "hinawa_fw_req_error_invalid": 15, "hinawa_fw_req_error_no_ack": 15, "hinawa_fw_req_error_quark": 15, "hinawa_fw_req_error_send_error": 15, "hinawa_fw_req_error_type_error": 15, "hinawa_fw_req_new": 15, "hinawa_fw_req_request": 15, "hinawa_fw_req_transact": 15, "hinawa_fw_req_transaction_with_tstamp": 15, "hinawa_fw_resp_error_addr_space_us": 15, "hinawa_fw_resp_error_fail": 15, "hinawa_fw_resp_error_quark": 15, "hinawa_fw_resp_error_reserv": 15, "hinawa_fw_resp_new": 15, "hinawa_fw_resp_releas": 15, "hinawa_fw_resp_reserv": 15, "hinawa_fw_resp_reserve_within_region": 15, "hinawa_fw_resp_set_resp_fram": 15, "hinawa_fw_tcode_cycle_start": 15, "hinawa_fw_tcode_lock_bounded_add": 15, "hinawa_fw_tcode_lock_compare_swap": 15, "hinawa_fw_tcode_lock_fetch_add": 15, "hinawa_fw_tcode_lock_little_add": 15, "hinawa_fw_tcode_lock_mask_swap": 15, "hinawa_fw_tcode_lock_request": 15, "hinawa_fw_tcode_lock_respons": 15, "hinawa_fw_tcode_lock_vendor_depend": 15, "hinawa_fw_tcode_lock_wrap_add": 15, "hinawa_fw_tcode_read_block_request": 15, "hinawa_fw_tcode_read_block_respons": 15, "hinawa_fw_tcode_read_quadlet_request": 15, "hinawa_fw_tcode_read_quadlet_respons": 15, "hinawa_fw_tcode_stream_data": 15, "hinawa_fw_tcode_write_block_request": 15, "hinawa_fw_tcode_write_quadlet_request": 15, "hinawa_fw_tcode_write_respons": 15, "hinawacycletim": 15, "hinawafwfcp": 15, "hinawafwfcpclass": 15, "hinawafwfcperror": 15, "hinawafwnod": 15, "hinawafwnodeclass": 15, "hinawafwnodeerror": 15, "hinawafwrcod": 15, "hinawafwreq": 15, "hinawafwreqclass": 15, "hinawafwreqerror": 15, "hinawafwresp": 15, "hinawafwrespclass": 15, "hinawafwresperror": 15, "hinawafwtcod": 15}, "objects": {"Hinawa": [[2, 0, 1, "", "CycleTime"], [3, 0, 1, "", "FwFcp"], [4, 0, 1, "", "FwFcpClass"], [11, 0, 1, "", "FwFcpError"], [5, 0, 1, "", "FwNode"], [6, 0, 1, "", "FwNodeClass"], [11, 0, 1, "", "FwNodeError"], [11, 0, 1, "", "FwRcode"], [7, 0, 1, "", "FwReq"], [8, 0, 1, "", "FwReqClass"], [11, 0, 1, "", "FwReqError"], [9, 0, 1, "", "FwResp"], [10, 0, 1, "", "FwRespClass"], [11, 0, 1, "", "FwRespError"], [11, 0, 1, "", "FwTcode"], [12, 3, 1, "", "cycle_time_parse_tstamp"], [12, 3, 1, "", "fw_fcp_error_quark"], [12, 3, 1, "", "fw_node_error_quark"], [12, 3, 1, "", "fw_req_error_quark"], [12, 3, 1, "", "fw_resp_error_quark"]], "Hinawa.CycleTime": [[2, 1, 1, "", "compute_tstamp"], [2, 1, 1, "", "get_clock_id"], [2, 1, 1, "", "get_fields"], [2, 1, 1, "", "get_raw"], [2, 1, 1, "", "get_system_time"], [2, 1, 1, "", "new"], [2, 1, 1, "", "parse_tstamp"]], "Hinawa.FwFcp": [[3, 1, 1, "", "avc_transaction"], [3, 1, 1, "", "avc_transaction_with_tstamp"], [3, 1, 1, "", "bind"], [3, 1, 1, "", "command"], [3, 1, 1, "", "command_with_tstamp"], [3, 1, 1, "", "do_responded"], [3, 1, 1, "", "new"], [3, 1, 1, "", "unbind"]], "Hinawa.FwFcp.props": [[3, 2, 1, "", "is_bound"]], "Hinawa.FwFcp.signals": [[3, 3, 1, "", "responded"]], "Hinawa.FwFcpError": [[11, 4, 1, "", "ABORTED"], [11, 4, 1, "", "LARGE_RESP"], [11, 4, 1, "", "TIMEOUT"], [11, 1, 1, "", "quark"]], "Hinawa.FwNode": [[5, 1, 1, "", "create_source"], [5, 1, 1, "", "do_bus_update"], [5, 1, 1, "", "do_disconnected"], [5, 1, 1, "", "get_config_rom"], [5, 1, 1, "", "new"], [5, 1, 1, "", "open"], [5, 1, 1, "", "read_cycle_time"]], "Hinawa.FwNode.props": [[5, 2, 1, "", "bus_manager_node_id"], [5, 2, 1, "", "card_id"], [5, 2, 1, "", "generation"], [5, 2, 1, "", "ir_manager_node_id"], [5, 2, 1, "", "local_node_id"], [5, 2, 1, "", "node_id"], [5, 2, 1, "", "root_node_id"]], "Hinawa.FwNode.signals": [[5, 3, 1, "", "bus_update"], [5, 3, 1, "", "disconnected"]], "Hinawa.FwNodeError": [[11, 4, 1, "", "DISCONNECTED"], [11, 4, 1, "", "FAILED"], [11, 4, 1, "", "NOT_OPENED"], [11, 4, 1, "", "OPENED"], [11, 1, 1, "", "quark"]], "Hinawa.FwRcode": [[11, 4, 1, "", "ADDRESS_ERROR"], [11, 4, 1, "", "BUSY"], [11, 4, 1, "", "CANCELLED"], [11, 4, 1, "", "COMPLETE"], [11, 4, 1, "", "CONFLICT_ERROR"], [11, 4, 1, "", "DATA_ERROR"], [11, 4, 1, "", "GENERATION"], [11, 4, 1, "", "INVALID"], [11, 4, 1, "", "NO_ACK"], [11, 4, 1, "", "SEND_ERROR"], [11, 4, 1, "", "TYPE_ERROR"]], "Hinawa.FwReq": [[7, 1, 1, "", "do_responded"], [7, 1, 1, "", "new"], [7, 1, 1, "", "request"], [7, 1, 1, "", "transaction"], [7, 1, 1, "", "transaction_with_tstamp"]], "Hinawa.FwReq.signals": [[7, 3, 1, "", "responded"]], "Hinawa.FwReqError": [[11, 4, 1, "", "ADDRESS_ERROR"], [11, 4, 1, "", "BUSY"], [11, 4, 1, "", "CANCELLED"], [11, 4, 1, "", "CONFLICT_ERROR"], [11, 4, 1, "", "DATA_ERROR"], [11, 4, 1, "", "GENERATION"], [11, 4, 1, "", "INVALID"], [11, 4, 1, "", "NO_ACK"], [11, 4, 1, "", "SEND_ERROR"], [11, 4, 1, "", "TYPE_ERROR"], [11, 1, 1, "", "quark"]], "Hinawa.FwResp": [[9, 1, 1, "", "do_requested"], [9, 1, 1, "", "new"], [9, 1, 1, "", "release"], [9, 1, 1, "", "reserve"], [9, 1, 1, "", "reserve_within_region"], [9, 1, 1, "", "set_resp_frame"]], "Hinawa.FwResp.props": [[9, 2, 1, "", "is_reserved"], [9, 2, 1, "", "offset"], [9, 2, 1, "", "width"]], "Hinawa.FwResp.signals": [[9, 3, 1, "", "requested"]], "Hinawa.FwRespError": [[11, 4, 1, "", "ADDR_SPACE_USED"], [11, 4, 1, "", "FAILED"], [11, 4, 1, "", "RESERVED"], [11, 1, 1, "", "quark"]], "Hinawa.FwTcode": [[11, 4, 1, "", "CYCLE_START"], [11, 4, 1, "", "LOCK_BOUNDED_ADD"], [11, 4, 1, "", "LOCK_COMPARE_SWAP"], [11, 4, 1, "", "LOCK_FETCH_ADD"], [11, 4, 1, "", "LOCK_LITTLE_ADD"], [11, 4, 1, "", "LOCK_MASK_SWAP"], [11, 4, 1, "", "LOCK_REQUEST"], [11, 4, 1, "", "LOCK_RESPONSE"], [11, 4, 1, "", "LOCK_VENDOR_DEPENDENT"], [11, 4, 1, "", "LOCK_WRAP_ADD"], [11, 4, 1, "", "READ_BLOCK_REQUEST"], [11, 4, 1, "", "READ_BLOCK_RESPONSE"], [11, 4, 1, "", "READ_QUADLET_REQUEST"], [11, 4, 1, "", "READ_QUADLET_RESPONSE"], [11, 4, 1, "", "STREAM_DATA"], [11, 4, 1, "", "WRITE_BLOCK_REQUEST"], [11, 4, 1, "", "WRITE_QUADLET_REQUEST"], [11, 4, 1, "", "WRITE_RESPONSE"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:data", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "data", "Python data"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"class": [0, 1, 3, 5, 7, 9], "structur": [0, 16], "hinawa": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14], "cycletim": 2, "field": [2, 3, 4, 5, 6, 7, 8, 9, 10], "method": [2, 3, 4, 5, 6, 7, 8, 9, 10], "detail": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "fwfcp": 3, "virtual": [3, 5, 7, 9], "properti": [3, 5, 7, 9], "signal": [3, 5, 7, 9], "fwfcpclass": 4, "fwnode": 5, "fwnodeclass": 6, "fwreq": 7, "fwreqclass": 8, "fwresp": 9, "fwrespclass": 10, "enum": 11, "function": 12, "hierarchi": 13, "4": 14, "0": 14, "2": 14, "api": 14, "symbol": 15, "map": 15}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Class Structures": [[0, "class-structures"]], "Classes": [[1, "classes"]], "Hinawa.CycleTime": [[2, "hinawa-cycletime"]], "Fields": [[2, "fields"], [3, "fields"], [4, "fields"], [5, "fields"], [6, "fields"], [7, "fields"], [8, "fields"], [9, "fields"], [10, "fields"]], "Methods": [[2, "methods"], [3, "methods"], [4, "methods"], [5, "methods"], [6, "methods"], [7, "methods"], [8, "methods"], [9, "methods"], [10, "methods"]], "Details": [[2, "details"], [4, "details"], [6, "details"], [8, "details"], [10, "details"], [11, "details"], [12, "details"]], "Hinawa.FwFcp": [[3, "hinawa-fwfcp"]], "Virtual Methods": [[3, "virtual-methods"], [5, "virtual-methods"], [7, "virtual-methods"], [9, "virtual-methods"]], "Properties": [[3, "properties"], [5, "properties"], [7, "properties"], [9, "properties"]], "Signals": [[3, "signals"], [5, "signals"], [7, "signals"], [9, "signals"]], "Class Details": [[3, "class-details"], [5, "class-details"], [7, "class-details"], [9, "class-details"]], "Signal Details": [[3, "signal-details"], [5, "signal-details"], [7, "signal-details"], [9, "signal-details"]], "Property Details": [[3, "property-details"], [5, "property-details"], [9, "property-details"]], "Hinawa.FwFcpClass": [[4, "hinawa-fwfcpclass"]], "Hinawa.FwNode": [[5, "hinawa-fwnode"]], "Hinawa.FwNodeClass": [[6, "hinawa-fwnodeclass"]], "Hinawa.FwReq": [[7, "hinawa-fwreq"]], "Hinawa.FwReqClass": [[8, "hinawa-fwreqclass"]], "Hinawa.FwResp": [[9, "hinawa-fwresp"]], "Hinawa.FwRespClass": [[10, "hinawa-fwrespclass"]], "Enums": [[11, "enums"]], "Functions": [[12, "functions"]], "Hierarchy": [[13, "hierarchy"]], "Hinawa 4.0 (4.0.2)": [[14, "hinawa-4-0-4-0-2"]], "API": [[14, "api"]], "Symbol Mapping": [[15, "symbol-mapping"]], "Structures": [[16, "structures"]]}, "indexentries": {"hinawa.cycletime (built-in class)": [[2, "Hinawa.CycleTime"]], "compute_tstamp() (hinawa.cycletime method)": [[2, "Hinawa.CycleTime.compute_tstamp"]], "get_clock_id() (hinawa.cycletime method)": [[2, "Hinawa.CycleTime.get_clock_id"]], "get_fields() (hinawa.cycletime method)": [[2, "Hinawa.CycleTime.get_fields"]], "get_raw() (hinawa.cycletime method)": [[2, "Hinawa.CycleTime.get_raw"]], "get_system_time() (hinawa.cycletime method)": [[2, "Hinawa.CycleTime.get_system_time"]], "new() (hinawa.cycletime class method)": [[2, "Hinawa.CycleTime.new"]], "parse_tstamp() (hinawa.cycletime class method)": [[2, "Hinawa.CycleTime.parse_tstamp"]], "hinawa.fwfcp (built-in class)": [[3, "Hinawa.FwFcp"]], "hinawa.fwfcp.props.is_bound (built-in variable)": [[3, "Hinawa.FwFcp.props.is_bound"]], "hinawa.fwfcp.signals.responded()": [[3, "Hinawa.FwFcp.signals.responded"]], "avc_transaction() (hinawa.fwfcp method)": [[3, "Hinawa.FwFcp.avc_transaction"]], "avc_transaction_with_tstamp() (hinawa.fwfcp method)": [[3, "Hinawa.FwFcp.avc_transaction_with_tstamp"]], "bind() (hinawa.fwfcp method)": [[3, "Hinawa.FwFcp.bind"]], "built-in function": [[3, "Hinawa.FwFcp.signals.responded"], [5, "Hinawa.FwNode.signals.bus_update"], [5, "Hinawa.FwNode.signals.disconnected"], [7, "Hinawa.FwReq.signals.responded"], [9, "Hinawa.FwResp.signals.requested"], [12, "Hinawa.cycle_time_parse_tstamp"], [12, "Hinawa.fw_fcp_error_quark"], [12, "Hinawa.fw_node_error_quark"], [12, "Hinawa.fw_req_error_quark"], [12, "Hinawa.fw_resp_error_quark"]], "command() (hinawa.fwfcp method)": [[3, "Hinawa.FwFcp.command"]], "command_with_tstamp() (hinawa.fwfcp method)": [[3, "Hinawa.FwFcp.command_with_tstamp"]], "do_responded() (hinawa.fwfcp method)": [[3, "Hinawa.FwFcp.do_responded"]], "new() (hinawa.fwfcp class method)": [[3, "Hinawa.FwFcp.new"]], "unbind() (hinawa.fwfcp method)": [[3, "Hinawa.FwFcp.unbind"]], "hinawa.fwfcpclass (built-in class)": [[4, "Hinawa.FwFcpClass"]], "hinawa.fwnode (built-in class)": [[5, "Hinawa.FwNode"]], "hinawa.fwnode.props.bus_manager_node_id (built-in variable)": [[5, "Hinawa.FwNode.props.bus_manager_node_id"]], "hinawa.fwnode.props.card_id (built-in variable)": [[5, "Hinawa.FwNode.props.card_id"]], "hinawa.fwnode.props.generation (built-in variable)": [[5, "Hinawa.FwNode.props.generation"]], "hinawa.fwnode.props.ir_manager_node_id (built-in variable)": [[5, "Hinawa.FwNode.props.ir_manager_node_id"]], "hinawa.fwnode.props.local_node_id (built-in variable)": [[5, "Hinawa.FwNode.props.local_node_id"]], "hinawa.fwnode.props.node_id (built-in variable)": [[5, "Hinawa.FwNode.props.node_id"]], "hinawa.fwnode.props.root_node_id (built-in variable)": [[5, "Hinawa.FwNode.props.root_node_id"]], "hinawa.fwnode.signals.bus_update()": [[5, "Hinawa.FwNode.signals.bus_update"]], "hinawa.fwnode.signals.disconnected()": [[5, "Hinawa.FwNode.signals.disconnected"]], "create_source() (hinawa.fwnode method)": [[5, "Hinawa.FwNode.create_source"]], "do_bus_update() (hinawa.fwnode method)": [[5, "Hinawa.FwNode.do_bus_update"]], "do_disconnected() (hinawa.fwnode method)": [[5, "Hinawa.FwNode.do_disconnected"]], "get_config_rom() (hinawa.fwnode method)": [[5, "Hinawa.FwNode.get_config_rom"]], "new() (hinawa.fwnode class method)": [[5, "Hinawa.FwNode.new"]], "open() (hinawa.fwnode method)": [[5, "Hinawa.FwNode.open"]], "read_cycle_time() (hinawa.fwnode method)": [[5, "Hinawa.FwNode.read_cycle_time"]], "hinawa.fwnodeclass (built-in class)": [[6, "Hinawa.FwNodeClass"]], "hinawa.fwreq (built-in class)": [[7, "Hinawa.FwReq"]], "hinawa.fwreq.signals.responded()": [[7, "Hinawa.FwReq.signals.responded"]], "do_responded() (hinawa.fwreq method)": [[7, "Hinawa.FwReq.do_responded"]], "new() (hinawa.fwreq class method)": [[7, "Hinawa.FwReq.new"]], "request() (hinawa.fwreq method)": [[7, "Hinawa.FwReq.request"]], "transaction() (hinawa.fwreq method)": [[7, "Hinawa.FwReq.transaction"]], "transaction_with_tstamp() (hinawa.fwreq method)": [[7, "Hinawa.FwReq.transaction_with_tstamp"]], "hinawa.fwreqclass (built-in class)": [[8, "Hinawa.FwReqClass"]], "hinawa.fwresp (built-in class)": [[9, "Hinawa.FwResp"]], "hinawa.fwresp.props.is_reserved (built-in variable)": [[9, "Hinawa.FwResp.props.is_reserved"]], "hinawa.fwresp.props.offset (built-in variable)": [[9, "Hinawa.FwResp.props.offset"]], "hinawa.fwresp.props.width (built-in variable)": [[9, "Hinawa.FwResp.props.width"]], "hinawa.fwresp.signals.requested()": [[9, "Hinawa.FwResp.signals.requested"]], "do_requested() (hinawa.fwresp method)": [[9, "Hinawa.FwResp.do_requested"]], "new() (hinawa.fwresp class method)": [[9, "Hinawa.FwResp.new"]], "release() (hinawa.fwresp method)": [[9, "Hinawa.FwResp.release"]], "reserve() (hinawa.fwresp method)": [[9, "Hinawa.FwResp.reserve"]], "reserve_within_region() (hinawa.fwresp method)": [[9, "Hinawa.FwResp.reserve_within_region"]], "set_resp_frame() (hinawa.fwresp method)": [[9, "Hinawa.FwResp.set_resp_frame"]], "hinawa.fwrespclass (built-in class)": [[10, "Hinawa.FwRespClass"]], "aborted (hinawa.fwfcperror attribute)": [[11, "Hinawa.FwFcpError.ABORTED"]], "address_error (hinawa.fwrcode attribute)": [[11, "Hinawa.FwRcode.ADDRESS_ERROR"]], "address_error (hinawa.fwreqerror attribute)": [[11, "Hinawa.FwReqError.ADDRESS_ERROR"]], "addr_space_used (hinawa.fwresperror attribute)": [[11, "Hinawa.FwRespError.ADDR_SPACE_USED"]], "busy (hinawa.fwrcode attribute)": [[11, "Hinawa.FwRcode.BUSY"]], "busy (hinawa.fwreqerror attribute)": [[11, "Hinawa.FwReqError.BUSY"]], "cancelled (hinawa.fwrcode attribute)": [[11, "Hinawa.FwRcode.CANCELLED"]], "cancelled (hinawa.fwreqerror attribute)": [[11, "Hinawa.FwReqError.CANCELLED"]], "complete (hinawa.fwrcode attribute)": [[11, "Hinawa.FwRcode.COMPLETE"]], "conflict_error (hinawa.fwrcode attribute)": [[11, "Hinawa.FwRcode.CONFLICT_ERROR"]], "conflict_error (hinawa.fwreqerror attribute)": [[11, "Hinawa.FwReqError.CONFLICT_ERROR"]], "cycle_start (hinawa.fwtcode attribute)": [[11, "Hinawa.FwTcode.CYCLE_START"]], "data_error (hinawa.fwrcode attribute)": [[11, "Hinawa.FwRcode.DATA_ERROR"]], "data_error (hinawa.fwreqerror attribute)": [[11, "Hinawa.FwReqError.DATA_ERROR"]], "disconnected (hinawa.fwnodeerror attribute)": [[11, "Hinawa.FwNodeError.DISCONNECTED"]], "failed (hinawa.fwnodeerror attribute)": [[11, "Hinawa.FwNodeError.FAILED"]], "failed (hinawa.fwresperror attribute)": [[11, "Hinawa.FwRespError.FAILED"]], "generation (hinawa.fwrcode attribute)": [[11, "Hinawa.FwRcode.GENERATION"]], "generation (hinawa.fwreqerror attribute)": [[11, "Hinawa.FwReqError.GENERATION"]], "hinawa.fwfcperror (built-in class)": [[11, "Hinawa.FwFcpError"]], "hinawa.fwnodeerror (built-in class)": [[11, "Hinawa.FwNodeError"]], "hinawa.fwrcode (built-in class)": [[11, "Hinawa.FwRcode"]], "hinawa.fwreqerror (built-in class)": [[11, "Hinawa.FwReqError"]], "hinawa.fwresperror (built-in class)": [[11, "Hinawa.FwRespError"]], "hinawa.fwtcode (built-in class)": [[11, "Hinawa.FwTcode"]], "invalid (hinawa.fwrcode attribute)": [[11, "Hinawa.FwRcode.INVALID"]], "invalid (hinawa.fwreqerror attribute)": [[11, "Hinawa.FwReqError.INVALID"]], "large_resp (hinawa.fwfcperror attribute)": [[11, "Hinawa.FwFcpError.LARGE_RESP"]], "lock_bounded_add (hinawa.fwtcode attribute)": [[11, "Hinawa.FwTcode.LOCK_BOUNDED_ADD"]], "lock_compare_swap (hinawa.fwtcode attribute)": [[11, "Hinawa.FwTcode.LOCK_COMPARE_SWAP"]], "lock_fetch_add (hinawa.fwtcode attribute)": [[11, "Hinawa.FwTcode.LOCK_FETCH_ADD"]], "lock_little_add (hinawa.fwtcode attribute)": [[11, "Hinawa.FwTcode.LOCK_LITTLE_ADD"]], "lock_mask_swap (hinawa.fwtcode attribute)": [[11, "Hinawa.FwTcode.LOCK_MASK_SWAP"]], "lock_request (hinawa.fwtcode attribute)": [[11, "Hinawa.FwTcode.LOCK_REQUEST"]], "lock_response (hinawa.fwtcode attribute)": [[11, "Hinawa.FwTcode.LOCK_RESPONSE"]], "lock_vendor_dependent (hinawa.fwtcode attribute)": [[11, "Hinawa.FwTcode.LOCK_VENDOR_DEPENDENT"]], "lock_wrap_add (hinawa.fwtcode attribute)": [[11, "Hinawa.FwTcode.LOCK_WRAP_ADD"]], "not_opened (hinawa.fwnodeerror attribute)": [[11, "Hinawa.FwNodeError.NOT_OPENED"]], "no_ack (hinawa.fwrcode attribute)": [[11, "Hinawa.FwRcode.NO_ACK"]], "no_ack (hinawa.fwreqerror attribute)": [[11, "Hinawa.FwReqError.NO_ACK"]], "opened (hinawa.fwnodeerror attribute)": [[11, "Hinawa.FwNodeError.OPENED"]], "read_block_request (hinawa.fwtcode attribute)": [[11, "Hinawa.FwTcode.READ_BLOCK_REQUEST"]], "read_block_response (hinawa.fwtcode attribute)": [[11, "Hinawa.FwTcode.READ_BLOCK_RESPONSE"]], "read_quadlet_request (hinawa.fwtcode attribute)": [[11, "Hinawa.FwTcode.READ_QUADLET_REQUEST"]], "read_quadlet_response (hinawa.fwtcode attribute)": [[11, "Hinawa.FwTcode.READ_QUADLET_RESPONSE"]], "reserved (hinawa.fwresperror attribute)": [[11, "Hinawa.FwRespError.RESERVED"]], "send_error (hinawa.fwrcode attribute)": [[11, "Hinawa.FwRcode.SEND_ERROR"]], "send_error (hinawa.fwreqerror attribute)": [[11, "Hinawa.FwReqError.SEND_ERROR"]], "stream_data (hinawa.fwtcode attribute)": [[11, "Hinawa.FwTcode.STREAM_DATA"]], "timeout (hinawa.fwfcperror attribute)": [[11, "Hinawa.FwFcpError.TIMEOUT"]], "type_error (hinawa.fwrcode attribute)": [[11, "Hinawa.FwRcode.TYPE_ERROR"]], "type_error (hinawa.fwreqerror attribute)": [[11, "Hinawa.FwReqError.TYPE_ERROR"]], "write_block_request (hinawa.fwtcode attribute)": [[11, "Hinawa.FwTcode.WRITE_BLOCK_REQUEST"]], "write_quadlet_request (hinawa.fwtcode attribute)": [[11, "Hinawa.FwTcode.WRITE_QUADLET_REQUEST"]], "write_response (hinawa.fwtcode attribute)": [[11, "Hinawa.FwTcode.WRITE_RESPONSE"]], "quark() (hinawa.fwfcperror class method)": [[11, "Hinawa.FwFcpError.quark"]], "quark() (hinawa.fwnodeerror class method)": [[11, "Hinawa.FwNodeError.quark"]], "quark() (hinawa.fwreqerror class method)": [[11, "Hinawa.FwReqError.quark"]], "quark() (hinawa.fwresperror class method)": [[11, "Hinawa.FwRespError.quark"]], "hinawa.cycle_time_parse_tstamp()": [[12, "Hinawa.cycle_time_parse_tstamp"]], "hinawa.fw_fcp_error_quark()": [[12, "Hinawa.fw_fcp_error_quark"]], "hinawa.fw_node_error_quark()": [[12, "Hinawa.fw_node_error_quark"]], "hinawa.fw_req_error_quark()": [[12, "Hinawa.fw_req_error_quark"]], "hinawa.fw_resp_error_quark()": [[12, "Hinawa.fw_resp_error_quark"]]}})