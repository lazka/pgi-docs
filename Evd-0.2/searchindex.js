Search.setIndex({"docnames": ["callbacks", "class-structs", "classes", "classes/BufferedInputStream", "classes/BufferedInputStreamClass", "classes/BufferedOutputStream", "classes/BufferedOutputStreamClass", "classes/Connection", "classes/ConnectionClass", "classes/ConnectionPool", "classes/ConnectionPoolClass", "classes/DBusBridge", "classes/DBusBridgeClass", "classes/DBusDaemon", "classes/DBusDaemonClass", "classes/Daemon", "classes/DaemonClass", "classes/Deferred", "classes/HttpConnection", "classes/HttpConnectionClass", "classes/HttpMessage", "classes/HttpMessageClass", "classes/HttpRequest", "classes/HttpRequestClass", "classes/IoStream", "classes/IoStreamClass", "classes/IoStreamGroup", "classes/IoStreamGroupClass", "classes/IpcMechanism", "classes/IpcMechanismClass", "classes/Jsonrpc", "classes/JsonrpcClass", "classes/JsonrpcHttpClient", "classes/JsonrpcHttpClientClass", "classes/JsonrpcHttpServer", "classes/JsonrpcHttpServerClass", "classes/LongpollingServer", "classes/LongpollingServerClass", "classes/Peer", "classes/PeerClass", "classes/PeerManager", "classes/PeerManagerClass", "classes/PkiPrivkey", "classes/PkiPrivkeyClass", "classes/PkiPubkey", "classes/PkiPubkeyClass", "classes/Promise", "classes/PromiseClass", "classes/Reproxy", "classes/ReproxyClass", "classes/Service", "classes/ServiceClass", "classes/Socket", "classes/SocketClass", "classes/SocketEvent", "classes/StreamThrottle", "classes/StreamThrottleClass", "classes/ThrottledInputStream", "classes/ThrottledInputStreamClass", "classes/ThrottledOutputStream", "classes/ThrottledOutputStreamClass", "classes/TlsCertificate", "classes/TlsCertificateClass", "classes/TlsCredentials", "classes/TlsCredentialsClass", "classes/TlsPrivkey", "classes/TlsPrivkeyClass", "classes/TlsSession", "classes/TlsSessionClass", "classes/Transport", "classes/TransportInterface", "classes/WebDir", "classes/WebDirClass", "classes/WebSelector", "classes/WebSelectorClass", "classes/WebService", "classes/WebServiceClass", "classes/WebTransportServer", "classes/WebTransportServerClass", "classes/WebsocketClient", "classes/WebsocketClientClass", "classes/WebsocketServer", "classes/WebsocketServerClass", "enums", "flags", "functions", "hierarchy", "iface-structs", "index", "interfaces", "mapping", "structs"], "filenames": ["callbacks.rst", "class-structs.rst", "classes.rst", "classes/BufferedInputStream.rst", "classes/BufferedInputStreamClass.rst", "classes/BufferedOutputStream.rst", "classes/BufferedOutputStreamClass.rst", "classes/Connection.rst", "classes/ConnectionClass.rst", "classes/ConnectionPool.rst", "classes/ConnectionPoolClass.rst", "classes/DBusBridge.rst", "classes/DBusBridgeClass.rst", "classes/DBusDaemon.rst", "classes/DBusDaemonClass.rst", "classes/Daemon.rst", "classes/DaemonClass.rst", "classes/Deferred.rst", "classes/HttpConnection.rst", "classes/HttpConnectionClass.rst", "classes/HttpMessage.rst", "classes/HttpMessageClass.rst", "classes/HttpRequest.rst", "classes/HttpRequestClass.rst", "classes/IoStream.rst", "classes/IoStreamClass.rst", "classes/IoStreamGroup.rst", "classes/IoStreamGroupClass.rst", "classes/IpcMechanism.rst", "classes/IpcMechanismClass.rst", "classes/Jsonrpc.rst", "classes/JsonrpcClass.rst", "classes/JsonrpcHttpClient.rst", "classes/JsonrpcHttpClientClass.rst", "classes/JsonrpcHttpServer.rst", "classes/JsonrpcHttpServerClass.rst", "classes/LongpollingServer.rst", "classes/LongpollingServerClass.rst", "classes/Peer.rst", "classes/PeerClass.rst", "classes/PeerManager.rst", "classes/PeerManagerClass.rst", "classes/PkiPrivkey.rst", "classes/PkiPrivkeyClass.rst", "classes/PkiPubkey.rst", "classes/PkiPubkeyClass.rst", "classes/Promise.rst", "classes/PromiseClass.rst", "classes/Reproxy.rst", "classes/ReproxyClass.rst", "classes/Service.rst", "classes/ServiceClass.rst", "classes/Socket.rst", "classes/SocketClass.rst", "classes/SocketEvent.rst", "classes/StreamThrottle.rst", "classes/StreamThrottleClass.rst", "classes/ThrottledInputStream.rst", "classes/ThrottledInputStreamClass.rst", "classes/ThrottledOutputStream.rst", "classes/ThrottledOutputStreamClass.rst", "classes/TlsCertificate.rst", "classes/TlsCertificateClass.rst", "classes/TlsCredentials.rst", "classes/TlsCredentialsClass.rst", "classes/TlsPrivkey.rst", "classes/TlsPrivkeyClass.rst", "classes/TlsSession.rst", "classes/TlsSessionClass.rst", "classes/Transport.rst", "classes/TransportInterface.rst", "classes/WebDir.rst", "classes/WebDirClass.rst", "classes/WebSelector.rst", "classes/WebSelectorClass.rst", "classes/WebService.rst", "classes/WebServiceClass.rst", "classes/WebTransportServer.rst", "classes/WebTransportServerClass.rst", "classes/WebsocketClient.rst", "classes/WebsocketClientClass.rst", "classes/WebsocketServer.rst", "classes/WebsocketServerClass.rst", "enums.rst", "flags.rst", "functions.rst", "hierarchy.rst", "iface-structs.rst", "index.rst", "interfaces.rst", "mapping.rst", "structs.rst"], "titles": ["Callbacks", "Class Structures", "Classes", "Evd.BufferedInputStream", "Evd.BufferedInputStreamClass", "Evd.BufferedOutputStream", "Evd.BufferedOutputStreamClass", "Evd.Connection", "Evd.ConnectionClass", "Evd.ConnectionPool", "Evd.ConnectionPoolClass", "Evd.DBusBridge", "Evd.DBusBridgeClass", "Evd.DBusDaemon", "Evd.DBusDaemonClass", "Evd.Daemon", "Evd.DaemonClass", "Evd.Deferred", "Evd.HttpConnection", "Evd.HttpConnectionClass", "Evd.HttpMessage", "Evd.HttpMessageClass", "Evd.HttpRequest", "Evd.HttpRequestClass", "Evd.IoStream", "Evd.IoStreamClass", "Evd.IoStreamGroup", "Evd.IoStreamGroupClass", "Evd.IpcMechanism", "Evd.IpcMechanismClass", "Evd.Jsonrpc", "Evd.JsonrpcClass", "Evd.JsonrpcHttpClient", "Evd.JsonrpcHttpClientClass", "Evd.JsonrpcHttpServer", "Evd.JsonrpcHttpServerClass", "Evd.LongpollingServer", "Evd.LongpollingServerClass", "Evd.Peer", "Evd.PeerClass", "Evd.PeerManager", "Evd.PeerManagerClass", "Evd.PkiPrivkey", "Evd.PkiPrivkeyClass", "Evd.PkiPubkey", "Evd.PkiPubkeyClass", "Evd.Promise", "Evd.PromiseClass", "Evd.Reproxy", "Evd.ReproxyClass", "Evd.Service", "Evd.ServiceClass", "Evd.Socket", "Evd.SocketClass", "Evd.SocketEvent", "Evd.StreamThrottle", "Evd.StreamThrottleClass", "Evd.ThrottledInputStream", "Evd.ThrottledInputStreamClass", "Evd.ThrottledOutputStream", "Evd.ThrottledOutputStreamClass", "Evd.TlsCertificate", "Evd.TlsCertificateClass", "Evd.TlsCredentials", "Evd.TlsCredentialsClass", "Evd.TlsPrivkey", "Evd.TlsPrivkeyClass", "Evd.TlsSession", "Evd.TlsSessionClass", "Evd.Transport", "Evd.TransportInterface", "Evd.WebDir", "Evd.WebDirClass", "Evd.WebSelector", "Evd.WebSelectorClass", "Evd.WebService", "Evd.WebServiceClass", "Evd.WebTransportServer", "Evd.WebTransportServerClass", "Evd.WebsocketClient", "Evd.WebsocketClientClass", "Evd.WebsocketServer", "Evd.WebsocketServerClass", "Enums", "Flags", "Functions", "Hierarchy", "Interface Structures", "Evd 0.2 (0.2.0)", "Interfaces", "Symbol Mapping", "Structures"], "terms": {"jsonrpchttpservermethodcallcb": [0, 34, 90], "self": 0, "method_nam": [0, 30], "param": [0, 30, 32], "invocation_id": [0, 30, 34], "connect": [0, 2, 9, 18, 24, 26, 50, 52, 75, 83, 86, 90], "request": [0, 18, 22, 32, 55, 67, 75, 77, 81, 90], "user_data": [0, 3, 5, 7, 9, 15, 18, 24, 30, 32, 34, 40, 42, 44, 46, 50, 52, 57, 59, 61, 63, 65, 67, 69, 75, 85], "jsonrpcmethodcallcb": [0, 30, 90], "context": [0, 30, 85], "jsonrpcnotificationcb": [0, 30, 90], "notification_nam": [0, 30], "jsonrpctransportsendcb": [0, 30, 90], "messag": [0, 20, 30, 38], "jsonrpctransportwritecb": [0, 90], "buffer": [0, 3, 5, 18, 38, 67, 69], "size": [0, 3, 17, 18, 20, 22, 28, 38, 42, 44, 55, 67, 69, 75], "socketnotifyconditioncallback": [0, 52, 90], "condit": [0, 52], "tlssessionpullfunc": [0, 67, 90], "buf": 0, "tlssessionpushfunc": [0, 67, 90], "evd": [0, 1, 2, 83, 84, 85, 86, 87, 89, 90, 91], "paramet": [0, 3, 5, 7, 9, 13, 15, 17, 18, 20, 22, 24, 26, 28, 30, 32, 34, 38, 40, 42, 44, 46, 48, 50, 52, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 85], "jsonrpchttpserv": [0, 2, 75, 86, 90], "str": [0, 3, 5, 7, 9, 13, 15, 18, 20, 22, 30, 32, 38, 40, 42, 44, 48, 50, 52, 61, 63, 65, 67, 69, 71, 73, 75, 77, 85], "json": [0, 30, 32, 34, 88], "node": [0, 30, 32, 34], "int": [0, 3, 5, 7, 15, 17, 18, 20, 22, 28, 30, 34, 38, 42, 44, 46, 50, 52, 55, 57, 59, 61, 63, 65, 67, 69, 75, 85], "httpconnect": [0, 2, 7, 75, 77, 79, 81, 86, 90], "httprequest": [0, 2, 18, 20, 32, 75, 77, 81, 86, 90], "object": [0, 3, 5, 7, 8, 9, 10, 11, 13, 15, 17, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 32, 34, 36, 38, 40, 41, 42, 44, 46, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 69, 70, 71, 73, 75, 76, 77, 79, 81, 85, 86], "none": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85], "jsonrpc": [0, 2, 28, 86, 90], "gobject": [0, 3, 5, 7, 9, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 77, 79, 81, 86, 88], "return": [0, 3, 5, 7, 9, 11, 13, 15, 17, 18, 20, 22, 24, 26, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 85], "type": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 88], "bool": [0, 5, 7, 9, 15, 17, 18, 22, 24, 26, 30, 32, 34, 38, 40, 42, 44, 46, 50, 52, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 85], "socket": [0, 2, 3, 7, 9, 18, 50, 86, 90], "glib": [0, 3, 5, 7, 9, 13, 15, 17, 18, 30, 32, 34, 38, 42, 44, 46, 50, 52, 61, 63, 65, 67, 69, 73, 75, 83, 84, 85], "iocondit": [0, 52, 67], "tlssession": [0, 2, 7, 86, 90], "bufferedinputstreamclass": [1, 3, 90], "bufferedoutputstreamclass": [1, 5, 90], "connectionclass": [1, 7, 19, 90], "connectionpoolclass": [1, 9, 33, 90], "dbusbridgeclass": [1, 11, 90], "dbusdaemonclass": [1, 13, 90], "daemonclass": [1, 15, 90], "httpconnectionclass": [1, 18, 90], "httpmessageclass": [1, 20, 23, 90], "httprequestclass": [1, 22, 90], "iostreamclass": [1, 8, 24, 90], "iostreamgroupclass": [1, 10, 26, 51, 80, 90], "ipcmechanismclass": [1, 12, 28, 31, 90], "jsonrpcclass": [1, 30, 90], "jsonrpchttpclientclass": [1, 32, 90], "jsonrpchttpserverclass": [1, 34, 90], "longpollingserverclass": [1, 36, 90], "peerclass": [1, 38, 90], "peermanagerclass": [1, 40, 90], "pkiprivkeyclass": [1, 42, 90], "pkipubkeyclass": [1, 44, 90], "promiseclass": [1, 46, 90], "reproxyclass": [1, 48, 90], "serviceclass": [1, 49, 50, 76, 90], "socketclass": [1, 52, 90], "streamthrottleclass": [1, 55, 90], "throttledinputstreamclass": [1, 57, 90], "throttledoutputstreamclass": [1, 59, 90], "tlscertificateclass": [1, 61, 90], "tlscredentialsclass": [1, 63, 90], "tlsprivkeyclass": [1, 65, 90], "tlssessionclass": [1, 67, 90], "webdirclass": [1, 71, 78, 90], "webselectorclass": [1, 73, 90], "webserviceclass": [1, 35, 37, 72, 74, 75, 82, 90], "webtransportserverclass": [1, 77, 90], "websocketclientclass": [1, 79, 90], "websocketserverclass": [1, 81, 90], "bufferedinputstream": [2, 86, 90], "bufferedoutputstream": [2, 86, 90], "connectionpool": [2, 26, 32, 48, 86, 90], "dbusbridg": [2, 28, 86, 90], "dbusdaemon": [2, 86, 90], "daemon": [2, 13, 86, 90], "httpmessag": [2, 22, 86, 90], "iostream": [2, 7, 18, 26, 52, 86, 90], "iostreamgroup": [2, 9, 24, 32, 34, 36, 48, 50, 71, 73, 75, 77, 79, 81, 86, 90], "ipcmechan": [2, 11, 30, 86, 90], "jsonrpchttpclient": [2, 9, 86, 90], "longpollingserv": [2, 69, 75, 77, 86, 90], "peer": [2, 28, 40, 67, 69, 77, 79, 81, 86, 88, 90], "peermanag": [2, 69, 70, 86, 90], "pkiprivkei": [2, 65, 86, 90], "pkipubkei": [2, 42, 61, 86, 90], "promis": [2, 17, 47, 86, 90], "reproxi": [2, 50, 86, 90], "servic": [2, 3, 26, 34, 36, 48, 71, 73, 75, 77, 81, 86, 90], "streamthrottl": [2, 24, 26, 57, 59, 86, 90], "throttledinputstream": [2, 86, 90], "throttledoutputstream": [2, 86, 90], "tlscertif": [2, 63, 67, 85, 86, 90], "tlscredenti": [2, 9, 50, 67, 86, 90], "tlsprivkei": [2, 63, 86, 90], "webdir": [2, 75, 77, 86, 90], "webselector": [2, 75, 77, 86, 90], "webservic": [2, 34, 36, 50, 71, 73, 77, 81, 86, 90], "webtransportserv": [2, 69, 71, 86, 90], "websocketcli": [2, 26, 69, 86, 90], "websocketserv": [2, 69, 75, 77, 86, 90], "ginterfac": [3, 13, 36, 46, 69, 77, 79, 81], "gio": [3, 4, 5, 6, 7, 9, 13, 17, 18, 24, 25, 26, 30, 32, 42, 44, 46, 50, 52, 57, 58, 59, 60, 61, 63, 65, 69, 85, 86, 88], "filterinputstream": [3, 57, 86], "inputstream": [3, 57, 86], "seekabl": 3, "subclass": [3, 5, 7, 9, 11, 13, 15, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 55, 57, 59, 61, 63, 65, 67, 71, 73, 75, 77, 79, 81], "inherit": [3, 5, 7, 9, 11, 13, 15, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 55, 57, 59, 61, 63, 65, 67, 71, 73, 75, 77, 79, 81], "11": [3, 7, 18, 24], "3": [3, 5, 7, 9, 18, 24, 32, 34, 36, 46, 48, 50, 57, 59, 71, 73, 75, 77, 79, 81, 83], "19": [3, 57], "37": [3, 5, 7, 9, 11, 13, 15, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 55, 57, 59, 61, 63, 65, 67, 71, 73, 75, 77, 79, 81], "5": [3, 5, 7, 9, 11, 13, 15, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 55, 57, 59, 61, 63, 65, 67, 71, 73, 75, 77, 79, 81, 83], "struct": [3, 5, 7, 9, 11, 13, 15, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 55, 57, 59, 61, 63, 65, 67, 71, 73, 75, 77, 79, 81], "objectclass": [3, 5, 7, 9, 11, 13, 14, 15, 16, 18, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 71, 73, 75, 77, 79, 81], "new": [3, 5, 7, 9, 11, 13, 15, 17, 18, 20, 22, 26, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 90], "base_stream": [3, 5, 57, 59], "freez": [3, 90], "read_str": [3, 90], "count": [3, 17], "io_prior": [3, 5], "cancel": [3, 5, 7, 9, 17, 18, 30, 32, 42, 44, 46, 50, 52, 61, 63, 65, 69, 85, 90], "callback": [3, 5, 7, 9, 17, 18, 30, 32, 34, 42, 44, 46, 50, 52, 61, 63, 65, 69, 85, 88], "read_str_finish": [3, 90], "result": [3, 5, 7, 9, 17, 18, 30, 32, 34, 42, 44, 46, 50, 52, 61, 63, 65, 69, 85], "read_str_sync": [3, 90], "thaw": [3, 90], "prioriti": [3, 52, 67, 85], "unread": [3, 90], "9": [3, 32, 34, 36, 57, 71, 73, 77, 81], "7": [3, 5, 7, 9, 11, 13, 15, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 55, 57, 59, 61, 63, 65, 67, 71, 73, 75, 77, 79, 81, 83], "1": [3, 5, 7, 9, 11, 13, 15, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 55, 57, 59, 61, 63, 65, 67, 71, 73, 75, 77, 79, 81, 83, 84, 88], "2": [3, 5, 7, 9, 11, 13, 18, 22, 30, 32, 34, 36, 42, 44, 48, 50, 57, 59, 71, 73, 75, 77, 79, 81, 83, 84], "name": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82], "access": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82], "descript": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 88], "parent": [3, 5, 7, 9, 11, 13, 15, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 47, 48, 50, 52, 55, 57, 59, 61, 63, 65, 67, 71, 73, 75, 77, 79, 81, 88], "r": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82], "kwarg": [3, 5, 7, 9, 11, 13, 15, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 55, 57, 59, 61, 63, 65, 67, 71, 73, 75, 77, 79, 81], "base": [3, 5, 7, 9, 11, 13, 15, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84], "abstract": [3, 5, 7, 9, 11, 13, 15, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 55, 57, 59, 61, 63, 65, 67, 71, 73, 75, 77, 79, 81], "No": [3, 5, 7, 9, 11, 13, 15, 18, 22, 26, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 55, 57, 59, 61, 63, 65, 67, 71, 73, 75, 77, 79, 81], "structur": [3, 5, 7, 9, 11, 13, 15, 17, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 88], "classmethod": [3, 5, 7, 9, 11, 13, 15, 17, 18, 20, 22, 26, 30, 32, 34, 36, 40, 42, 44, 48, 50, 52, 55, 57, 59, 61, 63, 65, 67, 71, 73, 75, 77, 79, 81], "asyncreadycallback": [3, 5, 7, 9, 18, 30, 32, 42, 44, 46, 50, 52, 61, 63, 65, 69, 85], "asyncresult": [3, 5, 7, 9, 17, 18, 30, 32, 42, 44, 46, 50, 52, 61, 63, 65, 69, 85], "rais": [3, 5, 7, 9, 13, 15, 18, 30, 32, 34, 38, 42, 44, 46, 50, 52, 61, 63, 65, 67, 69, 73, 75, 85], "error": [3, 5, 7, 9, 13, 15, 17, 18, 30, 32, 34, 38, 42, 44, 46, 50, 52, 53, 61, 63, 65, 67, 69, 73, 75, 85], "hold": 3, "data": [3, 5, 17, 28, 38, 42, 44, 46, 88], "can": [3, 17, 46], "contain": 3, "null": 3, "number": 3, "byte": [3, 55], "A": [3, 17, 38], "The": [3, 7, 9, 17, 18, 20, 22, 24, 26, 32, 34, 40, 42, 44, 46, 47, 50, 52, 55, 57, 59, 61, 63, 65, 67, 69, 71, 75], "actual": [3, 17], "store": 3, "from": [3, 18, 71], "local": 3, "read": [3, 57, 67, 90], "next": [3, 17, 46], "call": [3, 7, 17, 46], "first": 3, "get": [3, 22, 67, 71], "befor": [3, 46], "perform": [3, 17, 50], "oper": [3, 17, 46, 67], "thi": [3, 7, 17, 24, 38, 46, 50, 55, 67, 88], "i": [3, 7, 17, 46, 88], "us": [3, 7, 17, 20, 38, 52, 63, 67, 77], "when": [3, 17, 46, 52], "one": 3, "need": 3, "do": 3, "some": [3, 17], "action": [3, 7, 24, 40, 50, 52, 57, 59, 63, 69, 75], "just": 3, "doesn": 3, "t": 3, "want": 3, "remov": [3, 26, 27, 90], "input": [3, 24, 26], "stream": [3, 24, 52, 55], "normal": [3, 46, 67], "would": 3, "write": [3, 7, 8, 59, 67, 90], "back": 3, "wa": [3, 46], "previous": 3, "made": [3, 17], "avail": 3, "further": 3, "But": 3, "practic": 3, "ani": 3, "featur": [3, 88], "implement": [3, 17, 69], "basic": 3, "provid": [3, 17, 88], "detect": 3, "e": 3, "g": 3, "selector": [3, 77], "parent_class": [4, 6, 8, 10, 12, 14, 16, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 56, 58, 60, 62, 64, 66, 68, 72, 74, 76, 78, 80, 82], "class": [4, 6, 8, 10, 12, 14, 16, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 83, 84, 88], "filteroutputstream": [5, 59, 86], "outputstream": [5, 59, 86], "29": [5, 59], "get_auto_flush": [5, 90], "notify_writ": [5, 90], "set_auto_flush": [5, 90], "auto_flush": 5, "write_str": [5, 90], "write_str_finish": [5, 90], "write_str_sync": [5, 90], "15": [5, 18, 59], "flag": [5, 7, 9, 13, 18, 20, 22, 24, 26, 32, 34, 38, 40, 42, 44, 50, 52, 55, 57, 59, 61, 63, 65, 67, 69, 71, 75, 77, 88], "short": [5, 7, 9, 13, 20, 22, 24, 26, 32, 34, 38, 40, 42, 44, 50, 52, 55, 57, 59, 61, 63, 65, 67, 69, 71, 75, 77], "auto": 5, "flush": 5, "w": [5, 7, 9, 13, 20, 22, 24, 32, 38, 50, 52, 55, 63, 67, 71, 77], "whether": [5, 46, 67, 71], "should": [5, 17, 50], "automaticallli": 5, "prop": [5, 7, 9, 13, 20, 22, 24, 26, 32, 34, 38, 42, 44, 50, 52, 55, 61, 63, 65, 67, 71, 77], "default": [5, 7, 9, 13, 20, 22, 24, 26, 32, 34, 38, 42, 44, 50, 52, 55, 61, 63, 65, 67, 71, 77], "valu": [5, 7, 9, 13, 17, 20, 22, 24, 26, 32, 34, 38, 42, 44, 50, 52, 55, 61, 63, 65, 67, 71, 77, 83, 84], "true": [5, 7, 18, 46, 50], "readabl": [5, 7, 9, 13, 20, 22, 24, 26, 32, 34, 38, 42, 44, 50, 52, 55, 61, 63, 65, 67, 71, 77], "writabl": [5, 7, 9, 13, 20, 22, 24, 32, 38, 50, 52, 55, 63, 67, 71, 77], "filteroutputstreamclass": [6, 60], "4": [7, 18, 22, 34, 36, 46, 48, 71, 73, 75, 77, 79, 81, 83, 84, 88], "flush_and_shutdown": [7, 90], "get_max_read": [7, 57, 90], "get_max_writ": [7, 59, 90], "get_prior": [7, 52, 90], "get_remote_address_as_str": [7, 90], "get_socket": [7, 52, 90], "get_tls_act": [7, 90], "get_tls_sess": [7, 90], "is_connect": [7, 90], "lock_clos": [7, 90], "set_socket": [7, 90], "starttl": [7, 90], "mode": [7, 67], "starttls_finish": [7, 90], "unlock_clos": [7, 90], "do_clos": [7, 52], "do_writ": 7, "http": [7, 18, 20, 22, 32, 71, 88], "tl": [7, 50, 67], "underlai": [7, 52], "ssl": [7, 67], "session": [7, 50, 67], "activ": 7, "ha": [7, 46], "fals": [7, 18, 46, 50, 67, 71], "otherwis": [7, 46], "tlsmode": [7, 84, 90], "run_last": [7, 24, 40, 52, 57, 59, 63, 69], "which": [7, 17, 24, 38, 40, 46, 50, 52, 57, 59, 63, 69, 75], "receiv": [7, 24, 38, 40, 50, 52, 57, 59, 63, 69, 70, 75, 88, 90], "tls_activ": 7, "close": [8, 24, 38, 40, 52, 53, 67, 69, 83, 90], "address": [9, 13, 48, 50, 52, 69], "connection_typ": 9, "get_connect": [9, 90], "get_connection_finish": [9, 90], "get_tls_autostart": [9, 50, 90], "get_tls_credenti": [9, 50, 90], "has_free_connect": [9, 90], "recycl": [9, 90], "conn": [9, 50, 75, 77, 79, 81], "set_tls_autostart": [9, 50, 90], "autostart": [9, 50], "set_tls_credenti": [9, 50, 90], "credenti": [9, 50, 67], "do_get_connection_typ": 9, "co": [9, 13, 20, 22, 32, 38, 77], "target": [9, 32, 67], "gtype": [9, 50, 52], "handl": [9, 77], "pool": 9, "construct_onli": [9, 13, 20, 22, 32, 38, 77], "evdconnect": [9, 52, 90], "get_connection_typ": 10, "init": 13, "config_fil": 13, "dbu": 13, "config": 13, "file": [13, 71], "filenam": [13, 61, 65], "configur": 13, "pass": [13, 18, 46, 50], "get_default": [15, 40, 90], "argc": 15, "argv": 15, "get_pid_fil": [15, 90], "quit": [15, 90], "exit_cod": 15, "run": [15, 90], "set_pid_fil": [15, 90], "pid_fil": 15, "set_timeout": [15, 90], "timeout": [15, 85], "function": [15, 17, 46, 88], "set_us": [15, 90], "usernam": 15, "set_user_id": [15, 90], "user_id": 15, "sourcefunc": [15, 85], "source_object": 17, "tag": 17, "complet": [17, 46, 90], "complete_in_idl": [17, 90], "get_promis": [17, 90], "ref": [17, 90], "set_result_boolean": [17, 90], "arg1": 17, "set_result_point": [17, 90], "data_free_func": 17, "set_result_s": [17, 90], "take_result_error": [17, 90], "unref": [17, 90], "an": [17, 46, 48, 88], "opaqu": 17, "repres": [17, 38, 46, 48], "async": 17, "arbitrari": 17, "pointer": 17, "identifi": 17, "freed": 17, "creat": 17, "track": 17, "execut": 17, "asynchron": [17, 46], "It": [17, 46, 88], "work": 17, "like": [17, 88], "simpleasyncresult": [17, 69], "import": 17, "differ": [17, 88], "doe": 17, "itself": 17, "instead": 17, "deleg": 17, "all": [17, 26, 46], "except": 17, "abil": 17, "set": [17, 18, 67, 71], "wai": 17, "public": 17, "applic": [17, 46, 88], "while": 17, "onli": 17, "kept": 17, "privat": [17, 42, 44], "its": [17, 52], "associ": [17, 46], "ar": 17, "bound": [17, 83, 90], "togeth": [17, 46], "so": 17, "resolv": [17, 46, 83, 90], "reject": [17, 83, 90], "obtain": [17, 18, 46], "immedi": [17, 46], "listen": [17, 46, 50, 52, 83, 90], "ad": [17, 46], "must": 17, "same": [17, 46], "event": [17, 46, 52, 88], "loop": [17, 46, 52], "cycl": 17, "For": 17, "those": 17, "case": [17, 46], "own": 17, "retriev": [17, 46], "increas": 17, "refer": 17, "boolean": 17, "after": 17, "purpos": 17, "destroynotifi": 17, "free": 17, "longer": 17, "gssize": [17, 46], "long": [17, 77], "sign": 17, "integ": 17, "indic": 17, "fail": [17, 46], "take": 17, "ownership": 17, "decreas": 17, "If": [17, 46], "reach": 17, "zero": [17, 46], "destroi": 17, "memori": 17, "releas": 17, "get_current_request": [18, 90], "get_keepal": [18, 90], "read_all_cont": [18, 90], "read_all_content_finish": [18, 90], "read_cont": [18, 90], "read_content_finish": [18, 90], "read_request_head": [18, 90], "read_request_headers_finish": [18, 90], "read_response_head": [18, 90], "read_response_headers_finish": [18, 90], "redirect": [18, 90], "url": [18, 22, 32, 77], "perman": 18, "respond": [18, 30, 34, 75, 76, 90], "ver": 18, "status_cod": [18, 75], "reason_phras": 18, "header": [18, 20, 34, 75], "content": [18, 75], "close_aft": 18, "respond_simpl": [18, 90], "set_current_request": [18, 90], "set_keepal": [18, 90], "keepal": 18, "unread_request_head": [18, 90], "write_cont": [18, 90], "more": 18, "write_request_head": [18, 90], "write_request_headers_finish": [18, 90], "write_response_head": [18, 90], "version": [18, 20, 38, 42, 44], "soup": [18, 20, 22, 34, 75, 79, 88], "messagehead": [18, 20, 34, 75, 79], "httpversion": [18, 20], "manual": 18, "overrid": 18, "intern": [18, 32, 34, 77], "state": [18, 52], "get_head": [20, 90], "get_vers": [20, 90], "headers_to_str": [20, 90], "protocol": [20, 52], "ye": [20, 24, 28], "http_1_1": 20, "get_basic_auth_credenti": [22, 90], "get_cookie_valu": [22, 90], "cookie_nam": 22, "get_method": [22, 90], "get_origin": [22, 90], "get_path": [22, 90], "get_uri": [22, 90], "is_cors_preflight": [22, 90], "is_cross_origin": [22, 90], "set_basic_auth_credenti": [22, 90], "user": 22, "passw": 22, "to_str": [22, 90], "post": 22, "head": 22, "etc": [22, 42, 44, 52], "path": [22, 71, 77], "full": 22, "portion": 22, "uri": 22, "resourc": 22, "password": 22, "get_group": [24, 90], "get_input_throttl": [24, 90], "get_output_throttl": [24, 90], "set_group": [24, 90], "group": [24, 26], "do_group_chang": 24, "new_group": 24, "old_group": 24, "do_signal_clos": 24, "do_signal_group_chang": 24, "belong": 24, "throttl": [24, 26, 55, 57, 59], "": [24, 32, 34, 67], "output": [24, 26], "chang": [24, 52], "io_stream": [24, 26], "group_chang": [24, 25], "p0": [24, 40, 52, 69, 75], "input_throttl": [24, 26], "output_throttl": [24, 26], "signal_clos": 25, "signal_group_chang": 25, "add": [26, 27, 46, 90], "do_add": 26, "do_remov": 26, "within": 26, "unuse_transport": [28, 90], "transport": [28, 36, 38, 77, 79, 81, 88, 89, 90], "use_transport": [28, 90], "do_transport_new_p": 28, "do_transport_rec": 28, "transport_new_p": 29, "transport_rec": [29, 30, 90], "call_method": [30, 32, 90], "call_method_finish": [30, 32, 90], "respond_error": [30, 34, 90], "json_error": [30, 32, 34], "respond_from_error": [30, 90], "result_error": 30, "send_notif": [30, 90], "set_callback": [30, 90], "method_call_cb": 30, "notification_cb": 30, "transport_error": [30, 90], "transport_set_send_callback": [30, 90], "result_json": 30, "error_json": 30, "get_http_request": [32, 90], "server": [32, 67, 84, 90], "json_result": 32, "http_request": 32, "13": [34, 36, 48, 71, 73, 75, 77, 81], "get_response_head": [34, 90], "set_method_call_callback": [34, 90], "respons": 34, "response_head": [34, 79], "14": [36, 77, 79, 81], "16": [36, 77, 79, 81, 84], "backlog_get_length": [38, 90], "backlog_pop_fram": [38, 90], "backlog_push_fram": [38, 90], "frame": 38, "backlog_unshift_fram": [38, 90], "gracefulli": [38, 40, 69], "get_id": [38, 90], "get_transport": [38, 90], "is_al": [38, 90], "is_clos": [38, 90], "pop_messag": [38, 90], "push_messag": [38, 90], "send": [38, 69, 70, 88, 90], "send_text": [38, 69, 90], "touch": [38, 90], "unshift_messag": [38, 90], "id": [38, 40, 52], "string": 38, "uuid": 38, "messagetyp": [38, 69, 83, 90], "0": [38, 42, 44, 52, 55, 61, 63, 65, 83, 84], "20": 38, "add_peer": [40, 90], "close_p": [40, 69, 90], "get_all_p": [40, 90], "lookup_p": [40, 69, 90], "do_new_p": 40, "do_peer_clos": [40, 69], "found": 40, "new_peer": [40, 41, 69], "peer_manag": [40, 69, 70], "peer_clos": [40, 41, 69, 70], "decrypt": [42, 90], "decrypt_finish": [42, 90], "gener": [42, 90], "key_typ": 42, "bit": [42, 63], "generate_finish": [42, 90], "get_key_typ": [42, 44, 90], "get_public_kei": [42, 90], "import_n": [42, 44, 90], "privkei": [42, 63, 65], "sign_data": [42, 90], "data_s": [42, 44], "sign_data_finish": [42, 90], "kei": [42, 44, 63, 67], "rsa": [42, 44, 83, 90], "dsa": [42, 44, 83, 90], "pkikeytyp": [42, 44, 83, 90], "encrypt": [44, 90], "encrypt_finish": [44, 90], "pubkei": 44, "verify_data": [44, 90], "signatur": 44, "signature_s": 44, "verify_data_finish": [44, 90], "get_cancel": [46, 90], "get_result_boolean": [46, 90], "get_result_point": [46, 90], "get_result_s": [46, 90], "propagate_error": [46, 90], "trigger": 46, "held": 46, "been": 46, "propag": 46, "tell": 46, "copi": 46, "yet": 46, "other": [46, 88], "soon": 46, "order": 46, "were": 46, "alreadi": 46, "turn": 46, "add_backend": [48, 90], "remove_backend": [48, 90], "backend": 48, "accept_connect": [50, 90], "add_listen": [50, 90], "get_io_stream_typ": [50, 90], "listen_finish": [50, 52, 90], "reject_connect": [50, 90], "remove_listen": [50, 90], "set_io_stream_typ": [50, 90], "io_stream_typ": [50, 52], "do_connection_accept": 50, "do_connection_reject": 50, "do_signal_validate_connect": 50, "do_signal_validate_tls_connect": 50, "upgrad": 50, "automat": 50, "upon": 50, "incom": 50, "valid": [50, 69], "validate_connect": 50, "validate_tls_connect": 50, "tls_autostart": 50, "tls_credenti": [50, 63], "connection_accept": 51, "connection_reject": 51, "signal_validate_connect": 51, "signal_validate_tls_connect": 51, "bind": [52, 90], "bind_addr": [52, 90], "allow_reus": 52, "bind_finish": [52, 90], "connect_addr": [52, 90], "connect_finish": [52, 90], "connect_to": [52, 90], "get_condit": [52, 90], "get_famili": [52, 90], "get_local_address": [52, 90], "get_remote_address": [52, 90], "get_remote_address_str": [52, 90], "len": [52, 61, 65], "get_statu": [52, 90], "listen_addr": [52, 90], "set_notify_condition_callback": [52, 90], "set_prior": [52, 90], "shutdown": [52, 90], "shutdown_read": 52, "shutdown_writ": [52, 67, 90], "watch_condit": [52, 90], "cond": 52, "do_cleanup": 52, "do_error": 52, "error_domain": 52, "error_cod": 52, "error_messag": 52, "do_handle_condit": 52, "do_new_connect": 52, "do_state_chang": 52, "new_stat": 52, "old_stat": 52, "famili": 52, "socketfamili": 52, "io": 52, "dispatch": 52, "socketprotocol": 52, "unknown": [52, 83, 90], "statu": 52, "current": 52, "sockettyp": 52, "socketaddress": 52, "socketst": [52, 83, 90], "p1": 52, "new_connect": [52, 53], "state_chang": [52, 53], "invalid": [52, 84, 90], "cleanup": 53, "handle_condit": 53, "get_actual_bandwidth": [55, 90], "get_tot": [55, 90], "report": [55, 90], "wait": [55, 57, 59], "bandwidth": 55, "float": 55, "maximum": 55, "kilobyt": 55, "latenc": 55, "minimum": 55, "time": 55, "between": 55, "two": 55, "transfer": 55, "milisecond": 55, "total": 55, "sum": 55, "ever": 55, "add_throttl": [57, 59, 90], "remove_throttl": [57, 59, 90], "do_delay_read": 57, "delai": [57, 59], "retry_wait": [57, 59], "delay_read": [57, 58], "throttled_input_stream": 57, "filterinputstreamclass": 58, "do_delay_writ": 59, "delay_writ": [59, 60], "throttled_output_stream": 59, "get_activation_tim": [61, 90], "get_dn": [61, 90], "get_expiration_tim": [61, 90], "get_n": [61, 65, 90], "get_pki_kei": [61, 65, 90], "import_": [61, 65, 90], "raw_data": [61, 65], "import_from_fil": [61, 65, 90], "import_from_file_finish": [61, 65, 90], "steal_n": [61, 65, 90], "verify_valid": [61, 90], "certif": [61, 67, 85], "x": [61, 65], "509": [61, 65], "openpgp": [61, 65, 83, 90], "add_certif": [63, 90], "cert": [63, 67], "add_certificate_from_fil": [63, 90], "cert_fil": 63, "key_fil": 63, "add_certificate_from_file_finish": [63, 90], "get_credenti": [63, 67, 90], "prepar": [63, 90], "readi": [63, 64, 90], "do_readi": 63, "dh": [63, 83, 90], "depth": 63, "diffi": 63, "hellman": 63, "exchang": [63, 67], "dure": [63, 67], "handshak": [63, 67, 90], "dh_bit": 63, "copy_properti": [67, 90], "get_direct": [67, 90], "get_peer_certif": [67, 90], "get_server_nam": [67, 90], "reset": [67, 90], "set_credenti": [67, 90], "set_server_nam": [67, 90], "server_nam": 67, "set_transport_pull_func": [67, 90], "func": 67, "set_transport_push_func": [67, 90], "verify_p": [67, 90], "client": [67, 84, 90], "cipher": 67, "mac": 67, "compress": 67, "requir": 67, "control": 67, "list": 67, "sent": 67, "require_peer_cert": 67, "accept_p": [69, 70, 90], "create_new_p": [69, 70, 90], "get_peer_manag": [69, 90], "peer_id": 69, "open": [69, 70, 88, 90], "open_finish": [69, 90], "peer_is_connect": [69, 70, 90], "receive_text": [69, 90], "reject_p": [69, 70, 90], "text": [69, 83, 90], "set_peer_manag": [69, 90], "do_accept_p": 69, "do_create_new_p": 69, "do_notify_new_p": 69, "do_notify_peer_clos": 69, "do_notify_rec": 69, "do_notify_validate_p": 69, "do_open": 69, "async_result": 69, "do_peer_is_connect": 69, "do_rec": 69, "do_reject_p": 69, "do_send": 69, "do_signal_new_p": 69, "do_signal_peer_clos": 69, "do_signal_rec": 69, "do_signal_validate_p": 69, "transportinterfac": [69, 87, 90], "validate_p": 69, "notify_new_p": 70, "notify_peer_clos": 70, "notify_rec": 70, "notify_validate_p": 70, "parent_ifac": 70, "typeinterfac": 70, "signal_new_p": 70, "signal_peer_clos": 70, "signal_rec": 70, "signal_validate_p": 70, "get_alia": [71, 90], "get_root": [71, 90], "set_alia": [71, 90], "alia": 71, "set_root": [71, 90], "root": 71, "serv": 71, "allow": [71, 83, 90], "put": 71, "allow_put": 71, "add_servic": [73, 90], "domain_pattern": 73, "path_pattern": 73, "remove_servic": [73, 90], "set_default_servic": [73, 90], "add_connection_with_request": [75, 90], "return_to": 75, "allow_origin": [75, 90], "origin": 75, "deny_origin": [75, 90], "get_origin_polici": [75, 90], "origin_allow": [75, 90], "respond_head": [75, 90], "set_origin_polici": [75, 90], "polici": [75, 83, 90], "do_flush_and_return_connect": 75, "do_log": 75, "content_s": 75, "do_request_handl": 75, "do_respond": 75, "do_return_connect": 75, "do_signal_log_entri": 75, "entri": 75, "do_signal_request_head": 75, "log": [75, 76], "log_entri": 75, "web_servic": 75, "request_head": 75, "flush_and_return_connect": 76, "request_handl": 76, "return_connect": 76, "signal_log_entri": 76, "signal_request_head": 76, "base_path": 77, "get_base_path": [77, 90], "get_validate_peer_argu": [77, 79, 81, 90], "set_enable_websocket": [77, 90], "enabl": 77, "set_external_base_url": [77, 90], "base_url": 77, "unuse_selector": [77, 90], "use_selector": [77, 90], "lp": 77, "poll": 77, "websocket": 77, "lp_servic": 77, "websocket_servic": 77, "get_standalon": [79, 81, 90], "set_standalon": [79, 81, 90], "standalon": [79, 81], "tlscertificatetyp": [83, 90], "validateenum": [83, 90], "binari": [83, 90], "ec": [83, 90], "deni": [83, 90], "tls_handshak": [83, 90], "6": 83, "x509": [83, 90], "accept": [83, 90], "pend": [83, 90], "tlsverifyst": [84, 90], "ok": [84, 90], "no_cert": [84, 90], "not_act": [84, 90], "128": 84, "signer_not_ca": [84, 90], "insecure_alg": [84, 90], "32": 84, "revok": [84, 90], "expir": [84, 90], "64": 84, "signer_not_found": [84, 90], "8": 84, "nanosleep": [85, 90], "nanosecond": 85, "timeout_add": [85, 90], "tls_deinit": [85, 90], "tls_free_certif": [85, 90], "tls_generate_dh_param": [85, 90], "bit_length": 85, "regener": 85, "tls_generate_dh_params_finish": [85, 90], "tls_init": [85, 90], "uuid_new": [85, 90], "maincontext": 85, "project": 88, "danc": 88, "inter": 88, "process": 88, "commun": 88, "librari": 88, "eventd": 88, "sourc": 88, "interconnect": 88, "heterogen": 88, "simpl": 88, "secur": 88, "scalabl": 88, "fashion": 88, "nice": 88, "among": 88, "distribut": 88, "over": 88, "cryptographi": 88, "make": 88, "perfect": 88, "choic": 88, "develop": 88, "homepag": 88, "github": 88, "com": 88, "elima": 88, "debian": 88, "packag": 88, "gir1": 88, "depend": 88, "interfac": 88, "hierarchi": 88, "enum": 88, "symbol": 88, "map": 88, "c": 90, "python": 90, "evd_buffered_input_stream_freez": 90, "evd_buffered_input_stream_new": 90, "evd_buffered_input_stream_read_str": 90, "evd_buffered_input_stream_read_str_finish": 90, "evd_buffered_input_stream_read_str_sync": 90, "evd_buffered_input_stream_thaw": 90, "evd_buffered_input_stream_unread": 90, "evd_buffered_output_stream_get_auto_flush": 90, "evd_buffered_output_stream_new": 90, "evd_buffered_output_stream_notify_writ": 90, "evd_buffered_output_stream_set_auto_flush": 90, "evd_buffered_output_stream_write_str": 90, "evd_buffered_output_stream_write_str_finish": 90, "evd_buffered_output_stream_write_str_sync": 90, "evd_connection_flush_and_shutdown": 90, "evd_connection_get_max_read": 90, "evd_connection_get_max_writ": 90, "evd_connection_get_prior": 90, "evd_connection_get_remote_address_as_str": 90, "evd_connection_get_socket": 90, "evd_connection_get_tls_act": 90, "evd_connection_get_tls_sess": 90, "evd_connection_is_connect": 90, "evd_connection_lock_clos": 90, "evd_connection_new": 90, "evd_connection_pool_get_connect": 90, "evd_connection_pool_get_connection_finish": 90, "evd_connection_pool_get_tls_autostart": 90, "evd_connection_pool_get_tls_credenti": 90, "evd_connection_pool_has_free_connect": 90, "evd_connection_pool_new": 90, "evd_connection_pool_recycl": 90, "evd_connection_pool_set_tls_autostart": 90, "evd_connection_pool_set_tls_credenti": 90, "evd_connection_set_socket": 90, "evd_connection_starttl": 90, "evd_connection_starttls_finish": 90, "evd_connection_unlock_clos": 90, "evd_daemon_daemon": 90, "evd_daemon_get_default": 90, "evd_daemon_get_pid_fil": 90, "evd_daemon_new": 90, "evd_daemon_quit": 90, "evd_daemon_run": 90, "evd_daemon_set_pid_fil": 90, "evd_daemon_set_timeout": 90, "evd_daemon_set_us": 90, "evd_daemon_set_user_id": 90, "evd_dbus_bridge_new": 90, "evd_dbus_daemon_new": 90, "evd_deferred_complet": 90, "defer": [90, 91], "evd_deferred_complete_in_idl": 90, "evd_deferred_get_promis": 90, "evd_deferred_new": 90, "evd_deferred_ref": 90, "evd_deferred_set_result_boolean": 90, "evd_deferred_set_result_point": 90, "evd_deferred_set_result_s": 90, "evd_deferred_take_result_error": 90, "evd_deferred_unref": 90, "evd_http_connection_get_current_request": 90, "evd_http_connection_get_keepal": 90, "evd_http_connection_new": 90, "evd_http_connection_read_all_cont": 90, "evd_http_connection_read_all_content_finish": 90, "evd_http_connection_read_cont": 90, "evd_http_connection_read_content_finish": 90, "evd_http_connection_read_request_head": 90, "evd_http_connection_read_request_headers_finish": 90, "evd_http_connection_read_response_head": 90, "evd_http_connection_read_response_headers_finish": 90, "evd_http_connection_redirect": 90, "evd_http_connection_respond": 90, "evd_http_connection_respond_simpl": 90, "evd_http_connection_set_current_request": 90, "evd_http_connection_set_keepal": 90, "evd_http_connection_unread_request_head": 90, "evd_http_connection_write_cont": 90, "evd_http_connection_write_request_head": 90, "evd_http_connection_write_request_headers_finish": 90, "evd_http_connection_write_response_head": 90, "evd_http_message_get_head": 90, "evd_http_message_get_vers": 90, "evd_http_message_headers_to_str": 90, "evd_http_message_new": 90, "evd_http_request_get_basic_auth_credenti": 90, "evd_http_request_get_cookie_valu": 90, "evd_http_request_get_method": 90, "evd_http_request_get_origin": 90, "evd_http_request_get_path": 90, "evd_http_request_get_uri": 90, "evd_http_request_is_cors_preflight": 90, "evd_http_request_is_cross_origin": 90, "evd_http_request_new": 90, "evd_http_request_set_basic_auth_credenti": 90, "evd_http_request_to_str": 90, "evd_io_stream_get_group": 90, "evd_io_stream_get_input_throttl": 90, "evd_io_stream_get_output_throttl": 90, "evd_io_stream_group_add": 90, "evd_io_stream_group_new": 90, "evd_io_stream_group_remov": 90, "evd_io_stream_set_group": 90, "evd_ipc_mechanism_unuse_transport": 90, "evd_ipc_mechanism_use_transport": 90, "evd_jsonrpc_call_method": 90, "evd_jsonrpc_call_method_finish": 90, "evd_jsonrpc_http_client_call_method": 90, "evd_jsonrpc_http_client_call_method_finish": 90, "evd_jsonrpc_http_client_get_http_request": 90, "evd_jsonrpc_http_client_new": 90, "evd_jsonrpc_http_server_get_response_head": 90, "evd_jsonrpc_http_server_new": 90, "evd_jsonrpc_http_server_respond": 90, "evd_jsonrpc_http_server_respond_error": 90, "evd_jsonrpc_http_server_set_method_call_callback": 90, "evd_jsonrpc_new": 90, "evd_jsonrpc_respond": 90, "evd_jsonrpc_respond_error": 90, "evd_jsonrpc_respond_from_error": 90, "evd_jsonrpc_send_notif": 90, "evd_jsonrpc_set_callback": 90, "evd_jsonrpc_transport_error": 90, "evd_jsonrpc_transport_rec": 90, "evd_jsonrpc_transport_set_send_callback": 90, "evd_longpolling_server_new": 90, "evd_message_type_binari": 90, "evd_message_type_text": 90, "evd_nanosleep": 90, "evd_peer_backlog_get_length": 90, "evd_peer_backlog_pop_fram": 90, "evd_peer_backlog_push_fram": 90, "evd_peer_backlog_unshift_fram": 90, "evd_peer_clos": 90, "evd_peer_get_id": 90, "evd_peer_get_transport": 90, "evd_peer_is_al": 90, "evd_peer_is_clos": 90, "evd_peer_manager_add_p": 90, "evd_peer_manager_close_p": 90, "evd_peer_manager_get_all_p": 90, "evd_peer_manager_get_default": 90, "evd_peer_manager_lookup_p": 90, "evd_peer_manager_new": 90, "evd_peer_pop_messag": 90, "evd_peer_push_messag": 90, "evd_peer_send": 90, "evd_peer_send_text": 90, "evd_peer_touch": 90, "evd_peer_unshift_messag": 90, "evd_pki_key_type_dh": 90, "evd_pki_key_type_dsa": 90, "evd_pki_key_type_ec": 90, "evd_pki_key_type_rsa": 90, "evd_pki_key_type_unknown": 90, "evd_pki_privkey_decrypt": 90, "evd_pki_privkey_decrypt_finish": 90, "evd_pki_privkey_gener": 90, "evd_pki_privkey_generate_finish": 90, "evd_pki_privkey_get_key_typ": 90, "evd_pki_privkey_get_public_kei": 90, "evd_pki_privkey_import_n": 90, "evd_pki_privkey_new": 90, "evd_pki_privkey_sign_data": 90, "evd_pki_privkey_sign_data_finish": 90, "evd_pki_pubkey_encrypt": 90, "evd_pki_pubkey_encrypt_finish": 90, "evd_pki_pubkey_get_key_typ": 90, "evd_pki_pubkey_import_n": 90, "evd_pki_pubkey_new": 90, "evd_pki_pubkey_verify_data": 90, "evd_pki_pubkey_verify_data_finish": 90, "evd_policy_allow": 90, "evd_policy_deni": 90, "evd_promise_cancel": 90, "evd_promise_get_cancel": 90, "evd_promise_get_result_boolean": 90, "evd_promise_get_result_point": 90, "evd_promise_get_result_s": 90, "evd_promise_propagate_error": 90, "evd_promise_then": 90, "evd_reproxy_add_backend": 90, "evd_reproxy_new": 90, "evd_reproxy_remove_backend": 90, "evd_service_accept_connect": 90, "evd_service_add_listen": 90, "evd_service_get_io_stream_typ": 90, "evd_service_get_tls_autostart": 90, "evd_service_get_tls_credenti": 90, "evd_service_listen": 90, "evd_service_listen_finish": 90, "evd_service_new": 90, "evd_service_reject_connect": 90, "evd_service_remove_listen": 90, "evd_service_set_io_stream_typ": 90, "evd_service_set_tls_autostart": 90, "evd_service_set_tls_credenti": 90, "evd_socket_bind": 90, "evd_socket_bind_addr": 90, "evd_socket_bind_finish": 90, "evd_socket_clos": 90, "evd_socket_connect_addr": 90, "evd_socket_connect_finish": 90, "evd_socket_connect_to": 90, "evd_socket_get_condit": 90, "evd_socket_get_famili": 90, "evd_socket_get_local_address": 90, "evd_socket_get_prior": 90, "evd_socket_get_remote_address": 90, "evd_socket_get_remote_address_str": 90, "evd_socket_get_socket": 90, "evd_socket_get_statu": 90, "evd_socket_listen": 90, "evd_socket_listen_addr": 90, "evd_socket_listen_finish": 90, "evd_socket_new": 90, "evd_socket_set_notify_condition_callback": 90, "evd_socket_set_prior": 90, "evd_socket_shutdown": 90, "evd_socket_state_bound": 90, "evd_socket_state_clos": 90, "evd_socket_state_connect": 90, "evd_socket_state_listen": 90, "evd_socket_state_resolv": 90, "evd_socket_state_tls_handshak": 90, "evd_socket_watch_condit": 90, "evd_stream_throttle_get_actual_bandwidth": 90, "evd_stream_throttle_get_tot": 90, "evd_stream_throttle_new": 90, "evd_stream_throttle_report": 90, "evd_stream_throttle_request": 90, "evd_throttled_input_stream_add_throttl": 90, "evd_throttled_input_stream_get_max_read": 90, "evd_throttled_input_stream_new": 90, "evd_throttled_input_stream_remove_throttl": 90, "evd_throttled_output_stream_add_throttl": 90, "evd_throttled_output_stream_get_max_writ": 90, "evd_throttled_output_stream_new": 90, "evd_throttled_output_stream_remove_throttl": 90, "evd_timeout_add": 90, "evd_tls_certificate_get_activation_tim": 90, "evd_tls_certificate_get_dn": 90, "evd_tls_certificate_get_expiration_tim": 90, "evd_tls_certificate_get_n": 90, "evd_tls_certificate_get_pki_kei": 90, "evd_tls_certificate_import": 90, "evd_tls_certificate_import_from_fil": 90, "evd_tls_certificate_import_from_file_finish": 90, "evd_tls_certificate_new": 90, "evd_tls_certificate_steal_n": 90, "evd_tls_certificate_type_openpgp": 90, "evd_tls_certificate_type_unknown": 90, "evd_tls_certificate_type_x509": 90, "evd_tls_certificate_verify_valid": 90, "evd_tls_credentials_add_certif": 90, "evd_tls_credentials_add_certificate_from_fil": 90, "evd_tls_credentials_add_certificate_from_file_finish": 90, "evd_tls_credentials_get_credenti": 90, "evd_tls_credentials_new": 90, "evd_tls_credentials_prepar": 90, "evd_tls_credentials_readi": 90, "evd_tls_credentials_set_cert_callback": 90, "unavail": 90, "evd_tls_deinit": 90, "evd_tls_free_certif": 90, "evd_tls_generate_dh_param": 90, "evd_tls_generate_dh_params_finish": 90, "evd_tls_init": 90, "evd_tls_mode_cli": 90, "evd_tls_mode_serv": 90, "evd_tls_privkey_get_n": 90, "evd_tls_privkey_get_pki_kei": 90, "evd_tls_privkey_import": 90, "evd_tls_privkey_import_from_fil": 90, "evd_tls_privkey_import_from_file_finish": 90, "evd_tls_privkey_new": 90, "evd_tls_privkey_steal_n": 90, "evd_tls_session_clos": 90, "evd_tls_session_copy_properti": 90, "evd_tls_session_get_credenti": 90, "evd_tls_session_get_direct": 90, "evd_tls_session_get_peer_certif": 90, "evd_tls_session_get_server_nam": 90, "evd_tls_session_handshak": 90, "evd_tls_session_new": 90, "evd_tls_session_read": 90, "evd_tls_session_reset": 90, "evd_tls_session_set_credenti": 90, "evd_tls_session_set_server_nam": 90, "evd_tls_session_set_transport_pull_func": 90, "evd_tls_session_set_transport_push_func": 90, "evd_tls_session_shutdown_writ": 90, "evd_tls_session_verify_p": 90, "evd_tls_session_writ": 90, "evd_tls_verify_state_expir": 90, "evd_tls_verify_state_insecure_alg": 90, "evd_tls_verify_state_invalid": 90, "evd_tls_verify_state_no_cert": 90, "evd_tls_verify_state_not_act": 90, "evd_tls_verify_state_ok": 90, "evd_tls_verify_state_revok": 90, "evd_tls_verify_state_signer_not_ca": 90, "evd_tls_verify_state_signer_not_found": 90, "evd_transport_accept_p": 90, "evd_transport_close_p": 90, "evd_transport_create_new_p": 90, "evd_transport_get_peer_manag": 90, "evd_transport_lookup_p": 90, "evd_transport_open": 90, "evd_transport_open_finish": 90, "evd_transport_peer_is_connect": 90, "evd_transport_rec": 90, "evd_transport_receive_text": 90, "evd_transport_reject_p": 90, "evd_transport_send": 90, "evd_transport_send_text": 90, "evd_transport_set_peer_manag": 90, "evd_uuid_new": 90, "evd_validate_accept": 90, "evd_validate_pend": 90, "evd_validate_reject": 90, "evd_web_dir_get_alia": 90, "evd_web_dir_get_root": 90, "evd_web_dir_new": 90, "evd_web_dir_set_alia": 90, "evd_web_dir_set_root": 90, "evd_web_selector_add_servic": 90, "evd_web_selector_new": 90, "evd_web_selector_remove_servic": 90, "evd_web_selector_set_default_servic": 90, "evd_web_service_add_connection_with_request": 90, "evd_web_service_allow_origin": 90, "evd_web_service_deny_origin": 90, "evd_web_service_get_origin_polici": 90, "evd_web_service_new": 90, "evd_web_service_origin_allow": 90, "evd_web_service_respond": 90, "evd_web_service_respond_head": 90, "evd_web_service_set_origin_polici": 90, "evd_web_transport_server_get_base_path": 90, "evd_web_transport_server_get_validate_peer_argu": 90, "evd_web_transport_server_new": 90, "evd_web_transport_server_set_enable_websocket": 90, "evd_web_transport_server_set_external_base_url": 90, "evd_web_transport_server_unuse_selector": 90, "evd_web_transport_server_use_selector": 90, "evd_websocket_client_get_standalon": 90, "evd_websocket_client_get_validate_peer_argu": 90, "evd_websocket_client_new": 90, "evd_websocket_client_set_standalon": 90, "evd_websocket_server_get_standalon": 90, "evd_websocket_server_get_validate_peer_argu": 90, "evd_websocket_server_new": 90, "evd_websocket_server_set_standalon": 90, "evdbufferedinputstream": 90, "evdbufferedinputstreamclass": 90, "evdbufferedoutputstream": 90, "evdbufferedoutputstreamclass": 90, "evdconnectionclass": 90, "evdconnectionpool": 90, "evdconnectionpoolclass": 90, "evddaemon": 90, "evddaemonclass": 90, "evddbusbridg": 90, "evddbusbridgeclass": 90, "evddbusdaemon": 90, "evddbusdaemonclass": 90, "evddef": 90, "evdhttpconnect": 90, "evdhttpconnectionclass": 90, "evdhttpmessag": 90, "evdhttpmessageclass": 90, "evdhttprequest": 90, "evdhttprequestclass": 90, "evdiostream": 90, "evdiostreamclass": 90, "evdiostreamgroup": 90, "evdiostreamgroupclass": 90, "evdipcmechan": 90, "evdipcmechanismclass": 90, "evdjsonrpc": 90, "evdjsonrpcclass": 90, "evdjsonrpchttpcli": 90, "evdjsonrpchttpclientclass": 90, "evdjsonrpchttpserv": 90, "evdjsonrpchttpserverclass": 90, "evdjsonrpchttpservermethodcallcb": 90, "evdjsonrpcmethodcallcb": 90, "evdjsonrpcnotificationcb": 90, "evdjsonrpctransportsendcb": 90, "evdjsonrpctransportwritecb": 90, "evdlongpollingserv": 90, "evdlongpollingserverclass": 90, "evdmessagetyp": 90, "evdpeer": 90, "evdpeerclass": 90, "evdpeermanag": 90, "evdpeermanagerclass": 90, "evdpkikeytyp": 90, "evdpkiprivkei": 90, "evdpkiprivkeyclass": 90, "evdpkipubkei": 90, "evdpkipubkeyclass": 90, "evdpolici": 90, "evdpromis": 90, "evdpromiseclass": 90, "evdreproxi": 90, "evdreproxyclass": 90, "evdservic": 90, "evdserviceclass": 90, "evdsocket": 90, "evdsocketclass": 90, "evdsocketev": 90, "socketev": [90, 91], "evdsocketnotifyconditioncallback": 90, "evdsocketst": 90, "evdstreamthrottl": 90, "evdstreamthrottleclass": 90, "evdthrottledinputstream": 90, "evdthrottledinputstreamclass": 90, "evdthrottledoutputstream": 90, "evdthrottledoutputstreamclass": 90, "evdtlscertif": 90, "evdtlscertificateclass": 90, "evdtlscertificatetyp": 90, "evdtlscredenti": 90, "evdtlscredentialscertcb": 90, "evdtlscredentialsclass": 90, "evdtlsmod": 90, "evdtlsprivkei": 90, "evdtlsprivkeyclass": 90, "evdtlssess": 90, "evdtlssessionclass": 90, "evdtlssessionpullfunc": 90, "evdtlssessionpushfunc": 90, "evdtlsverifyst": 90, "evdtransport": 90, "evdtransportinterfac": 90, "evdvalidateenum": 90, "evdwebdir": 90, "evdwebdirclass": 90, "evdwebselector": 90, "evdwebselectorclass": 90, "evdwebservic": 90, "evdwebserviceclass": 90, "evdwebsocketcli": 90, "evdwebsocketclientclass": 90, "evdwebsocketserv": 90, "evdwebsocketserverclass": 90, "evdwebtransportserv": 90, "evdwebtransportserverclass": 90}, "objects": {"Evd": [[3, 0, 1, "", "BufferedInputStream"], [4, 0, 1, "", "BufferedInputStreamClass"], [5, 0, 1, "", "BufferedOutputStream"], [6, 0, 1, "", "BufferedOutputStreamClass"], [7, 0, 1, "", "Connection"], [8, 0, 1, "", "ConnectionClass"], [9, 0, 1, "", "ConnectionPool"], [10, 0, 1, "", "ConnectionPoolClass"], [11, 0, 1, "", "DBusBridge"], [12, 0, 1, "", "DBusBridgeClass"], [13, 0, 1, "", "DBusDaemon"], [14, 0, 1, "", "DBusDaemonClass"], [15, 0, 1, "", "Daemon"], [16, 0, 1, "", "DaemonClass"], [17, 0, 1, "", "Deferred"], [18, 0, 1, "", "HttpConnection"], [19, 0, 1, "", "HttpConnectionClass"], [20, 0, 1, "", "HttpMessage"], [21, 0, 1, "", "HttpMessageClass"], [22, 0, 1, "", "HttpRequest"], [23, 0, 1, "", "HttpRequestClass"], [24, 0, 1, "", "IoStream"], [25, 0, 1, "", "IoStreamClass"], [26, 0, 1, "", "IoStreamGroup"], [27, 0, 1, "", "IoStreamGroupClass"], [28, 0, 1, "", "IpcMechanism"], [29, 0, 1, "", "IpcMechanismClass"], [30, 0, 1, "", "Jsonrpc"], [31, 0, 1, "", "JsonrpcClass"], [32, 0, 1, "", "JsonrpcHttpClient"], [33, 0, 1, "", "JsonrpcHttpClientClass"], [34, 0, 1, "", "JsonrpcHttpServer"], [35, 0, 1, "", "JsonrpcHttpServerClass"], [0, 3, 1, "", "JsonrpcHttpServerMethodCallCb"], [0, 3, 1, "", "JsonrpcMethodCallCb"], [0, 3, 1, "", "JsonrpcNotificationCb"], [0, 3, 1, "", "JsonrpcTransportSendCb"], [0, 3, 1, "", "JsonrpcTransportWriteCb"], [36, 0, 1, "", "LongpollingServer"], [37, 0, 1, "", "LongpollingServerClass"], [83, 0, 1, "", "MessageType"], [38, 0, 1, "", "Peer"], [39, 0, 1, "", "PeerClass"], [40, 0, 1, "", "PeerManager"], [41, 0, 1, "", "PeerManagerClass"], [83, 0, 1, "", "PkiKeyType"], [42, 0, 1, "", "PkiPrivkey"], [43, 0, 1, "", "PkiPrivkeyClass"], [44, 0, 1, "", "PkiPubkey"], [45, 0, 1, "", "PkiPubkeyClass"], [83, 0, 1, "", "Policy"], [46, 0, 1, "", "Promise"], [47, 0, 1, "", "PromiseClass"], [48, 0, 1, "", "Reproxy"], [49, 0, 1, "", "ReproxyClass"], [50, 0, 1, "", "Service"], [51, 0, 1, "", "ServiceClass"], [52, 0, 1, "", "Socket"], [53, 0, 1, "", "SocketClass"], [54, 0, 1, "", "SocketEvent"], [0, 3, 1, "", "SocketNotifyConditionCallback"], [83, 0, 1, "", "SocketState"], [55, 0, 1, "", "StreamThrottle"], [56, 0, 1, "", "StreamThrottleClass"], [57, 0, 1, "", "ThrottledInputStream"], [58, 0, 1, "", "ThrottledInputStreamClass"], [59, 0, 1, "", "ThrottledOutputStream"], [60, 0, 1, "", "ThrottledOutputStreamClass"], [61, 0, 1, "", "TlsCertificate"], [62, 0, 1, "", "TlsCertificateClass"], [83, 0, 1, "", "TlsCertificateType"], [63, 0, 1, "", "TlsCredentials"], [64, 0, 1, "", "TlsCredentialsClass"], [84, 0, 1, "", "TlsMode"], [65, 0, 1, "", "TlsPrivkey"], [66, 0, 1, "", "TlsPrivkeyClass"], [67, 0, 1, "", "TlsSession"], [68, 0, 1, "", "TlsSessionClass"], [0, 3, 1, "", "TlsSessionPullFunc"], [0, 3, 1, "", "TlsSessionPushFunc"], [84, 0, 1, "", "TlsVerifyState"], [69, 0, 1, "", "Transport"], [70, 0, 1, "", "TransportInterface"], [83, 0, 1, "", "ValidateEnum"], [71, 0, 1, "", "WebDir"], [72, 0, 1, "", "WebDirClass"], [73, 0, 1, "", "WebSelector"], [74, 0, 1, "", "WebSelectorClass"], [75, 0, 1, "", "WebService"], [76, 0, 1, "", "WebServiceClass"], [77, 0, 1, "", "WebTransportServer"], [78, 0, 1, "", "WebTransportServerClass"], [79, 0, 1, "", "WebsocketClient"], [80, 0, 1, "", "WebsocketClientClass"], [81, 0, 1, "", "WebsocketServer"], [82, 0, 1, "", "WebsocketServerClass"], [85, 3, 1, "", "nanosleep"], [85, 3, 1, "", "timeout_add"], [85, 3, 1, "", "tls_deinit"], [85, 3, 1, "", "tls_free_certificates"], [85, 3, 1, "", "tls_generate_dh_params"], [85, 3, 1, "", "tls_generate_dh_params_finish"], [85, 3, 1, "", "tls_init"], [85, 3, 1, "", "uuid_new"]], "Evd.BufferedInputStream": [[3, 1, 1, "", "freeze"], [3, 1, 1, "", "new"], [3, 1, 1, "", "read_str"], [3, 1, 1, "", "read_str_finish"], [3, 1, 1, "", "read_str_sync"], [3, 1, 1, "", "thaw"], [3, 1, 1, "", "unread"]], "Evd.BufferedOutputStream": [[5, 1, 1, "", "get_auto_flush"], [5, 1, 1, "", "new"], [5, 1, 1, "", "notify_write"], [5, 1, 1, "", "set_auto_flush"], [5, 1, 1, "", "write_str"], [5, 1, 1, "", "write_str_finish"], [5, 1, 1, "", "write_str_sync"]], "Evd.BufferedOutputStream.props": [[5, 2, 1, "", "auto_flush"]], "Evd.Connection": [[7, 1, 1, "", "do_close"], [7, 1, 1, "", "do_write"], [7, 1, 1, "", "flush_and_shutdown"], [7, 1, 1, "", "get_max_readable"], [7, 1, 1, "", "get_max_writable"], [7, 1, 1, "", "get_priority"], [7, 1, 1, "", "get_remote_address_as_string"], [7, 1, 1, "", "get_socket"], [7, 1, 1, "", "get_tls_active"], [7, 1, 1, "", "get_tls_session"], [7, 1, 1, "", "is_connected"], [7, 1, 1, "", "lock_close"], [7, 1, 1, "", "new"], [7, 1, 1, "", "set_socket"], [7, 1, 1, "", "starttls"], [7, 1, 1, "", "starttls_finish"], [7, 1, 1, "", "unlock_close"]], "Evd.Connection.props": [[7, 2, 1, "", "socket"], [7, 2, 1, "", "tls"], [7, 2, 1, "", "tls_active"]], "Evd.Connection.signals": [[7, 3, 1, "", "write"]], "Evd.ConnectionPool": [[9, 1, 1, "", "do_get_connection_type"], [9, 1, 1, "", "get_connection"], [9, 1, 1, "", "get_connection_finish"], [9, 1, 1, "", "get_tls_autostart"], [9, 1, 1, "", "get_tls_credentials"], [9, 1, 1, "", "has_free_connections"], [9, 1, 1, "", "new"], [9, 1, 1, "", "recycle"], [9, 1, 1, "", "set_tls_autostart"], [9, 1, 1, "", "set_tls_credentials"]], "Evd.ConnectionPool.props": [[9, 2, 1, "", "address"], [9, 2, 1, "", "connection_type"]], "Evd.DBusBridge": [[11, 1, 1, "", "new"]], "Evd.DBusDaemon": [[13, 1, 1, "", "new"]], "Evd.DBusDaemon.props": [[13, 2, 1, "", "address"], [13, 2, 1, "", "config_file"]], "Evd.Daemon": [[15, 1, 1, "", "daemonize"], [15, 1, 1, "", "get_default"], [15, 1, 1, "", "get_pid_file"], [15, 1, 1, "", "new"], [15, 1, 1, "", "quit"], [15, 1, 1, "", "run"], [15, 1, 1, "", "set_pid_file"], [15, 1, 1, "", "set_timeout"], [15, 1, 1, "", "set_user"], [15, 1, 1, "", "set_user_id"]], "Evd.Deferred": [[17, 1, 1, "", "complete"], [17, 1, 1, "", "complete_in_idle"], [17, 1, 1, "", "get_promise"], [17, 1, 1, "", "new"], [17, 1, 1, "", "ref"], [17, 1, 1, "", "set_result_boolean"], [17, 1, 1, "", "set_result_pointer"], [17, 1, 1, "", "set_result_size"], [17, 1, 1, "", "take_result_error"], [17, 1, 1, "", "unref"]], "Evd.HttpConnection": [[18, 1, 1, "", "get_current_request"], [18, 1, 1, "", "get_keepalive"], [18, 1, 1, "", "new"], [18, 1, 1, "", "read_all_content"], [18, 1, 1, "", "read_all_content_finish"], [18, 1, 1, "", "read_content"], [18, 1, 1, "", "read_content_finish"], [18, 1, 1, "", "read_request_headers"], [18, 1, 1, "", "read_request_headers_finish"], [18, 1, 1, "", "read_response_headers"], [18, 1, 1, "", "read_response_headers_finish"], [18, 1, 1, "", "redirect"], [18, 1, 1, "", "respond"], [18, 1, 1, "", "respond_simple"], [18, 1, 1, "", "set_current_request"], [18, 1, 1, "", "set_keepalive"], [18, 1, 1, "", "unread_request_headers"], [18, 1, 1, "", "write_content"], [18, 1, 1, "", "write_request_headers"], [18, 1, 1, "", "write_request_headers_finish"], [18, 1, 1, "", "write_response_headers"]], "Evd.HttpMessage": [[20, 1, 1, "", "get_headers"], [20, 1, 1, "", "get_version"], [20, 1, 1, "", "headers_to_string"], [20, 1, 1, "", "new"]], "Evd.HttpMessage.props": [[20, 2, 1, "", "headers"], [20, 2, 1, "", "version"]], "Evd.HttpRequest": [[22, 1, 1, "", "get_basic_auth_credentials"], [22, 1, 1, "", "get_cookie_value"], [22, 1, 1, "", "get_method"], [22, 1, 1, "", "get_origin"], [22, 1, 1, "", "get_path"], [22, 1, 1, "", "get_uri"], [22, 1, 1, "", "is_cors_preflight"], [22, 1, 1, "", "is_cross_origin"], [22, 1, 1, "", "new"], [22, 1, 1, "", "set_basic_auth_credentials"], [22, 1, 1, "", "to_string"]], "Evd.HttpRequest.props": [[22, 2, 1, "", "method"], [22, 2, 1, "", "path"], [22, 2, 1, "", "uri"]], "Evd.IoStream": [[24, 1, 1, "", "do_group_changed"], [24, 1, 1, "", "do_signal_close"], [24, 1, 1, "", "do_signal_group_changed"], [24, 1, 1, "", "get_group"], [24, 1, 1, "", "get_input_throttle"], [24, 1, 1, "", "get_output_throttle"], [24, 1, 1, "", "set_group"]], "Evd.IoStream.props": [[24, 2, 1, "", "group"], [24, 2, 1, "", "input_throttle"], [24, 2, 1, "", "output_throttle"]], "Evd.IoStream.signals": [[24, 3, 1, "", "close"], [24, 3, 1, "", "group_changed"]], "Evd.IoStreamGroup": [[26, 1, 1, "", "add"], [26, 1, 1, "", "do_add"], [26, 1, 1, "", "do_remove"], [26, 1, 1, "", "new"], [26, 1, 1, "", "remove"]], "Evd.IoStreamGroup.props": [[26, 2, 1, "", "input_throttle"], [26, 2, 1, "", "output_throttle"]], "Evd.IpcMechanism": [[28, 1, 1, "", "do_transport_new_peer"], [28, 1, 1, "", "do_transport_receive"], [28, 1, 1, "", "unuse_transport"], [28, 1, 1, "", "use_transport"]], "Evd.Jsonrpc": [[30, 1, 1, "", "call_method"], [30, 1, 1, "", "call_method_finish"], [30, 1, 1, "", "new"], [30, 1, 1, "", "respond"], [30, 1, 1, "", "respond_error"], [30, 1, 1, "", "respond_from_error"], [30, 1, 1, "", "send_notification"], [30, 1, 1, "", "set_callbacks"], [30, 1, 1, "", "transport_error"], [30, 1, 1, "", "transport_receive"], [30, 1, 1, "", "transport_set_send_callback"]], "Evd.JsonrpcHttpClient": [[32, 1, 1, "", "call_method"], [32, 1, 1, "", "call_method_finish"], [32, 1, 1, "", "get_http_request"], [32, 1, 1, "", "new"]], "Evd.JsonrpcHttpClient.props": [[32, 2, 1, "", "http_request"], [32, 2, 1, "", "url"]], "Evd.JsonrpcHttpServer": [[34, 1, 1, "", "get_response_headers"], [34, 1, 1, "", "new"], [34, 1, 1, "", "respond"], [34, 1, 1, "", "respond_error"], [34, 1, 1, "", "set_method_call_callback"]], "Evd.JsonrpcHttpServer.props": [[34, 2, 1, "", "response_headers"]], "Evd.LongpollingServer": [[36, 1, 1, "", "new"]], "Evd.MessageType": [[83, 4, 1, "", "BINARY"], [83, 4, 1, "", "TEXT"]], "Evd.Peer": [[38, 1, 1, "", "backlog_get_length"], [38, 1, 1, "", "backlog_pop_frame"], [38, 1, 1, "", "backlog_push_frame"], [38, 1, 1, "", "backlog_unshift_frame"], [38, 1, 1, "", "close"], [38, 1, 1, "", "get_id"], [38, 1, 1, "", "get_transport"], [38, 1, 1, "", "is_alive"], [38, 1, 1, "", "is_closed"], [38, 1, 1, "", "pop_message"], [38, 1, 1, "", "push_message"], [38, 1, 1, "", "send"], [38, 1, 1, "", "send_text"], [38, 1, 1, "", "touch"], [38, 1, 1, "", "unshift_message"]], "Evd.Peer.props": [[38, 2, 1, "", "id"], [38, 2, 1, "", "transport"]], "Evd.PeerManager": [[40, 1, 1, "", "add_peer"], [40, 1, 1, "", "close_peer"], [40, 1, 1, "", "do_new_peer"], [40, 1, 1, "", "do_peer_closed"], [40, 1, 1, "", "get_all_peers"], [40, 1, 1, "", "get_default"], [40, 1, 1, "", "lookup_peer"], [40, 1, 1, "", "new"]], "Evd.PeerManager.signals": [[40, 3, 1, "", "new_peer"], [40, 3, 1, "", "peer_closed"]], "Evd.PkiKeyType": [[83, 4, 1, "", "DH"], [83, 4, 1, "", "DSA"], [83, 4, 1, "", "EC"], [83, 4, 1, "", "RSA"], [83, 4, 1, "", "UNKNOWN"]], "Evd.PkiPrivkey": [[42, 1, 1, "", "decrypt"], [42, 1, 1, "", "decrypt_finish"], [42, 1, 1, "", "generate"], [42, 1, 1, "", "generate_finish"], [42, 1, 1, "", "get_key_type"], [42, 1, 1, "", "get_public_key"], [42, 1, 1, "", "import_native"], [42, 1, 1, "", "new"], [42, 1, 1, "", "sign_data"], [42, 1, 1, "", "sign_data_finish"]], "Evd.PkiPrivkey.props": [[42, 2, 1, "", "type"]], "Evd.PkiPubkey": [[44, 1, 1, "", "encrypt"], [44, 1, 1, "", "encrypt_finish"], [44, 1, 1, "", "get_key_type"], [44, 1, 1, "", "import_native"], [44, 1, 1, "", "new"], [44, 1, 1, "", "verify_data"], [44, 1, 1, "", "verify_data_finish"]], "Evd.PkiPubkey.props": [[44, 2, 1, "", "type"]], "Evd.Policy": [[83, 4, 1, "", "ALLOW"], [83, 4, 1, "", "DENY"]], "Evd.Promise": [[46, 1, 1, "", "cancel"], [46, 1, 1, "", "get_cancellable"], [46, 1, 1, "", "get_result_boolean"], [46, 1, 1, "", "get_result_pointer"], [46, 1, 1, "", "get_result_size"], [46, 1, 1, "", "propagate_error"], [46, 1, 1, "", "then"]], "Evd.Reproxy": [[48, 1, 1, "", "add_backend"], [48, 1, 1, "", "new"], [48, 1, 1, "", "remove_backend"]], "Evd.Service": [[50, 1, 1, "", "accept_connection"], [50, 1, 1, "", "add_listener"], [50, 1, 1, "", "do_connection_accepted"], [50, 1, 1, "", "do_connection_rejected"], [50, 1, 1, "", "do_signal_validate_connection"], [50, 1, 1, "", "do_signal_validate_tls_connection"], [50, 1, 1, "", "get_io_stream_type"], [50, 1, 1, "", "get_tls_autostart"], [50, 1, 1, "", "get_tls_credentials"], [50, 1, 1, "", "listen"], [50, 1, 1, "", "listen_finish"], [50, 1, 1, "", "new"], [50, 1, 1, "", "reject_connection"], [50, 1, 1, "", "remove_listener"], [50, 1, 1, "", "set_io_stream_type"], [50, 1, 1, "", "set_tls_autostart"], [50, 1, 1, "", "set_tls_credentials"]], "Evd.Service.props": [[50, 2, 1, "", "tls_autostart"], [50, 2, 1, "", "tls_credentials"]], "Evd.Service.signals": [[50, 3, 1, "", "validate_connection"], [50, 3, 1, "", "validate_tls_connection"]], "Evd.Socket": [[52, 1, 1, "", "bind"], [52, 1, 1, "", "bind_addr"], [52, 1, 1, "", "bind_finish"], [52, 1, 1, "", "close"], [52, 1, 1, "", "connect_addr"], [52, 1, 1, "", "connect_finish"], [52, 1, 1, "", "connect_to"], [52, 1, 1, "", "do_cleanup"], [52, 1, 1, "", "do_close"], [52, 1, 1, "", "do_error"], [52, 1, 1, "", "do_handle_condition"], [52, 1, 1, "", "do_new_connection"], [52, 1, 1, "", "do_state_changed"], [52, 1, 1, "", "get_condition"], [52, 1, 1, "", "get_family"], [52, 1, 1, "", "get_local_address"], [52, 1, 1, "", "get_priority"], [52, 1, 1, "", "get_remote_address"], [52, 1, 1, "", "get_remote_address_str"], [52, 1, 1, "", "get_socket"], [52, 1, 1, "", "get_status"], [52, 1, 1, "", "listen"], [52, 1, 1, "", "listen_addr"], [52, 1, 1, "", "listen_finish"], [52, 1, 1, "", "new"], [52, 1, 1, "", "set_notify_condition_callback"], [52, 1, 1, "", "set_priority"], [52, 1, 1, "", "shutdown"], [52, 1, 1, "", "watch_condition"]], "Evd.Socket.props": [[52, 2, 1, "", "family"], [52, 2, 1, "", "io_stream_type"], [52, 2, 1, "", "priority"], [52, 2, 1, "", "protocol"], [52, 2, 1, "", "socket"], [52, 2, 1, "", "status"], [52, 2, 1, "", "type"]], "Evd.Socket.signals": [[52, 3, 1, "", "close"], [52, 3, 1, "", "error"], [52, 3, 1, "", "new_connection"], [52, 3, 1, "", "state_changed"]], "Evd.SocketState": [[83, 4, 1, "", "BOUND"], [83, 4, 1, "", "CLOSED"], [83, 4, 1, "", "CLOSING"], [83, 4, 1, "", "CONNECTED"], [83, 4, 1, "", "CONNECTING"], [83, 4, 1, "", "LISTENING"], [83, 4, 1, "", "RESOLVING"], [83, 4, 1, "", "TLS_HANDSHAKING"]], "Evd.StreamThrottle": [[55, 1, 1, "", "get_actual_bandwidth"], [55, 1, 1, "", "get_total"], [55, 1, 1, "", "new"], [55, 1, 1, "", "report"], [55, 1, 1, "", "request"]], "Evd.StreamThrottle.props": [[55, 2, 1, "", "bandwidth"], [55, 2, 1, "", "latency"], [55, 2, 1, "", "total"]], "Evd.ThrottledInputStream": [[57, 1, 1, "", "add_throttle"], [57, 1, 1, "", "do_delay_read"], [57, 1, 1, "", "get_max_readable"], [57, 1, 1, "", "new"], [57, 1, 1, "", "remove_throttle"]], "Evd.ThrottledInputStream.signals": [[57, 3, 1, "", "delay_read"]], "Evd.ThrottledOutputStream": [[59, 1, 1, "", "add_throttle"], [59, 1, 1, "", "do_delay_write"], [59, 1, 1, "", "get_max_writable"], [59, 1, 1, "", "new"], [59, 1, 1, "", "remove_throttle"]], "Evd.ThrottledOutputStream.signals": [[59, 3, 1, "", "delay_write"]], "Evd.TlsCertificate": [[61, 1, 1, "", "get_activation_time"], [61, 1, 1, "", "get_dn"], [61, 1, 1, "", "get_expiration_time"], [61, 1, 1, "", "get_native"], [61, 1, 1, "", "get_pki_key"], [61, 1, 1, "", "import_"], [61, 1, 1, "", "import_from_file"], [61, 1, 1, "", "import_from_file_finish"], [61, 1, 1, "", "new"], [61, 1, 1, "", "steal_native"], [61, 1, 1, "", "verify_validity"]], "Evd.TlsCertificate.props": [[61, 2, 1, "", "type"]], "Evd.TlsCertificateType": [[83, 4, 1, "", "OPENPGP"], [83, 4, 1, "", "UNKNOWN"], [83, 4, 1, "", "X509"]], "Evd.TlsCredentials": [[63, 1, 1, "", "add_certificate"], [63, 1, 1, "", "add_certificate_from_file"], [63, 1, 1, "", "add_certificate_from_file_finish"], [63, 1, 1, "", "do_ready"], [63, 1, 1, "", "get_credentials"], [63, 1, 1, "", "new"], [63, 1, 1, "", "prepare"], [63, 1, 1, "", "ready"]], "Evd.TlsCredentials.props": [[63, 2, 1, "", "dh_bits"]], "Evd.TlsCredentials.signals": [[63, 3, 1, "", "ready"]], "Evd.TlsMode": [[84, 4, 1, "", "CLIENT"], [84, 4, 1, "", "SERVER"]], "Evd.TlsPrivkey": [[65, 1, 1, "", "get_native"], [65, 1, 1, "", "get_pki_key"], [65, 1, 1, "", "import_"], [65, 1, 1, "", "import_from_file"], [65, 1, 1, "", "import_from_file_finish"], [65, 1, 1, "", "new"], [65, 1, 1, "", "steal_native"]], "Evd.TlsPrivkey.props": [[65, 2, 1, "", "type"]], "Evd.TlsSession": [[67, 1, 1, "", "close"], [67, 1, 1, "", "copy_properties"], [67, 1, 1, "", "get_credentials"], [67, 1, 1, "", "get_direction"], [67, 1, 1, "", "get_peer_certificates"], [67, 1, 1, "", "get_server_name"], [67, 1, 1, "", "handshake"], [67, 1, 1, "", "new"], [67, 1, 1, "", "read"], [67, 1, 1, "", "reset"], [67, 1, 1, "", "set_credentials"], [67, 1, 1, "", "set_server_name"], [67, 1, 1, "", "set_transport_pull_func"], [67, 1, 1, "", "set_transport_push_func"], [67, 1, 1, "", "shutdown_write"], [67, 1, 1, "", "verify_peer"], [67, 1, 1, "", "write"]], "Evd.TlsSession.props": [[67, 2, 1, "", "credentials"], [67, 2, 1, "", "mode"], [67, 2, 1, "", "priority"], [67, 2, 1, "", "require_peer_cert"]], "Evd.TlsVerifyState": [[84, 4, 1, "", "EXPIRED"], [84, 4, 1, "", "INSECURE_ALG"], [84, 4, 1, "", "INVALID"], [84, 4, 1, "", "NOT_ACTIVE"], [84, 4, 1, "", "NO_CERT"], [84, 4, 1, "", "OK"], [84, 4, 1, "", "REVOKED"], [84, 4, 1, "", "SIGNER_NOT_CA"], [84, 4, 1, "", "SIGNER_NOT_FOUND"]], "Evd.Transport": [[69, 1, 1, "", "accept_peer"], [69, 1, 1, "", "close_peer"], [69, 1, 1, "", "create_new_peer"], [69, 1, 1, "", "do_accept_peer"], [69, 1, 1, "", "do_create_new_peer"], [69, 1, 1, "", "do_notify_new_peer"], [69, 1, 1, "", "do_notify_peer_closed"], [69, 1, 1, "", "do_notify_receive"], [69, 1, 1, "", "do_notify_validate_peer"], [69, 1, 1, "", "do_open"], [69, 1, 1, "", "do_peer_closed"], [69, 1, 1, "", "do_peer_is_connected"], [69, 1, 1, "", "do_receive"], [69, 1, 1, "", "do_reject_peer"], [69, 1, 1, "", "do_send"], [69, 1, 1, "", "do_signal_new_peer"], [69, 1, 1, "", "do_signal_peer_closed"], [69, 1, 1, "", "do_signal_receive"], [69, 1, 1, "", "do_signal_validate_peer"], [69, 1, 1, "", "get_peer_manager"], [69, 1, 1, "", "lookup_peer"], [69, 1, 1, "", "open"], [69, 1, 1, "", "open_finish"], [69, 1, 1, "", "peer_is_connected"], [69, 1, 1, "", "receive"], [69, 1, 1, "", "receive_text"], [69, 1, 1, "", "reject_peer"], [69, 1, 1, "", "send"], [69, 1, 1, "", "send_text"], [69, 1, 1, "", "set_peer_manager"]], "Evd.Transport.signals": [[69, 3, 1, "", "new_peer"], [69, 3, 1, "", "peer_closed"], [69, 3, 1, "", "receive"], [69, 3, 1, "", "validate_peer"]], "Evd.ValidateEnum": [[83, 4, 1, "", "ACCEPT"], [83, 4, 1, "", "PENDING"], [83, 4, 1, "", "REJECT"]], "Evd.WebDir": [[71, 1, 1, "", "get_alias"], [71, 1, 1, "", "get_root"], [71, 1, 1, "", "new"], [71, 1, 1, "", "set_alias"], [71, 1, 1, "", "set_root"]], "Evd.WebDir.props": [[71, 2, 1, "", "alias"], [71, 2, 1, "", "allow_put"], [71, 2, 1, "", "root"]], "Evd.WebSelector": [[73, 1, 1, "", "add_service"], [73, 1, 1, "", "new"], [73, 1, 1, "", "remove_service"], [73, 1, 1, "", "set_default_service"]], "Evd.WebService": [[75, 1, 1, "", "add_connection_with_request"], [75, 1, 1, "", "allow_origin"], [75, 1, 1, "", "deny_origin"], [75, 1, 1, "", "do_flush_and_return_connection"], [75, 1, 1, "", "do_log"], [75, 1, 1, "", "do_request_handler"], [75, 1, 1, "", "do_respond"], [75, 1, 1, "", "do_return_connection"], [75, 1, 1, "", "do_signal_log_entry"], [75, 1, 1, "", "do_signal_request_headers"], [75, 1, 1, "", "get_origin_policy"], [75, 1, 1, "", "new"], [75, 1, 1, "", "origin_allowed"], [75, 1, 1, "", "respond"], [75, 1, 1, "", "respond_headers"], [75, 1, 1, "", "set_origin_policy"]], "Evd.WebService.signals": [[75, 3, 1, "", "log_entry"], [75, 3, 1, "", "request_headers"]], "Evd.WebTransportServer": [[77, 1, 1, "", "get_base_path"], [77, 1, 1, "", "get_validate_peer_arguments"], [77, 1, 1, "", "new"], [77, 1, 1, "", "set_enable_websocket"], [77, 1, 1, "", "set_external_base_url"], [77, 1, 1, "", "unuse_selector"], [77, 1, 1, "", "use_selector"]], "Evd.WebTransportServer.props": [[77, 2, 1, "", "base_path"], [77, 2, 1, "", "lp_service"], [77, 2, 1, "", "websocket_service"]], "Evd.WebsocketClient": [[79, 1, 1, "", "get_standalone"], [79, 1, 1, "", "get_validate_peer_arguments"], [79, 1, 1, "", "new"], [79, 1, 1, "", "set_standalone"]], "Evd.WebsocketServer": [[81, 1, 1, "", "get_standalone"], [81, 1, 1, "", "get_validate_peer_arguments"], [81, 1, 1, "", "new"], [81, 1, 1, "", "set_standalone"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:data", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "data", "Python data"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"callback": 0, "detail": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "class": [1, 2, 3, 5, 7, 9, 11, 13, 15, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81], "structur": [1, 87, 91], "evd": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 88], "bufferedinputstream": 3, "method": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82], "virtual": [3, 5, 7, 9, 11, 13, 15, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81], "properti": [3, 5, 7, 9, 11, 13, 15, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81], "signal": [3, 5, 7, 9, 11, 13, 15, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81], "field": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82], "bufferedinputstreamclass": 4, "bufferedoutputstream": 5, "bufferedoutputstreamclass": 6, "connect": 7, "connectionclass": 8, "connectionpool": 9, "connectionpoolclass": 10, "dbusbridg": 11, "dbusbridgeclass": 12, "dbusdaemon": 13, "dbusdaemonclass": 14, "daemon": 15, "daemonclass": 16, "defer": 17, "httpconnect": 18, "httpconnectionclass": 19, "httpmessag": 20, "httpmessageclass": 21, "httprequest": 22, "httprequestclass": 23, "iostream": 24, "iostreamclass": 25, "iostreamgroup": 26, "iostreamgroupclass": 27, "ipcmechan": 28, "ipcmechanismclass": 29, "jsonrpc": 30, "jsonrpcclass": 31, "jsonrpchttpclient": 32, "jsonrpchttpclientclass": 33, "jsonrpchttpserv": 34, "jsonrpchttpserverclass": 35, "longpollingserv": 36, "longpollingserverclass": 37, "peer": 38, "peerclass": 39, "peermanag": 40, "peermanagerclass": 41, "pkiprivkei": 42, "pkiprivkeyclass": 43, "pkipubkei": 44, "pkipubkeyclass": 45, "promis": 46, "promiseclass": 47, "reproxi": 48, "reproxyclass": 49, "servic": 50, "serviceclass": 51, "socket": 52, "socketclass": 53, "socketev": 54, "streamthrottl": 55, "streamthrottleclass": 56, "throttledinputstream": 57, "throttledinputstreamclass": 58, "throttledoutputstream": 59, "throttledoutputstreamclass": 60, "tlscertif": 61, "tlscertificateclass": 62, "tlscredenti": 63, "tlscredentialsclass": 64, "tlsprivkei": 65, "tlsprivkeyclass": 66, "tlssession": 67, "tlssessionclass": 68, "transport": 69, "transportinterfac": 70, "webdir": 71, "webdirclass": 72, "webselector": 73, "webselectorclass": 74, "webservic": 75, "webserviceclass": 76, "webtransportserv": 77, "webtransportserverclass": 78, "websocketcli": 79, "websocketclientclass": 80, "websocketserv": 81, "websocketserverclass": 82, "enum": 83, "flag": 84, "function": 85, "hierarchi": 86, "interfac": [87, 89], "0": 88, "2": 88, "api": 88, "symbol": 90, "map": 90}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Callbacks": [[0, "callbacks"]], "Details": [[0, "details"], [4, "details"], [6, "details"], [8, "details"], [10, "details"], [12, "details"], [14, "details"], [16, "details"], [17, "details"], [19, "details"], [21, "details"], [23, "details"], [25, "details"], [27, "details"], [29, "details"], [31, "details"], [33, "details"], [35, "details"], [37, "details"], [39, "details"], [41, "details"], [43, "details"], [45, "details"], [47, "details"], [49, "details"], [51, "details"], [53, "details"], [54, "details"], [56, "details"], [58, "details"], [60, "details"], [62, "details"], [64, "details"], [66, "details"], [68, "details"], [70, "details"], [72, "details"], [74, "details"], [76, "details"], [78, "details"], [80, "details"], [82, "details"], [83, "details"], [84, "details"], [85, "details"]], "Class Structures": [[1, "class-structures"]], "Classes": [[2, "classes"]], "Evd.BufferedInputStream": [[3, "evd-bufferedinputstream"]], "Methods": [[3, "methods"], [4, "methods"], [5, "methods"], [6, "methods"], [7, "methods"], [8, "methods"], [9, "methods"], [10, "methods"], [11, "methods"], [12, "methods"], [13, "methods"], [14, "methods"], [15, "methods"], [16, "methods"], [17, "methods"], [18, "methods"], [19, "methods"], [20, "methods"], [21, "methods"], [22, "methods"], [23, "methods"], [24, "methods"], [25, "methods"], [26, "methods"], [27, "methods"], [28, "methods"], [29, "methods"], [30, "methods"], [31, "methods"], [32, "methods"], [33, "methods"], [34, "methods"], [35, "methods"], [36, "methods"], [37, "methods"], [38, "methods"], [39, "methods"], [40, "methods"], [41, "methods"], [42, "methods"], [43, "methods"], [44, "methods"], [45, "methods"], [46, "methods"], [47, "methods"], [48, "methods"], [49, "methods"], [50, "methods"], [51, "methods"], [52, "methods"], [53, "methods"], [54, "methods"], [55, "methods"], [56, "methods"], [57, "methods"], [58, "methods"], [59, "methods"], [60, "methods"], [61, "methods"], [62, "methods"], [63, "methods"], [64, "methods"], [65, "methods"], [66, "methods"], [67, "methods"], [68, "methods"], [69, "methods"], [70, "methods"], [71, "methods"], [72, "methods"], [73, "methods"], [74, "methods"], [75, "methods"], [76, "methods"], [77, "methods"], [78, "methods"], [79, "methods"], [80, "methods"], [81, "methods"], [82, "methods"]], "Virtual Methods": [[3, "virtual-methods"], [5, "virtual-methods"], [7, "virtual-methods"], [9, "virtual-methods"], [11, "virtual-methods"], [13, "virtual-methods"], [15, "virtual-methods"], [18, "virtual-methods"], [20, "virtual-methods"], [22, "virtual-methods"], [24, "virtual-methods"], [26, "virtual-methods"], [28, "virtual-methods"], [30, "virtual-methods"], [32, "virtual-methods"], [34, "virtual-methods"], [36, "virtual-methods"], [38, "virtual-methods"], [40, "virtual-methods"], [42, "virtual-methods"], [44, "virtual-methods"], [46, "virtual-methods"], [48, "virtual-methods"], [50, "virtual-methods"], [52, "virtual-methods"], [55, "virtual-methods"], [57, "virtual-methods"], [59, "virtual-methods"], [61, "virtual-methods"], [63, "virtual-methods"], [65, "virtual-methods"], [67, "virtual-methods"], [69, "virtual-methods"], [71, "virtual-methods"], [73, "virtual-methods"], [75, "virtual-methods"], [77, "virtual-methods"], [79, "virtual-methods"], [81, "virtual-methods"]], "Properties": [[3, "properties"], [5, "properties"], [7, "properties"], [9, "properties"], [11, "properties"], [13, "properties"], [15, "properties"], [18, "properties"], [20, "properties"], [22, "properties"], [24, "properties"], [26, "properties"], [28, "properties"], [30, "properties"], [32, "properties"], [34, "properties"], [36, "properties"], [38, "properties"], [40, "properties"], [42, "properties"], [44, "properties"], [46, "properties"], [48, "properties"], [50, "properties"], [52, "properties"], [55, "properties"], [57, "properties"], [59, "properties"], [61, "properties"], [63, "properties"], [65, "properties"], [67, "properties"], [69, "properties"], [71, "properties"], [73, "properties"], [75, "properties"], [77, "properties"], [79, "properties"], [81, "properties"]], "Signals": [[3, "signals"], [5, "signals"], [7, "signals"], [9, "signals"], [11, "signals"], [13, "signals"], [15, "signals"], [18, "signals"], [20, "signals"], [22, "signals"], [24, "signals"], [26, "signals"], [28, "signals"], [30, "signals"], [32, "signals"], [34, "signals"], [36, "signals"], [38, "signals"], [40, "signals"], [42, "signals"], [44, "signals"], [46, "signals"], [48, "signals"], [50, "signals"], [52, "signals"], [55, "signals"], [57, "signals"], [59, "signals"], [61, "signals"], [63, "signals"], [65, "signals"], [67, "signals"], [69, "signals"], [71, "signals"], [73, "signals"], [75, "signals"], [77, "signals"], [79, "signals"], [81, "signals"]], "Fields": [[3, "fields"], [4, "fields"], [5, "fields"], [6, "fields"], [7, "fields"], [8, "fields"], [9, "fields"], [10, "fields"], [11, "fields"], [12, "fields"], [13, "fields"], [14, "fields"], [15, "fields"], [16, "fields"], [17, "fields"], [18, "fields"], [19, "fields"], [20, "fields"], [21, "fields"], [22, "fields"], [23, "fields"], [24, "fields"], [25, "fields"], [26, "fields"], [27, "fields"], [28, "fields"], [29, "fields"], [30, "fields"], [31, "fields"], [32, "fields"], [33, "fields"], [34, "fields"], [35, "fields"], [36, "fields"], [37, "fields"], [38, "fields"], [39, "fields"], [40, "fields"], [41, "fields"], [42, "fields"], [43, "fields"], [44, "fields"], [45, "fields"], [46, "fields"], [47, "fields"], [48, "fields"], [49, "fields"], [50, "fields"], [51, "fields"], [52, "fields"], [53, "fields"], [54, "fields"], [55, "fields"], [56, "fields"], [57, "fields"], [58, "fields"], [59, "fields"], [60, "fields"], [61, "fields"], [62, "fields"], [63, "fields"], [64, "fields"], [65, "fields"], [66, "fields"], [67, "fields"], [68, "fields"], [69, "fields"], [70, "fields"], [71, "fields"], [72, "fields"], [73, "fields"], [74, "fields"], [75, "fields"], [76, "fields"], [77, "fields"], [78, "fields"], [79, "fields"], [80, "fields"], [81, "fields"], [82, "fields"]], "Class Details": [[3, "class-details"], [5, "class-details"], [7, "class-details"], [9, "class-details"], [11, "class-details"], [13, "class-details"], [15, "class-details"], [18, "class-details"], [20, "class-details"], [22, "class-details"], [24, "class-details"], [26, "class-details"], [28, "class-details"], [30, "class-details"], [32, "class-details"], [34, "class-details"], [36, "class-details"], [38, "class-details"], [40, "class-details"], [42, "class-details"], [44, "class-details"], [46, "class-details"], [48, "class-details"], [50, "class-details"], [52, "class-details"], [55, "class-details"], [57, "class-details"], [59, "class-details"], [61, "class-details"], [63, "class-details"], [65, "class-details"], [67, "class-details"], [69, "class-details"], [71, "class-details"], [73, "class-details"], [75, "class-details"], [77, "class-details"], [79, "class-details"], [81, "class-details"]], "Evd.BufferedInputStreamClass": [[4, "evd-bufferedinputstreamclass"]], "Evd.BufferedOutputStream": [[5, "evd-bufferedoutputstream"]], "Property Details": [[5, "property-details"], [7, "property-details"], [9, "property-details"], [13, "property-details"], [20, "property-details"], [22, "property-details"], [24, "property-details"], [26, "property-details"], [32, "property-details"], [34, "property-details"], [38, "property-details"], [42, "property-details"], [44, "property-details"], [50, "property-details"], [52, "property-details"], [55, "property-details"], [61, "property-details"], [63, "property-details"], [65, "property-details"], [67, "property-details"], [71, "property-details"], [77, "property-details"]], "Evd.BufferedOutputStreamClass": [[6, "evd-bufferedoutputstreamclass"]], "Evd.Connection": [[7, "evd-connection"]], "Signal Details": [[7, "signal-details"], [24, "signal-details"], [40, "signal-details"], [50, "signal-details"], [52, "signal-details"], [57, "signal-details"], [59, "signal-details"], [63, "signal-details"], [69, "signal-details"], [75, "signal-details"]], "Evd.ConnectionClass": [[8, "evd-connectionclass"]], "Evd.ConnectionPool": [[9, "evd-connectionpool"]], "Evd.ConnectionPoolClass": [[10, "evd-connectionpoolclass"]], "Evd.DBusBridge": [[11, "evd-dbusbridge"]], "Evd.DBusBridgeClass": [[12, "evd-dbusbridgeclass"]], "Evd.DBusDaemon": [[13, "evd-dbusdaemon"]], "Evd.DBusDaemonClass": [[14, "evd-dbusdaemonclass"]], "Evd.Daemon": [[15, "evd-daemon"]], "Evd.DaemonClass": [[16, "evd-daemonclass"]], "Evd.Deferred": [[17, "evd-deferred"]], "Evd.HttpConnection": [[18, "evd-httpconnection"]], "Evd.HttpConnectionClass": [[19, "evd-httpconnectionclass"]], "Evd.HttpMessage": [[20, "evd-httpmessage"]], "Evd.HttpMessageClass": [[21, "evd-httpmessageclass"]], "Evd.HttpRequest": [[22, "evd-httprequest"]], "Evd.HttpRequestClass": [[23, "evd-httprequestclass"]], "Evd.IoStream": [[24, "evd-iostream"]], "Evd.IoStreamClass": [[25, "evd-iostreamclass"]], "Evd.IoStreamGroup": [[26, "evd-iostreamgroup"]], "Evd.IoStreamGroupClass": [[27, "evd-iostreamgroupclass"]], "Evd.IpcMechanism": [[28, "evd-ipcmechanism"]], "Evd.IpcMechanismClass": [[29, "evd-ipcmechanismclass"]], "Evd.Jsonrpc": [[30, "evd-jsonrpc"]], "Evd.JsonrpcClass": [[31, "evd-jsonrpcclass"]], "Evd.JsonrpcHttpClient": [[32, "evd-jsonrpchttpclient"]], "Evd.JsonrpcHttpClientClass": [[33, "evd-jsonrpchttpclientclass"]], "Evd.JsonrpcHttpServer": [[34, "evd-jsonrpchttpserver"]], "Evd.JsonrpcHttpServerClass": [[35, "evd-jsonrpchttpserverclass"]], "Evd.LongpollingServer": [[36, "evd-longpollingserver"]], "Evd.LongpollingServerClass": [[37, "evd-longpollingserverclass"]], "Evd.Peer": [[38, "evd-peer"]], "Evd.PeerClass": [[39, "evd-peerclass"]], "Evd.PeerManager": [[40, "evd-peermanager"]], "Evd.PeerManagerClass": [[41, "evd-peermanagerclass"]], "Evd.PkiPrivkey": [[42, "evd-pkiprivkey"]], "Evd.PkiPrivkeyClass": [[43, "evd-pkiprivkeyclass"]], "Evd.PkiPubkey": [[44, "evd-pkipubkey"]], "Evd.PkiPubkeyClass": [[45, "evd-pkipubkeyclass"]], "Evd.Promise": [[46, "evd-promise"]], "Evd.PromiseClass": [[47, "evd-promiseclass"]], "Evd.Reproxy": [[48, "evd-reproxy"]], "Evd.ReproxyClass": [[49, "evd-reproxyclass"]], "Evd.Service": [[50, "evd-service"]], "Evd.ServiceClass": [[51, "evd-serviceclass"]], "Evd.Socket": [[52, "evd-socket"]], "Evd.SocketClass": [[53, "evd-socketclass"]], "Evd.SocketEvent": [[54, "evd-socketevent"]], "Evd.StreamThrottle": [[55, "evd-streamthrottle"]], "Evd.StreamThrottleClass": [[56, "evd-streamthrottleclass"]], "Evd.ThrottledInputStream": [[57, "evd-throttledinputstream"]], "Evd.ThrottledInputStreamClass": [[58, "evd-throttledinputstreamclass"]], "Evd.ThrottledOutputStream": [[59, "evd-throttledoutputstream"]], "Evd.ThrottledOutputStreamClass": [[60, "evd-throttledoutputstreamclass"]], "Evd.TlsCertificate": [[61, "evd-tlscertificate"]], "Evd.TlsCertificateClass": [[62, "evd-tlscertificateclass"]], "Evd.TlsCredentials": [[63, "evd-tlscredentials"]], "Evd.TlsCredentialsClass": [[64, "evd-tlscredentialsclass"]], "Evd.TlsPrivkey": [[65, "evd-tlsprivkey"]], "Evd.TlsPrivkeyClass": [[66, "evd-tlsprivkeyclass"]], "Evd.TlsSession": [[67, "evd-tlssession"]], "Evd.TlsSessionClass": [[68, "evd-tlssessionclass"]], "Evd.Transport": [[69, "evd-transport"]], "Evd.TransportInterface": [[70, "evd-transportinterface"]], "Evd.WebDir": [[71, "evd-webdir"]], "Evd.WebDirClass": [[72, "evd-webdirclass"]], "Evd.WebSelector": [[73, "evd-webselector"]], "Evd.WebSelectorClass": [[74, "evd-webselectorclass"]], "Evd.WebService": [[75, "evd-webservice"]], "Evd.WebServiceClass": [[76, "evd-webserviceclass"]], "Evd.WebTransportServer": [[77, "evd-webtransportserver"]], "Evd.WebTransportServerClass": [[78, "evd-webtransportserverclass"]], "Evd.WebsocketClient": [[79, "evd-websocketclient"]], "Evd.WebsocketClientClass": [[80, "evd-websocketclientclass"]], "Evd.WebsocketServer": [[81, "evd-websocketserver"]], "Evd.WebsocketServerClass": [[82, "evd-websocketserverclass"]], "Enums": [[83, "enums"]], "Flags": [[84, "flags"]], "Functions": [[85, "functions"]], "Hierarchy": [[86, "hierarchy"]], "Interface Structures": [[87, "interface-structures"]], "Evd 0.2 (0.2.0)": [[88, "evd-0-2-0-2-0"]], "API": [[88, "api"]], "Interfaces": [[89, "interfaces"]], "Symbol Mapping": [[90, "symbol-mapping"]], "Structures": [[91, "structures"]]}, "indexentries": {"evd.jsonrpchttpservermethodcallcb()": [[0, "Evd.JsonrpcHttpServerMethodCallCb"]], "evd.jsonrpcmethodcallcb()": [[0, "Evd.JsonrpcMethodCallCb"]], "evd.jsonrpcnotificationcb()": [[0, "Evd.JsonrpcNotificationCb"]], "evd.jsonrpctransportsendcb()": [[0, "Evd.JsonrpcTransportSendCb"]], "evd.jsonrpctransportwritecb()": [[0, "Evd.JsonrpcTransportWriteCb"]], "evd.socketnotifyconditioncallback()": [[0, "Evd.SocketNotifyConditionCallback"]], "evd.tlssessionpullfunc()": [[0, "Evd.TlsSessionPullFunc"]], "evd.tlssessionpushfunc()": [[0, "Evd.TlsSessionPushFunc"]], "built-in function": [[0, "Evd.JsonrpcHttpServerMethodCallCb"], [0, "Evd.JsonrpcMethodCallCb"], [0, "Evd.JsonrpcNotificationCb"], [0, "Evd.JsonrpcTransportSendCb"], [0, "Evd.JsonrpcTransportWriteCb"], [0, "Evd.SocketNotifyConditionCallback"], [0, "Evd.TlsSessionPullFunc"], [0, "Evd.TlsSessionPushFunc"], [7, "Evd.Connection.signals.write"], [24, "Evd.IoStream.signals.close"], [24, "Evd.IoStream.signals.group_changed"], [40, "Evd.PeerManager.signals.new_peer"], [40, "Evd.PeerManager.signals.peer_closed"], [50, "Evd.Service.signals.validate_connection"], [50, "Evd.Service.signals.validate_tls_connection"], [52, "Evd.Socket.signals.close"], [52, "Evd.Socket.signals.error"], [52, "Evd.Socket.signals.new_connection"], [52, "Evd.Socket.signals.state_changed"], [57, "Evd.ThrottledInputStream.signals.delay_read"], [59, "Evd.ThrottledOutputStream.signals.delay_write"], [63, "Evd.TlsCredentials.signals.ready"], [69, "Evd.Transport.signals.new_peer"], [69, "Evd.Transport.signals.peer_closed"], [69, "Evd.Transport.signals.receive"], [69, "Evd.Transport.signals.validate_peer"], [75, "Evd.WebService.signals.log_entry"], [75, "Evd.WebService.signals.request_headers"], [85, "Evd.nanosleep"], [85, "Evd.timeout_add"], [85, "Evd.tls_deinit"], [85, "Evd.tls_free_certificates"], [85, "Evd.tls_generate_dh_params"], [85, "Evd.tls_generate_dh_params_finish"], [85, "Evd.tls_init"], [85, "Evd.uuid_new"]], "evd.bufferedinputstream (built-in class)": [[3, "Evd.BufferedInputStream"]], "freeze() (evd.bufferedinputstream method)": [[3, "Evd.BufferedInputStream.freeze"]], "new() (evd.bufferedinputstream class method)": [[3, "Evd.BufferedInputStream.new"]], "read_str() (evd.bufferedinputstream method)": [[3, "Evd.BufferedInputStream.read_str"]], "read_str_finish() (evd.bufferedinputstream method)": [[3, "Evd.BufferedInputStream.read_str_finish"]], "read_str_sync() (evd.bufferedinputstream method)": [[3, "Evd.BufferedInputStream.read_str_sync"]], "thaw() (evd.bufferedinputstream method)": [[3, "Evd.BufferedInputStream.thaw"]], "unread() (evd.bufferedinputstream method)": [[3, "Evd.BufferedInputStream.unread"]], "evd.bufferedinputstreamclass (built-in class)": [[4, "Evd.BufferedInputStreamClass"]], "evd.bufferedoutputstream (built-in class)": [[5, "Evd.BufferedOutputStream"]], "evd.bufferedoutputstream.props.auto_flush (built-in variable)": [[5, "Evd.BufferedOutputStream.props.auto_flush"]], "get_auto_flush() (evd.bufferedoutputstream method)": [[5, "Evd.BufferedOutputStream.get_auto_flush"]], "new() (evd.bufferedoutputstream class method)": [[5, "Evd.BufferedOutputStream.new"]], "notify_write() (evd.bufferedoutputstream method)": [[5, "Evd.BufferedOutputStream.notify_write"]], "set_auto_flush() (evd.bufferedoutputstream method)": [[5, "Evd.BufferedOutputStream.set_auto_flush"]], "write_str() (evd.bufferedoutputstream method)": [[5, "Evd.BufferedOutputStream.write_str"]], "write_str_finish() (evd.bufferedoutputstream method)": [[5, "Evd.BufferedOutputStream.write_str_finish"]], "write_str_sync() (evd.bufferedoutputstream method)": [[5, "Evd.BufferedOutputStream.write_str_sync"]], "evd.bufferedoutputstreamclass (built-in class)": [[6, "Evd.BufferedOutputStreamClass"]], "evd.connection (built-in class)": [[7, "Evd.Connection"]], "evd.connection.props.socket (built-in variable)": [[7, "Evd.Connection.props.socket"]], "evd.connection.props.tls (built-in variable)": [[7, "Evd.Connection.props.tls"]], "evd.connection.props.tls_active (built-in variable)": [[7, "Evd.Connection.props.tls_active"]], "evd.connection.signals.write()": [[7, "Evd.Connection.signals.write"]], "do_close() (evd.connection method)": [[7, "Evd.Connection.do_close"]], "do_write() (evd.connection method)": [[7, "Evd.Connection.do_write"]], "flush_and_shutdown() (evd.connection method)": [[7, "Evd.Connection.flush_and_shutdown"]], "get_max_readable() (evd.connection method)": [[7, "Evd.Connection.get_max_readable"]], "get_max_writable() (evd.connection method)": [[7, "Evd.Connection.get_max_writable"]], "get_priority() (evd.connection method)": [[7, "Evd.Connection.get_priority"]], "get_remote_address_as_string() (evd.connection method)": [[7, "Evd.Connection.get_remote_address_as_string"]], "get_socket() (evd.connection method)": [[7, "Evd.Connection.get_socket"]], "get_tls_active() (evd.connection method)": [[7, "Evd.Connection.get_tls_active"]], "get_tls_session() (evd.connection method)": [[7, "Evd.Connection.get_tls_session"]], "is_connected() (evd.connection method)": [[7, "Evd.Connection.is_connected"]], "lock_close() (evd.connection method)": [[7, "Evd.Connection.lock_close"]], "new() (evd.connection class method)": [[7, "Evd.Connection.new"]], "set_socket() (evd.connection method)": [[7, "Evd.Connection.set_socket"]], "starttls() (evd.connection method)": [[7, "Evd.Connection.starttls"]], "starttls_finish() (evd.connection method)": [[7, "Evd.Connection.starttls_finish"]], "unlock_close() (evd.connection method)": [[7, "Evd.Connection.unlock_close"]], "evd.connectionclass (built-in class)": [[8, "Evd.ConnectionClass"]], "evd.connectionpool (built-in class)": [[9, "Evd.ConnectionPool"]], "evd.connectionpool.props.address (built-in variable)": [[9, "Evd.ConnectionPool.props.address"]], "evd.connectionpool.props.connection_type (built-in variable)": [[9, "Evd.ConnectionPool.props.connection_type"]], "do_get_connection_type() (evd.connectionpool method)": [[9, "Evd.ConnectionPool.do_get_connection_type"]], "get_connection() (evd.connectionpool method)": [[9, "Evd.ConnectionPool.get_connection"]], "get_connection_finish() (evd.connectionpool method)": [[9, "Evd.ConnectionPool.get_connection_finish"]], "get_tls_autostart() (evd.connectionpool method)": [[9, "Evd.ConnectionPool.get_tls_autostart"]], "get_tls_credentials() (evd.connectionpool method)": [[9, "Evd.ConnectionPool.get_tls_credentials"]], "has_free_connections() (evd.connectionpool method)": [[9, "Evd.ConnectionPool.has_free_connections"]], "new() (evd.connectionpool class method)": [[9, "Evd.ConnectionPool.new"]], "recycle() (evd.connectionpool method)": [[9, "Evd.ConnectionPool.recycle"]], "set_tls_autostart() (evd.connectionpool method)": [[9, "Evd.ConnectionPool.set_tls_autostart"]], "set_tls_credentials() (evd.connectionpool method)": [[9, "Evd.ConnectionPool.set_tls_credentials"]], "evd.connectionpoolclass (built-in class)": [[10, "Evd.ConnectionPoolClass"]], "evd.dbusbridge (built-in class)": [[11, "Evd.DBusBridge"]], "new() (evd.dbusbridge class method)": [[11, "Evd.DBusBridge.new"]], "evd.dbusbridgeclass (built-in class)": [[12, "Evd.DBusBridgeClass"]], "evd.dbusdaemon (built-in class)": [[13, "Evd.DBusDaemon"]], "evd.dbusdaemon.props.address (built-in variable)": [[13, "Evd.DBusDaemon.props.address"]], "evd.dbusdaemon.props.config_file (built-in variable)": [[13, "Evd.DBusDaemon.props.config_file"]], "new() (evd.dbusdaemon class method)": [[13, "Evd.DBusDaemon.new"]], "evd.dbusdaemonclass (built-in class)": [[14, "Evd.DBusDaemonClass"]], "evd.daemon (built-in class)": [[15, "Evd.Daemon"]], "daemonize() (evd.daemon method)": [[15, "Evd.Daemon.daemonize"]], "get_default() (evd.daemon class method)": [[15, "Evd.Daemon.get_default"]], "get_pid_file() (evd.daemon method)": [[15, "Evd.Daemon.get_pid_file"]], "new() (evd.daemon class method)": [[15, "Evd.Daemon.new"]], "quit() (evd.daemon method)": [[15, "Evd.Daemon.quit"]], "run() (evd.daemon method)": [[15, "Evd.Daemon.run"]], "set_pid_file() (evd.daemon method)": [[15, "Evd.Daemon.set_pid_file"]], "set_timeout() (evd.daemon method)": [[15, "Evd.Daemon.set_timeout"]], "set_user() (evd.daemon method)": [[15, "Evd.Daemon.set_user"]], "set_user_id() (evd.daemon method)": [[15, "Evd.Daemon.set_user_id"]], "evd.daemonclass (built-in class)": [[16, "Evd.DaemonClass"]], "evd.deferred (built-in class)": [[17, "Evd.Deferred"]], "complete() (evd.deferred method)": [[17, "Evd.Deferred.complete"]], "complete_in_idle() (evd.deferred method)": [[17, "Evd.Deferred.complete_in_idle"]], "get_promise() (evd.deferred method)": [[17, "Evd.Deferred.get_promise"]], "new() (evd.deferred class method)": [[17, "Evd.Deferred.new"]], "ref() (evd.deferred method)": [[17, "Evd.Deferred.ref"]], "set_result_boolean() (evd.deferred method)": [[17, "Evd.Deferred.set_result_boolean"]], "set_result_pointer() (evd.deferred method)": [[17, "Evd.Deferred.set_result_pointer"]], "set_result_size() (evd.deferred method)": [[17, "Evd.Deferred.set_result_size"]], "take_result_error() (evd.deferred method)": [[17, "Evd.Deferred.take_result_error"]], "unref() (evd.deferred method)": [[17, "Evd.Deferred.unref"]], "evd.httpconnection (built-in class)": [[18, "Evd.HttpConnection"]], "get_current_request() (evd.httpconnection method)": [[18, "Evd.HttpConnection.get_current_request"]], "get_keepalive() (evd.httpconnection method)": [[18, "Evd.HttpConnection.get_keepalive"]], "new() (evd.httpconnection class method)": [[18, "Evd.HttpConnection.new"]], "read_all_content() (evd.httpconnection method)": [[18, "Evd.HttpConnection.read_all_content"]], "read_all_content_finish() (evd.httpconnection method)": [[18, "Evd.HttpConnection.read_all_content_finish"]], "read_content() (evd.httpconnection method)": [[18, "Evd.HttpConnection.read_content"]], "read_content_finish() (evd.httpconnection method)": [[18, "Evd.HttpConnection.read_content_finish"]], "read_request_headers() (evd.httpconnection method)": [[18, "Evd.HttpConnection.read_request_headers"]], "read_request_headers_finish() (evd.httpconnection method)": [[18, "Evd.HttpConnection.read_request_headers_finish"]], "read_response_headers() (evd.httpconnection method)": [[18, "Evd.HttpConnection.read_response_headers"]], "read_response_headers_finish() (evd.httpconnection method)": [[18, "Evd.HttpConnection.read_response_headers_finish"]], "redirect() (evd.httpconnection method)": [[18, "Evd.HttpConnection.redirect"]], "respond() (evd.httpconnection method)": [[18, "Evd.HttpConnection.respond"]], "respond_simple() (evd.httpconnection method)": [[18, "Evd.HttpConnection.respond_simple"]], "set_current_request() (evd.httpconnection method)": [[18, "Evd.HttpConnection.set_current_request"]], "set_keepalive() (evd.httpconnection method)": [[18, "Evd.HttpConnection.set_keepalive"]], "unread_request_headers() (evd.httpconnection method)": [[18, "Evd.HttpConnection.unread_request_headers"]], "write_content() (evd.httpconnection method)": [[18, "Evd.HttpConnection.write_content"]], "write_request_headers() (evd.httpconnection method)": [[18, "Evd.HttpConnection.write_request_headers"]], "write_request_headers_finish() (evd.httpconnection method)": [[18, "Evd.HttpConnection.write_request_headers_finish"]], "write_response_headers() (evd.httpconnection method)": [[18, "Evd.HttpConnection.write_response_headers"]], "evd.httpconnectionclass (built-in class)": [[19, "Evd.HttpConnectionClass"]], "evd.httpmessage (built-in class)": [[20, "Evd.HttpMessage"]], "evd.httpmessage.props.headers (built-in variable)": [[20, "Evd.HttpMessage.props.headers"]], "evd.httpmessage.props.version (built-in variable)": [[20, "Evd.HttpMessage.props.version"]], "get_headers() (evd.httpmessage method)": [[20, "Evd.HttpMessage.get_headers"]], "get_version() (evd.httpmessage method)": [[20, "Evd.HttpMessage.get_version"]], "headers_to_string() (evd.httpmessage method)": [[20, "Evd.HttpMessage.headers_to_string"]], "new() (evd.httpmessage class method)": [[20, "Evd.HttpMessage.new"]], "evd.httpmessageclass (built-in class)": [[21, "Evd.HttpMessageClass"]], "evd.httprequest (built-in class)": [[22, "Evd.HttpRequest"]], "evd.httprequest.props.method (built-in variable)": [[22, "Evd.HttpRequest.props.method"]], "evd.httprequest.props.path (built-in variable)": [[22, "Evd.HttpRequest.props.path"]], "evd.httprequest.props.uri (built-in variable)": [[22, "Evd.HttpRequest.props.uri"]], "get_basic_auth_credentials() (evd.httprequest method)": [[22, "Evd.HttpRequest.get_basic_auth_credentials"]], "get_cookie_value() (evd.httprequest method)": [[22, "Evd.HttpRequest.get_cookie_value"]], "get_method() (evd.httprequest method)": [[22, "Evd.HttpRequest.get_method"]], "get_origin() (evd.httprequest method)": [[22, "Evd.HttpRequest.get_origin"]], "get_path() (evd.httprequest method)": [[22, "Evd.HttpRequest.get_path"]], "get_uri() (evd.httprequest method)": [[22, "Evd.HttpRequest.get_uri"]], "is_cors_preflight() (evd.httprequest method)": [[22, "Evd.HttpRequest.is_cors_preflight"]], "is_cross_origin() (evd.httprequest method)": [[22, "Evd.HttpRequest.is_cross_origin"]], "new() (evd.httprequest class method)": [[22, "Evd.HttpRequest.new"]], "set_basic_auth_credentials() (evd.httprequest method)": [[22, "Evd.HttpRequest.set_basic_auth_credentials"]], "to_string() (evd.httprequest method)": [[22, "Evd.HttpRequest.to_string"]], "evd.httprequestclass (built-in class)": [[23, "Evd.HttpRequestClass"]], "evd.iostream (built-in class)": [[24, "Evd.IoStream"]], "evd.iostream.props.group (built-in variable)": [[24, "Evd.IoStream.props.group"]], "evd.iostream.props.input_throttle (built-in variable)": [[24, "Evd.IoStream.props.input_throttle"]], "evd.iostream.props.output_throttle (built-in variable)": [[24, "Evd.IoStream.props.output_throttle"]], "evd.iostream.signals.close()": [[24, "Evd.IoStream.signals.close"]], "evd.iostream.signals.group_changed()": [[24, "Evd.IoStream.signals.group_changed"]], "do_group_changed() (evd.iostream method)": [[24, "Evd.IoStream.do_group_changed"]], "do_signal_close() (evd.iostream method)": [[24, "Evd.IoStream.do_signal_close"]], "do_signal_group_changed() (evd.iostream method)": [[24, "Evd.IoStream.do_signal_group_changed"]], "get_group() (evd.iostream method)": [[24, "Evd.IoStream.get_group"]], "get_input_throttle() (evd.iostream method)": [[24, "Evd.IoStream.get_input_throttle"]], "get_output_throttle() (evd.iostream method)": [[24, "Evd.IoStream.get_output_throttle"]], "set_group() (evd.iostream method)": [[24, "Evd.IoStream.set_group"]], "evd.iostreamclass (built-in class)": [[25, "Evd.IoStreamClass"]], "evd.iostreamgroup (built-in class)": [[26, "Evd.IoStreamGroup"]], "evd.iostreamgroup.props.input_throttle (built-in variable)": [[26, "Evd.IoStreamGroup.props.input_throttle"]], "evd.iostreamgroup.props.output_throttle (built-in variable)": [[26, "Evd.IoStreamGroup.props.output_throttle"]], "add() (evd.iostreamgroup method)": [[26, "Evd.IoStreamGroup.add"]], "do_add() (evd.iostreamgroup method)": [[26, "Evd.IoStreamGroup.do_add"]], "do_remove() (evd.iostreamgroup method)": [[26, "Evd.IoStreamGroup.do_remove"]], "new() (evd.iostreamgroup class method)": [[26, "Evd.IoStreamGroup.new"]], "remove() (evd.iostreamgroup method)": [[26, "Evd.IoStreamGroup.remove"]], "evd.iostreamgroupclass (built-in class)": [[27, "Evd.IoStreamGroupClass"]], "evd.ipcmechanism (built-in class)": [[28, "Evd.IpcMechanism"]], "do_transport_new_peer() (evd.ipcmechanism method)": [[28, "Evd.IpcMechanism.do_transport_new_peer"]], "do_transport_receive() (evd.ipcmechanism method)": [[28, "Evd.IpcMechanism.do_transport_receive"]], "unuse_transport() (evd.ipcmechanism method)": [[28, "Evd.IpcMechanism.unuse_transport"]], "use_transport() (evd.ipcmechanism method)": [[28, "Evd.IpcMechanism.use_transport"]], "evd.ipcmechanismclass (built-in class)": [[29, "Evd.IpcMechanismClass"]], "evd.jsonrpc (built-in class)": [[30, "Evd.Jsonrpc"]], "call_method() (evd.jsonrpc method)": [[30, "Evd.Jsonrpc.call_method"]], "call_method_finish() (evd.jsonrpc method)": [[30, "Evd.Jsonrpc.call_method_finish"]], "new() (evd.jsonrpc class method)": [[30, "Evd.Jsonrpc.new"]], "respond() (evd.jsonrpc method)": [[30, "Evd.Jsonrpc.respond"]], "respond_error() (evd.jsonrpc method)": [[30, "Evd.Jsonrpc.respond_error"]], "respond_from_error() (evd.jsonrpc method)": [[30, "Evd.Jsonrpc.respond_from_error"]], "send_notification() (evd.jsonrpc method)": [[30, "Evd.Jsonrpc.send_notification"]], "set_callbacks() (evd.jsonrpc method)": [[30, "Evd.Jsonrpc.set_callbacks"]], "transport_error() (evd.jsonrpc method)": [[30, "Evd.Jsonrpc.transport_error"]], "transport_receive() (evd.jsonrpc method)": [[30, "Evd.Jsonrpc.transport_receive"]], "transport_set_send_callback() (evd.jsonrpc method)": [[30, "Evd.Jsonrpc.transport_set_send_callback"]], "evd.jsonrpcclass (built-in class)": [[31, "Evd.JsonrpcClass"]], "evd.jsonrpchttpclient (built-in class)": [[32, "Evd.JsonrpcHttpClient"]], "evd.jsonrpchttpclient.props.http_request (built-in variable)": [[32, "Evd.JsonrpcHttpClient.props.http_request"]], "evd.jsonrpchttpclient.props.url (built-in variable)": [[32, "Evd.JsonrpcHttpClient.props.url"]], "call_method() (evd.jsonrpchttpclient method)": [[32, "Evd.JsonrpcHttpClient.call_method"]], "call_method_finish() (evd.jsonrpchttpclient method)": [[32, "Evd.JsonrpcHttpClient.call_method_finish"]], "get_http_request() (evd.jsonrpchttpclient method)": [[32, "Evd.JsonrpcHttpClient.get_http_request"]], "new() (evd.jsonrpchttpclient class method)": [[32, "Evd.JsonrpcHttpClient.new"]], "evd.jsonrpchttpclientclass (built-in class)": [[33, "Evd.JsonrpcHttpClientClass"]], "evd.jsonrpchttpserver (built-in class)": [[34, "Evd.JsonrpcHttpServer"]], "evd.jsonrpchttpserver.props.response_headers (built-in variable)": [[34, "Evd.JsonrpcHttpServer.props.response_headers"]], "get_response_headers() (evd.jsonrpchttpserver method)": [[34, "Evd.JsonrpcHttpServer.get_response_headers"]], "new() (evd.jsonrpchttpserver class method)": [[34, "Evd.JsonrpcHttpServer.new"]], "respond() (evd.jsonrpchttpserver method)": [[34, "Evd.JsonrpcHttpServer.respond"]], "respond_error() (evd.jsonrpchttpserver method)": [[34, "Evd.JsonrpcHttpServer.respond_error"]], "set_method_call_callback() (evd.jsonrpchttpserver method)": [[34, "Evd.JsonrpcHttpServer.set_method_call_callback"]], "evd.jsonrpchttpserverclass (built-in class)": [[35, "Evd.JsonrpcHttpServerClass"]], "evd.longpollingserver (built-in class)": [[36, "Evd.LongpollingServer"]], "new() (evd.longpollingserver class method)": [[36, "Evd.LongpollingServer.new"]], "evd.longpollingserverclass (built-in class)": [[37, "Evd.LongpollingServerClass"]], "evd.peer (built-in class)": [[38, "Evd.Peer"]], "evd.peer.props.id (built-in variable)": [[38, "Evd.Peer.props.id"]], "evd.peer.props.transport (built-in variable)": [[38, "Evd.Peer.props.transport"]], "backlog_get_length() (evd.peer method)": [[38, "Evd.Peer.backlog_get_length"]], "backlog_pop_frame() (evd.peer method)": [[38, "Evd.Peer.backlog_pop_frame"]], "backlog_push_frame() (evd.peer method)": [[38, "Evd.Peer.backlog_push_frame"]], "backlog_unshift_frame() (evd.peer method)": [[38, "Evd.Peer.backlog_unshift_frame"]], "close() (evd.peer method)": [[38, "Evd.Peer.close"]], "get_id() (evd.peer method)": [[38, "Evd.Peer.get_id"]], "get_transport() (evd.peer method)": [[38, "Evd.Peer.get_transport"]], "is_alive() (evd.peer method)": [[38, "Evd.Peer.is_alive"]], "is_closed() (evd.peer method)": [[38, "Evd.Peer.is_closed"]], "pop_message() (evd.peer method)": [[38, "Evd.Peer.pop_message"]], "push_message() (evd.peer method)": [[38, "Evd.Peer.push_message"]], "send() (evd.peer method)": [[38, "Evd.Peer.send"]], "send_text() (evd.peer method)": [[38, "Evd.Peer.send_text"]], "touch() (evd.peer method)": [[38, "Evd.Peer.touch"]], "unshift_message() (evd.peer method)": [[38, "Evd.Peer.unshift_message"]], "evd.peerclass (built-in class)": [[39, "Evd.PeerClass"]], "evd.peermanager (built-in class)": [[40, "Evd.PeerManager"]], "evd.peermanager.signals.new_peer()": [[40, "Evd.PeerManager.signals.new_peer"]], "evd.peermanager.signals.peer_closed()": [[40, "Evd.PeerManager.signals.peer_closed"]], "add_peer() (evd.peermanager method)": [[40, "Evd.PeerManager.add_peer"]], "close_peer() (evd.peermanager method)": [[40, "Evd.PeerManager.close_peer"]], "do_new_peer() (evd.peermanager method)": [[40, "Evd.PeerManager.do_new_peer"]], "do_peer_closed() (evd.peermanager method)": [[40, "Evd.PeerManager.do_peer_closed"]], "get_all_peers() (evd.peermanager method)": [[40, "Evd.PeerManager.get_all_peers"]], "get_default() (evd.peermanager class method)": [[40, "Evd.PeerManager.get_default"]], "lookup_peer() (evd.peermanager method)": [[40, "Evd.PeerManager.lookup_peer"]], "new() (evd.peermanager class method)": [[40, "Evd.PeerManager.new"]], "evd.peermanagerclass (built-in class)": [[41, "Evd.PeerManagerClass"]], "evd.pkiprivkey (built-in class)": [[42, "Evd.PkiPrivkey"]], "evd.pkiprivkey.props.type (built-in variable)": [[42, "Evd.PkiPrivkey.props.type"]], "decrypt() (evd.pkiprivkey method)": [[42, "Evd.PkiPrivkey.decrypt"]], "decrypt_finish() (evd.pkiprivkey method)": [[42, "Evd.PkiPrivkey.decrypt_finish"]], "generate() (evd.pkiprivkey method)": [[42, "Evd.PkiPrivkey.generate"]], "generate_finish() (evd.pkiprivkey method)": [[42, "Evd.PkiPrivkey.generate_finish"]], "get_key_type() (evd.pkiprivkey method)": [[42, "Evd.PkiPrivkey.get_key_type"]], "get_public_key() (evd.pkiprivkey method)": [[42, "Evd.PkiPrivkey.get_public_key"]], "import_native() (evd.pkiprivkey method)": [[42, "Evd.PkiPrivkey.import_native"]], "new() (evd.pkiprivkey class method)": [[42, "Evd.PkiPrivkey.new"]], "sign_data() (evd.pkiprivkey method)": [[42, "Evd.PkiPrivkey.sign_data"]], "sign_data_finish() (evd.pkiprivkey method)": [[42, "Evd.PkiPrivkey.sign_data_finish"]], "evd.pkiprivkeyclass (built-in class)": [[43, "Evd.PkiPrivkeyClass"]], "evd.pkipubkey (built-in class)": [[44, "Evd.PkiPubkey"]], "evd.pkipubkey.props.type (built-in variable)": [[44, "Evd.PkiPubkey.props.type"]], "encrypt() (evd.pkipubkey method)": [[44, "Evd.PkiPubkey.encrypt"]], "encrypt_finish() (evd.pkipubkey method)": [[44, "Evd.PkiPubkey.encrypt_finish"]], "get_key_type() (evd.pkipubkey method)": [[44, "Evd.PkiPubkey.get_key_type"]], "import_native() (evd.pkipubkey method)": [[44, "Evd.PkiPubkey.import_native"]], "new() (evd.pkipubkey class method)": [[44, "Evd.PkiPubkey.new"]], "verify_data() (evd.pkipubkey method)": [[44, "Evd.PkiPubkey.verify_data"]], "verify_data_finish() (evd.pkipubkey method)": [[44, "Evd.PkiPubkey.verify_data_finish"]], "evd.pkipubkeyclass (built-in class)": [[45, "Evd.PkiPubkeyClass"]], "evd.promise (built-in class)": [[46, "Evd.Promise"]], "cancel() (evd.promise method)": [[46, "Evd.Promise.cancel"]], "get_cancellable() (evd.promise method)": [[46, "Evd.Promise.get_cancellable"]], "get_result_boolean() (evd.promise method)": [[46, "Evd.Promise.get_result_boolean"]], "get_result_pointer() (evd.promise method)": [[46, "Evd.Promise.get_result_pointer"]], "get_result_size() (evd.promise method)": [[46, "Evd.Promise.get_result_size"]], "propagate_error() (evd.promise method)": [[46, "Evd.Promise.propagate_error"]], "then() (evd.promise method)": [[46, "Evd.Promise.then"]], "evd.promiseclass (built-in class)": [[47, "Evd.PromiseClass"]], "evd.reproxy (built-in class)": [[48, "Evd.Reproxy"]], "add_backend() (evd.reproxy method)": [[48, "Evd.Reproxy.add_backend"]], "new() (evd.reproxy class method)": [[48, "Evd.Reproxy.new"]], "remove_backend() (evd.reproxy method)": [[48, "Evd.Reproxy.remove_backend"]], "evd.reproxyclass (built-in class)": [[49, "Evd.ReproxyClass"]], "evd.service (built-in class)": [[50, "Evd.Service"]], "evd.service.props.tls_autostart (built-in variable)": [[50, "Evd.Service.props.tls_autostart"]], "evd.service.props.tls_credentials (built-in variable)": [[50, "Evd.Service.props.tls_credentials"]], "evd.service.signals.validate_connection()": [[50, "Evd.Service.signals.validate_connection"]], "evd.service.signals.validate_tls_connection()": [[50, "Evd.Service.signals.validate_tls_connection"]], "accept_connection() (evd.service method)": [[50, "Evd.Service.accept_connection"]], "add_listener() (evd.service method)": [[50, "Evd.Service.add_listener"]], "do_connection_accepted() (evd.service method)": [[50, "Evd.Service.do_connection_accepted"]], "do_connection_rejected() (evd.service method)": [[50, "Evd.Service.do_connection_rejected"]], "do_signal_validate_connection() (evd.service method)": [[50, "Evd.Service.do_signal_validate_connection"]], "do_signal_validate_tls_connection() (evd.service method)": [[50, "Evd.Service.do_signal_validate_tls_connection"]], "get_io_stream_type() (evd.service method)": [[50, "Evd.Service.get_io_stream_type"]], "get_tls_autostart() (evd.service method)": [[50, "Evd.Service.get_tls_autostart"]], "get_tls_credentials() (evd.service method)": [[50, "Evd.Service.get_tls_credentials"]], "listen() (evd.service method)": [[50, "Evd.Service.listen"]], "listen_finish() (evd.service method)": [[50, "Evd.Service.listen_finish"]], "new() (evd.service class method)": [[50, "Evd.Service.new"]], "reject_connection() (evd.service method)": [[50, "Evd.Service.reject_connection"]], "remove_listener() (evd.service method)": [[50, "Evd.Service.remove_listener"]], "set_io_stream_type() (evd.service method)": [[50, "Evd.Service.set_io_stream_type"]], "set_tls_autostart() (evd.service method)": [[50, "Evd.Service.set_tls_autostart"]], "set_tls_credentials() (evd.service method)": [[50, "Evd.Service.set_tls_credentials"]], "evd.serviceclass (built-in class)": [[51, "Evd.ServiceClass"]], "evd.socket (built-in class)": [[52, "Evd.Socket"]], "evd.socket.props.family (built-in variable)": [[52, "Evd.Socket.props.family"]], "evd.socket.props.io_stream_type (built-in variable)": [[52, "Evd.Socket.props.io_stream_type"]], "evd.socket.props.priority (built-in variable)": [[52, "Evd.Socket.props.priority"]], "evd.socket.props.protocol (built-in variable)": [[52, "Evd.Socket.props.protocol"]], "evd.socket.props.socket (built-in variable)": [[52, "Evd.Socket.props.socket"]], "evd.socket.props.status (built-in variable)": [[52, "Evd.Socket.props.status"]], "evd.socket.props.type (built-in variable)": [[52, "Evd.Socket.props.type"]], "evd.socket.signals.close()": [[52, "Evd.Socket.signals.close"]], "evd.socket.signals.error()": [[52, "Evd.Socket.signals.error"]], "evd.socket.signals.new_connection()": [[52, "Evd.Socket.signals.new_connection"]], "evd.socket.signals.state_changed()": [[52, "Evd.Socket.signals.state_changed"]], "bind() (evd.socket method)": [[52, "Evd.Socket.bind"]], "bind_addr() (evd.socket method)": [[52, "Evd.Socket.bind_addr"]], "bind_finish() (evd.socket method)": [[52, "Evd.Socket.bind_finish"]], "close() (evd.socket method)": [[52, "Evd.Socket.close"]], "connect_addr() (evd.socket method)": [[52, "Evd.Socket.connect_addr"]], "connect_finish() (evd.socket method)": [[52, "Evd.Socket.connect_finish"]], "connect_to() (evd.socket method)": [[52, "Evd.Socket.connect_to"]], "do_cleanup() (evd.socket method)": [[52, "Evd.Socket.do_cleanup"]], "do_close() (evd.socket method)": [[52, "Evd.Socket.do_close"]], "do_error() (evd.socket method)": [[52, "Evd.Socket.do_error"]], "do_handle_condition() (evd.socket method)": [[52, "Evd.Socket.do_handle_condition"]], "do_new_connection() (evd.socket method)": [[52, "Evd.Socket.do_new_connection"]], "do_state_changed() (evd.socket method)": [[52, "Evd.Socket.do_state_changed"]], "get_condition() (evd.socket method)": [[52, "Evd.Socket.get_condition"]], "get_family() (evd.socket method)": [[52, "Evd.Socket.get_family"]], "get_local_address() (evd.socket method)": [[52, "Evd.Socket.get_local_address"]], "get_priority() (evd.socket method)": [[52, "Evd.Socket.get_priority"]], "get_remote_address() (evd.socket method)": [[52, "Evd.Socket.get_remote_address"]], "get_remote_address_str() (evd.socket method)": [[52, "Evd.Socket.get_remote_address_str"]], "get_socket() (evd.socket method)": [[52, "Evd.Socket.get_socket"]], "get_status() (evd.socket method)": [[52, "Evd.Socket.get_status"]], "listen() (evd.socket method)": [[52, "Evd.Socket.listen"]], "listen_addr() (evd.socket method)": [[52, "Evd.Socket.listen_addr"]], "listen_finish() (evd.socket method)": [[52, "Evd.Socket.listen_finish"]], "new() (evd.socket class method)": [[52, "Evd.Socket.new"]], "set_notify_condition_callback() (evd.socket method)": [[52, "Evd.Socket.set_notify_condition_callback"]], "set_priority() (evd.socket method)": [[52, "Evd.Socket.set_priority"]], "shutdown() (evd.socket method)": [[52, "Evd.Socket.shutdown"]], "watch_condition() (evd.socket method)": [[52, "Evd.Socket.watch_condition"]], "evd.socketclass (built-in class)": [[53, "Evd.SocketClass"]], "evd.socketevent (built-in class)": [[54, "Evd.SocketEvent"]], "evd.streamthrottle (built-in class)": [[55, "Evd.StreamThrottle"]], "evd.streamthrottle.props.bandwidth (built-in variable)": [[55, "Evd.StreamThrottle.props.bandwidth"]], "evd.streamthrottle.props.latency (built-in variable)": [[55, "Evd.StreamThrottle.props.latency"]], "evd.streamthrottle.props.total (built-in variable)": [[55, "Evd.StreamThrottle.props.total"]], "get_actual_bandwidth() (evd.streamthrottle method)": [[55, "Evd.StreamThrottle.get_actual_bandwidth"]], "get_total() (evd.streamthrottle method)": [[55, "Evd.StreamThrottle.get_total"]], "new() (evd.streamthrottle class method)": [[55, "Evd.StreamThrottle.new"]], "report() (evd.streamthrottle method)": [[55, "Evd.StreamThrottle.report"]], "request() (evd.streamthrottle method)": [[55, "Evd.StreamThrottle.request"]], "evd.streamthrottleclass (built-in class)": [[56, "Evd.StreamThrottleClass"]], "evd.throttledinputstream (built-in class)": [[57, "Evd.ThrottledInputStream"]], "evd.throttledinputstream.signals.delay_read()": [[57, "Evd.ThrottledInputStream.signals.delay_read"]], "add_throttle() (evd.throttledinputstream method)": [[57, "Evd.ThrottledInputStream.add_throttle"]], "do_delay_read() (evd.throttledinputstream method)": [[57, "Evd.ThrottledInputStream.do_delay_read"]], "get_max_readable() (evd.throttledinputstream method)": [[57, "Evd.ThrottledInputStream.get_max_readable"]], "new() (evd.throttledinputstream class method)": [[57, "Evd.ThrottledInputStream.new"]], "remove_throttle() (evd.throttledinputstream method)": [[57, "Evd.ThrottledInputStream.remove_throttle"]], "evd.throttledinputstreamclass (built-in class)": [[58, "Evd.ThrottledInputStreamClass"]], "evd.throttledoutputstream (built-in class)": [[59, "Evd.ThrottledOutputStream"]], "evd.throttledoutputstream.signals.delay_write()": [[59, "Evd.ThrottledOutputStream.signals.delay_write"]], "add_throttle() (evd.throttledoutputstream method)": [[59, "Evd.ThrottledOutputStream.add_throttle"]], "do_delay_write() (evd.throttledoutputstream method)": [[59, "Evd.ThrottledOutputStream.do_delay_write"]], "get_max_writable() (evd.throttledoutputstream method)": [[59, "Evd.ThrottledOutputStream.get_max_writable"]], "new() (evd.throttledoutputstream class method)": [[59, "Evd.ThrottledOutputStream.new"]], "remove_throttle() (evd.throttledoutputstream method)": [[59, "Evd.ThrottledOutputStream.remove_throttle"]], "evd.throttledoutputstreamclass (built-in class)": [[60, "Evd.ThrottledOutputStreamClass"]], "evd.tlscertificate (built-in class)": [[61, "Evd.TlsCertificate"]], "evd.tlscertificate.props.type (built-in variable)": [[61, "Evd.TlsCertificate.props.type"]], "get_activation_time() (evd.tlscertificate method)": [[61, "Evd.TlsCertificate.get_activation_time"]], "get_dn() (evd.tlscertificate method)": [[61, "Evd.TlsCertificate.get_dn"]], "get_expiration_time() (evd.tlscertificate method)": [[61, "Evd.TlsCertificate.get_expiration_time"]], "get_native() (evd.tlscertificate method)": [[61, "Evd.TlsCertificate.get_native"]], "get_pki_key() (evd.tlscertificate method)": [[61, "Evd.TlsCertificate.get_pki_key"]], "import_() (evd.tlscertificate method)": [[61, "Evd.TlsCertificate.import_"]], "import_from_file() (evd.tlscertificate method)": [[61, "Evd.TlsCertificate.import_from_file"]], "import_from_file_finish() (evd.tlscertificate method)": [[61, "Evd.TlsCertificate.import_from_file_finish"]], "new() (evd.tlscertificate class method)": [[61, "Evd.TlsCertificate.new"]], "steal_native() (evd.tlscertificate method)": [[61, "Evd.TlsCertificate.steal_native"]], "verify_validity() (evd.tlscertificate method)": [[61, "Evd.TlsCertificate.verify_validity"]], "evd.tlscertificateclass (built-in class)": [[62, "Evd.TlsCertificateClass"]], "evd.tlscredentials (built-in class)": [[63, "Evd.TlsCredentials"]], "evd.tlscredentials.props.dh_bits (built-in variable)": [[63, "Evd.TlsCredentials.props.dh_bits"]], "evd.tlscredentials.signals.ready()": [[63, "Evd.TlsCredentials.signals.ready"]], "add_certificate() (evd.tlscredentials method)": [[63, "Evd.TlsCredentials.add_certificate"]], "add_certificate_from_file() (evd.tlscredentials method)": [[63, "Evd.TlsCredentials.add_certificate_from_file"]], "add_certificate_from_file_finish() (evd.tlscredentials method)": [[63, "Evd.TlsCredentials.add_certificate_from_file_finish"]], "do_ready() (evd.tlscredentials method)": [[63, "Evd.TlsCredentials.do_ready"]], "get_credentials() (evd.tlscredentials method)": [[63, "Evd.TlsCredentials.get_credentials"]], "new() (evd.tlscredentials class method)": [[63, "Evd.TlsCredentials.new"]], "prepare() (evd.tlscredentials method)": [[63, "Evd.TlsCredentials.prepare"]], "ready() (evd.tlscredentials method)": [[63, "Evd.TlsCredentials.ready"]], "evd.tlscredentialsclass (built-in class)": [[64, "Evd.TlsCredentialsClass"]], "evd.tlsprivkey (built-in class)": [[65, "Evd.TlsPrivkey"]], "evd.tlsprivkey.props.type (built-in variable)": [[65, "Evd.TlsPrivkey.props.type"]], "get_native() (evd.tlsprivkey method)": [[65, "Evd.TlsPrivkey.get_native"]], "get_pki_key() (evd.tlsprivkey method)": [[65, "Evd.TlsPrivkey.get_pki_key"]], "import_() (evd.tlsprivkey method)": [[65, "Evd.TlsPrivkey.import_"]], "import_from_file() (evd.tlsprivkey method)": [[65, "Evd.TlsPrivkey.import_from_file"]], "import_from_file_finish() (evd.tlsprivkey method)": [[65, "Evd.TlsPrivkey.import_from_file_finish"]], "new() (evd.tlsprivkey class method)": [[65, "Evd.TlsPrivkey.new"]], "steal_native() (evd.tlsprivkey method)": [[65, "Evd.TlsPrivkey.steal_native"]], "evd.tlsprivkeyclass (built-in class)": [[66, "Evd.TlsPrivkeyClass"]], "evd.tlssession (built-in class)": [[67, "Evd.TlsSession"]], "evd.tlssession.props.credentials (built-in variable)": [[67, "Evd.TlsSession.props.credentials"]], "evd.tlssession.props.mode (built-in variable)": [[67, "Evd.TlsSession.props.mode"]], "evd.tlssession.props.priority (built-in variable)": [[67, "Evd.TlsSession.props.priority"]], "evd.tlssession.props.require_peer_cert (built-in variable)": [[67, "Evd.TlsSession.props.require_peer_cert"]], "close() (evd.tlssession method)": [[67, "Evd.TlsSession.close"]], "copy_properties() (evd.tlssession method)": [[67, "Evd.TlsSession.copy_properties"]], "get_credentials() (evd.tlssession method)": [[67, "Evd.TlsSession.get_credentials"]], "get_direction() (evd.tlssession method)": [[67, "Evd.TlsSession.get_direction"]], "get_peer_certificates() (evd.tlssession method)": [[67, "Evd.TlsSession.get_peer_certificates"]], "get_server_name() (evd.tlssession method)": [[67, "Evd.TlsSession.get_server_name"]], "handshake() (evd.tlssession method)": [[67, "Evd.TlsSession.handshake"]], "new() (evd.tlssession class method)": [[67, "Evd.TlsSession.new"]], "read() (evd.tlssession method)": [[67, "Evd.TlsSession.read"]], "reset() (evd.tlssession method)": [[67, "Evd.TlsSession.reset"]], "set_credentials() (evd.tlssession method)": [[67, "Evd.TlsSession.set_credentials"]], "set_server_name() (evd.tlssession method)": [[67, "Evd.TlsSession.set_server_name"]], "set_transport_pull_func() (evd.tlssession method)": [[67, "Evd.TlsSession.set_transport_pull_func"]], "set_transport_push_func() (evd.tlssession method)": [[67, "Evd.TlsSession.set_transport_push_func"]], "shutdown_write() (evd.tlssession method)": [[67, "Evd.TlsSession.shutdown_write"]], "verify_peer() (evd.tlssession method)": [[67, "Evd.TlsSession.verify_peer"]], "write() (evd.tlssession method)": [[67, "Evd.TlsSession.write"]], "evd.tlssessionclass (built-in class)": [[68, "Evd.TlsSessionClass"]], "evd.transport (built-in class)": [[69, "Evd.Transport"]], "evd.transport.signals.new_peer()": [[69, "Evd.Transport.signals.new_peer"]], "evd.transport.signals.peer_closed()": [[69, "Evd.Transport.signals.peer_closed"]], "evd.transport.signals.receive()": [[69, "Evd.Transport.signals.receive"]], "evd.transport.signals.validate_peer()": [[69, "Evd.Transport.signals.validate_peer"]], "accept_peer() (evd.transport method)": [[69, "Evd.Transport.accept_peer"]], "close_peer() (evd.transport method)": [[69, "Evd.Transport.close_peer"]], "create_new_peer() (evd.transport method)": [[69, "Evd.Transport.create_new_peer"]], "do_accept_peer() (evd.transport method)": [[69, "Evd.Transport.do_accept_peer"]], "do_create_new_peer() (evd.transport method)": [[69, "Evd.Transport.do_create_new_peer"]], "do_notify_new_peer() (evd.transport method)": [[69, "Evd.Transport.do_notify_new_peer"]], "do_notify_peer_closed() (evd.transport method)": [[69, "Evd.Transport.do_notify_peer_closed"]], "do_notify_receive() (evd.transport method)": [[69, "Evd.Transport.do_notify_receive"]], "do_notify_validate_peer() (evd.transport method)": [[69, "Evd.Transport.do_notify_validate_peer"]], "do_open() (evd.transport method)": [[69, "Evd.Transport.do_open"]], "do_peer_closed() (evd.transport method)": [[69, "Evd.Transport.do_peer_closed"]], "do_peer_is_connected() (evd.transport method)": [[69, "Evd.Transport.do_peer_is_connected"]], "do_receive() (evd.transport method)": [[69, "Evd.Transport.do_receive"]], "do_reject_peer() (evd.transport method)": [[69, "Evd.Transport.do_reject_peer"]], "do_send() (evd.transport method)": [[69, "Evd.Transport.do_send"]], "do_signal_new_peer() (evd.transport method)": [[69, "Evd.Transport.do_signal_new_peer"]], "do_signal_peer_closed() (evd.transport method)": [[69, "Evd.Transport.do_signal_peer_closed"]], "do_signal_receive() (evd.transport method)": [[69, "Evd.Transport.do_signal_receive"]], "do_signal_validate_peer() (evd.transport method)": [[69, "Evd.Transport.do_signal_validate_peer"]], "get_peer_manager() (evd.transport method)": [[69, "Evd.Transport.get_peer_manager"]], "lookup_peer() (evd.transport method)": [[69, "Evd.Transport.lookup_peer"]], "open() (evd.transport method)": [[69, "Evd.Transport.open"]], "open_finish() (evd.transport method)": [[69, "Evd.Transport.open_finish"]], "peer_is_connected() (evd.transport method)": [[69, "Evd.Transport.peer_is_connected"]], "receive() (evd.transport method)": [[69, "Evd.Transport.receive"]], "receive_text() (evd.transport method)": [[69, "Evd.Transport.receive_text"]], "reject_peer() (evd.transport method)": [[69, "Evd.Transport.reject_peer"]], "send() (evd.transport method)": [[69, "Evd.Transport.send"]], "send_text() (evd.transport method)": [[69, "Evd.Transport.send_text"]], "set_peer_manager() (evd.transport method)": [[69, "Evd.Transport.set_peer_manager"]], "evd.transportinterface (built-in class)": [[70, "Evd.TransportInterface"]], "evd.webdir (built-in class)": [[71, "Evd.WebDir"]], "evd.webdir.props.alias (built-in variable)": [[71, "Evd.WebDir.props.alias"]], "evd.webdir.props.allow_put (built-in variable)": [[71, "Evd.WebDir.props.allow_put"]], "evd.webdir.props.root (built-in variable)": [[71, "Evd.WebDir.props.root"]], "get_alias() (evd.webdir method)": [[71, "Evd.WebDir.get_alias"]], "get_root() (evd.webdir method)": [[71, "Evd.WebDir.get_root"]], "new() (evd.webdir class method)": [[71, "Evd.WebDir.new"]], "set_alias() (evd.webdir method)": [[71, "Evd.WebDir.set_alias"]], "set_root() (evd.webdir method)": [[71, "Evd.WebDir.set_root"]], "evd.webdirclass (built-in class)": [[72, "Evd.WebDirClass"]], "evd.webselector (built-in class)": [[73, "Evd.WebSelector"]], "add_service() (evd.webselector method)": [[73, "Evd.WebSelector.add_service"]], "new() (evd.webselector class method)": [[73, "Evd.WebSelector.new"]], "remove_service() (evd.webselector method)": [[73, "Evd.WebSelector.remove_service"]], "set_default_service() (evd.webselector method)": [[73, "Evd.WebSelector.set_default_service"]], "evd.webselectorclass (built-in class)": [[74, "Evd.WebSelectorClass"]], "evd.webservice (built-in class)": [[75, "Evd.WebService"]], "evd.webservice.signals.log_entry()": [[75, "Evd.WebService.signals.log_entry"]], "evd.webservice.signals.request_headers()": [[75, "Evd.WebService.signals.request_headers"]], "add_connection_with_request() (evd.webservice method)": [[75, "Evd.WebService.add_connection_with_request"]], "allow_origin() (evd.webservice method)": [[75, "Evd.WebService.allow_origin"]], "deny_origin() (evd.webservice method)": [[75, "Evd.WebService.deny_origin"]], "do_flush_and_return_connection() (evd.webservice method)": [[75, "Evd.WebService.do_flush_and_return_connection"]], "do_log() (evd.webservice method)": [[75, "Evd.WebService.do_log"]], "do_request_handler() (evd.webservice method)": [[75, "Evd.WebService.do_request_handler"]], "do_respond() (evd.webservice method)": [[75, "Evd.WebService.do_respond"]], "do_return_connection() (evd.webservice method)": [[75, "Evd.WebService.do_return_connection"]], "do_signal_log_entry() (evd.webservice method)": [[75, "Evd.WebService.do_signal_log_entry"]], "do_signal_request_headers() (evd.webservice method)": [[75, "Evd.WebService.do_signal_request_headers"]], "get_origin_policy() (evd.webservice method)": [[75, "Evd.WebService.get_origin_policy"]], "new() (evd.webservice class method)": [[75, "Evd.WebService.new"]], "origin_allowed() (evd.webservice method)": [[75, "Evd.WebService.origin_allowed"]], "respond() (evd.webservice method)": [[75, "Evd.WebService.respond"]], "respond_headers() (evd.webservice method)": [[75, "Evd.WebService.respond_headers"]], "set_origin_policy() (evd.webservice method)": [[75, "Evd.WebService.set_origin_policy"]], "evd.webserviceclass (built-in class)": [[76, "Evd.WebServiceClass"]], "evd.webtransportserver (built-in class)": [[77, "Evd.WebTransportServer"]], "evd.webtransportserver.props.base_path (built-in variable)": [[77, "Evd.WebTransportServer.props.base_path"]], "evd.webtransportserver.props.lp_service (built-in variable)": [[77, "Evd.WebTransportServer.props.lp_service"]], "evd.webtransportserver.props.websocket_service (built-in variable)": [[77, "Evd.WebTransportServer.props.websocket_service"]], "get_base_path() (evd.webtransportserver method)": [[77, "Evd.WebTransportServer.get_base_path"]], "get_validate_peer_arguments() (evd.webtransportserver method)": [[77, "Evd.WebTransportServer.get_validate_peer_arguments"]], "new() (evd.webtransportserver class method)": [[77, "Evd.WebTransportServer.new"]], "set_enable_websocket() (evd.webtransportserver method)": [[77, "Evd.WebTransportServer.set_enable_websocket"]], "set_external_base_url() (evd.webtransportserver method)": [[77, "Evd.WebTransportServer.set_external_base_url"]], "unuse_selector() (evd.webtransportserver method)": [[77, "Evd.WebTransportServer.unuse_selector"]], "use_selector() (evd.webtransportserver method)": [[77, "Evd.WebTransportServer.use_selector"]], "evd.webtransportserverclass (built-in class)": [[78, "Evd.WebTransportServerClass"]], "evd.websocketclient (built-in class)": [[79, "Evd.WebsocketClient"]], "get_standalone() (evd.websocketclient method)": [[79, "Evd.WebsocketClient.get_standalone"]], "get_validate_peer_arguments() (evd.websocketclient method)": [[79, "Evd.WebsocketClient.get_validate_peer_arguments"]], "new() (evd.websocketclient class method)": [[79, "Evd.WebsocketClient.new"]], "set_standalone() (evd.websocketclient method)": [[79, "Evd.WebsocketClient.set_standalone"]], "evd.websocketclientclass (built-in class)": [[80, "Evd.WebsocketClientClass"]], "evd.websocketserver (built-in class)": [[81, "Evd.WebsocketServer"]], "get_standalone() (evd.websocketserver method)": [[81, "Evd.WebsocketServer.get_standalone"]], "get_validate_peer_arguments() (evd.websocketserver method)": [[81, "Evd.WebsocketServer.get_validate_peer_arguments"]], "new() (evd.websocketserver class method)": [[81, "Evd.WebsocketServer.new"]], "set_standalone() (evd.websocketserver method)": [[81, "Evd.WebsocketServer.set_standalone"]], "evd.websocketserverclass (built-in class)": [[82, "Evd.WebsocketServerClass"]], "accept (evd.validateenum attribute)": [[83, "Evd.ValidateEnum.ACCEPT"]], "allow (evd.policy attribute)": [[83, "Evd.Policy.ALLOW"]], "binary (evd.messagetype attribute)": [[83, "Evd.MessageType.BINARY"]], "bound (evd.socketstate attribute)": [[83, "Evd.SocketState.BOUND"]], "closed (evd.socketstate attribute)": [[83, "Evd.SocketState.CLOSED"]], "closing (evd.socketstate attribute)": [[83, "Evd.SocketState.CLOSING"]], "connected (evd.socketstate attribute)": [[83, "Evd.SocketState.CONNECTED"]], "connecting (evd.socketstate attribute)": [[83, "Evd.SocketState.CONNECTING"]], "deny (evd.policy attribute)": [[83, "Evd.Policy.DENY"]], "dh (evd.pkikeytype attribute)": [[83, "Evd.PkiKeyType.DH"]], "dsa (evd.pkikeytype attribute)": [[83, "Evd.PkiKeyType.DSA"]], "ec (evd.pkikeytype attribute)": [[83, "Evd.PkiKeyType.EC"]], "evd.messagetype (built-in class)": [[83, "Evd.MessageType"]], "evd.pkikeytype (built-in class)": [[83, "Evd.PkiKeyType"]], "evd.policy (built-in class)": [[83, "Evd.Policy"]], "evd.socketstate (built-in class)": [[83, "Evd.SocketState"]], "evd.tlscertificatetype (built-in class)": [[83, "Evd.TlsCertificateType"]], "evd.validateenum (built-in class)": [[83, "Evd.ValidateEnum"]], "listening (evd.socketstate attribute)": [[83, "Evd.SocketState.LISTENING"]], "openpgp (evd.tlscertificatetype attribute)": [[83, "Evd.TlsCertificateType.OPENPGP"]], "pending (evd.validateenum attribute)": [[83, "Evd.ValidateEnum.PENDING"]], "reject (evd.validateenum attribute)": [[83, "Evd.ValidateEnum.REJECT"]], "resolving (evd.socketstate attribute)": [[83, "Evd.SocketState.RESOLVING"]], "rsa (evd.pkikeytype attribute)": [[83, "Evd.PkiKeyType.RSA"]], "text (evd.messagetype attribute)": [[83, "Evd.MessageType.TEXT"]], "tls_handshaking (evd.socketstate attribute)": [[83, "Evd.SocketState.TLS_HANDSHAKING"]], "unknown (evd.pkikeytype attribute)": [[83, "Evd.PkiKeyType.UNKNOWN"]], "unknown (evd.tlscertificatetype attribute)": [[83, "Evd.TlsCertificateType.UNKNOWN"]], "x509 (evd.tlscertificatetype attribute)": [[83, "Evd.TlsCertificateType.X509"]], "client (evd.tlsmode attribute)": [[84, "Evd.TlsMode.CLIENT"]], "expired (evd.tlsverifystate attribute)": [[84, "Evd.TlsVerifyState.EXPIRED"]], "evd.tlsmode (built-in class)": [[84, "Evd.TlsMode"]], "evd.tlsverifystate (built-in class)": [[84, "Evd.TlsVerifyState"]], "insecure_alg (evd.tlsverifystate attribute)": [[84, "Evd.TlsVerifyState.INSECURE_ALG"]], "invalid (evd.tlsverifystate attribute)": [[84, "Evd.TlsVerifyState.INVALID"]], "not_active (evd.tlsverifystate attribute)": [[84, "Evd.TlsVerifyState.NOT_ACTIVE"]], "no_cert (evd.tlsverifystate attribute)": [[84, "Evd.TlsVerifyState.NO_CERT"]], "ok (evd.tlsverifystate attribute)": [[84, "Evd.TlsVerifyState.OK"]], "revoked (evd.tlsverifystate attribute)": [[84, "Evd.TlsVerifyState.REVOKED"]], "server (evd.tlsmode attribute)": [[84, "Evd.TlsMode.SERVER"]], "signer_not_ca (evd.tlsverifystate attribute)": [[84, "Evd.TlsVerifyState.SIGNER_NOT_CA"]], "signer_not_found (evd.tlsverifystate attribute)": [[84, "Evd.TlsVerifyState.SIGNER_NOT_FOUND"]], "evd.nanosleep()": [[85, "Evd.nanosleep"]], "evd.timeout_add()": [[85, "Evd.timeout_add"]], "evd.tls_deinit()": [[85, "Evd.tls_deinit"]], "evd.tls_free_certificates()": [[85, "Evd.tls_free_certificates"]], "evd.tls_generate_dh_params()": [[85, "Evd.tls_generate_dh_params"]], "evd.tls_generate_dh_params_finish()": [[85, "Evd.tls_generate_dh_params_finish"]], "evd.tls_init()": [[85, "Evd.tls_init"]], "evd.uuid_new()": [[85, "Evd.uuid_new"]]}})