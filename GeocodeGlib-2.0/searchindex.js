Search.setIndex({"docnames": ["class-structs", "classes", "classes/Backend", "classes/BackendInterface", "classes/BoundingBox", "classes/BoundingBoxClass", "classes/Forward", "classes/ForwardClass", "classes/Location", "classes/LocationClass", "classes/MockBackend", "classes/MockBackendClass", "classes/MockBackendQuery", "classes/Nominatim", "classes/NominatimClass", "classes/Place", "classes/PlaceClass", "classes/Reverse", "classes/ReverseClass", "constants", "enums", "functions", "hierarchy", "iface-structs", "index", "interfaces", "mapping", "structs"], "filenames": ["class-structs.rst", "classes.rst", "classes/Backend.rst", "classes/BackendInterface.rst", "classes/BoundingBox.rst", "classes/BoundingBoxClass.rst", "classes/Forward.rst", "classes/ForwardClass.rst", "classes/Location.rst", "classes/LocationClass.rst", "classes/MockBackend.rst", "classes/MockBackendClass.rst", "classes/MockBackendQuery.rst", "classes/Nominatim.rst", "classes/NominatimClass.rst", "classes/Place.rst", "classes/PlaceClass.rst", "classes/Reverse.rst", "classes/ReverseClass.rst", "constants.rst", "enums.rst", "functions.rst", "hierarchy.rst", "iface-structs.rst", "index.rst", "interfaces.rst", "mapping.rst", "structs.rst"], "titles": ["Class Structures", "Classes", "GeocodeGlib.Backend", "GeocodeGlib.BackendInterface", "GeocodeGlib.BoundingBox", "GeocodeGlib.BoundingBoxClass", "GeocodeGlib.Forward", "GeocodeGlib.ForwardClass", "GeocodeGlib.Location", "GeocodeGlib.LocationClass", "GeocodeGlib.MockBackend", "GeocodeGlib.MockBackendClass", "GeocodeGlib.MockBackendQuery", "GeocodeGlib.Nominatim", "GeocodeGlib.NominatimClass", "GeocodeGlib.Place", "GeocodeGlib.PlaceClass", "GeocodeGlib.Reverse", "GeocodeGlib.ReverseClass", "Constants", "Enums", "Functions", "Hierarchy", "Interface Structures", "GeocodeGlib 2.0 (3.26.3)", "Interfaces", "Symbol Mapping", "Structures"], "terms": {"geocodeglib": [0, 1, 19, 20, 21, 22, 23, 25, 26, 27], "boundingboxclass": [0, 4, 26], "forwardclass": [0, 6, 26], "locationclass": [0, 8, 26], "mockbackendclass": [0, 10, 26], "nominatimclass": [0, 13, 26], "placeclass": [0, 15, 26], "reverseclass": [0, 17, 26], "boundingbox": [1, 6, 15, 22, 26], "forward": [1, 2, 3, 10, 12, 22, 26], "locat": [1, 4, 6, 15, 17, 20, 22, 26], "mockbackend": [1, 2, 12, 22, 26], "nominatim": [1, 2, 6, 14, 17, 22, 24, 26], "place": [1, 2, 6, 10, 12, 17, 20, 22, 26], "revers": [1, 2, 3, 10, 12, 22, 24, 26], "gobject": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 22, 24], "ginterfac": [2, 10, 13], "implement": [2, 10, 13, 14], "forward_search": [2, 3, 10, 26], "param": [2, 6, 10, 12], "cancel": [2, 6, 13, 17], "forward_search_async": [2, 3, 26], "callback": [2, 6, 13, 17], "user_data": [2, 6, 13, 17], "forward_search_finish": [2, 3, 26], "result": [2, 6, 10, 12, 17], "reverse_resolv": [2, 3, 10, 26], "reverse_resolve_async": [2, 3, 26], "reverse_resolve_finish": [2, 3, 26], "do_forward_search": 2, "do_forward_search_async": 2, "do_forward_search_finish": 2, "do_reverse_resolv": 2, "do_reverse_resolve_async": 2, "do_reverse_resolve_finish": 2, "none": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "base": [2, 4, 6, 8, 10, 13, 15, 17, 20], "structur": [2, 4, 5, 6, 7, 8, 9, 10, 13, 15, 16, 17, 18, 24], "backendinterfac": [2, 23, 26], "all": [2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 20], "ar": [2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18], "privat": [2, 4, 5, 6, 7, 8, 9, 10, 13, 15, 16, 17, 18], "should": [2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18], "never": [2, 4, 5, 6, 7, 8, 9, 10, 13, 15, 16, 17, 18], "access": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "directli": [2, 4, 5, 6, 7, 8, 9, 10, 13, 15, 16, 17, 18], "new": [2, 3, 4, 6, 8, 10, 12, 13, 14, 15, 17, 26], "version": [2, 3, 4, 6, 8, 10, 12, 13, 14, 15, 17], "3": [2, 3, 4, 6, 8, 10, 12, 13, 14, 15, 17, 20], "23": [2, 3, 4, 6, 8, 10, 12, 13, 14, 15, 17, 20], "1": [2, 3, 4, 6, 8, 10, 12, 13, 14, 15, 17, 19, 20, 24], "paramet": [2, 4, 6, 8, 10, 12, 13, 15, 17], "str": [2, 6, 8, 10, 13, 15], "valu": [2, 4, 6, 8, 10, 13, 15, 20], "glib": [2, 6, 8, 10, 12, 13, 17, 20, 21, 24], "hashtabl": [2, 6], "string": [2, 6, 8, 13], "kei": [2, 6], "gio": [2, 6, 13, 15, 17, 24], "option": [2, 6, 17], "ignor": [2, 6, 17], "rais": [2, 6, 8, 17], "error": [2, 6, 8, 10, 12, 17, 20, 21, 26], "return": [2, 4, 6, 8, 10, 12, 13, 15, 17, 20, 21], "A": [2, 6, 8, 15, 17, 20], "list": [2, 6, 12], "case": [2, 6, 15, 17], "free": [2, 6, 8, 17], "instanc": [2, 4, 6, 8, 15, 17], "object": [2, 3, 4, 6, 8, 10, 12, 13, 14, 15, 17, 22], "unref": [2, 4, 6, 8, 13, 15, 17], "g_list_fre": [2, 6], "when": [2, 4, 6, 8, 13, 15, 17], "done": [2, 4, 6, 8, 13, 15, 17], "type": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21], "get": [2, 4, 6, 8, 10, 13, 14, 15, 17, 20, 21], "geocod": [2, 3, 6, 13, 17, 20, 21, 24], "queri": [2, 6, 10, 12, 13, 14, 17], "us": [2, 4, 6, 8, 10, 13, 15, 17, 20], "self": [2, 4, 8, 15], "If": [2, 6, 10, 17], "found": [2, 6, 17], "no_match": [2, 6, 10, 12, 20, 26], "i": [2, 6, 8, 10, 12, 13, 17, 20, 24], "thi": [2, 4, 6, 8, 10, 12, 13, 15, 17, 20], "synchron": [2, 3, 6, 13, 14, 17], "function": [2, 6, 13, 14, 17, 20, 24], "which": [2, 3, 6, 8, 10, 12, 13, 14], "mean": [2, 10], "mai": [2, 10, 14], "block": 2, "network": [2, 13, 14], "request": [2, 3, 6, 8, 10, 13, 14, 17, 20], "In": 2, "most": [2, 10], "situat": 2, "asynchron": [2, 3, 6, 10, 13, 14, 17], "more": [2, 6, 17], "appropri": 2, "see": [2, 6, 8, 10, 13, 17], "its": [2, 8, 10, 14, 15, 20], "document": [2, 6, 13], "inform": [2, 6, 17], "usag": [2, 13], "asyncreadycallback": [2, 6, 13, 17], "call": [2, 6, 10, 12, 14, 17], "satisfi": [2, 6, 17], "data": [2, 6, 17], "pass": [2, 6, 17], "perform": [2, 6, 12, 17], "do": [2, 6, 17], "same": [2, 6, 8, 10, 15, 17], "thing": [2, 6, 17], "The": [2, 4, 6, 8, 10, 12, 13, 14, 15, 20], "hash": 2, "tabl": 2, "format": [2, 6, 10, 12], "telepathi": [2, 6], "specif": [2, 6, 15, 20], "also": [2, 6, 8], "xep": [2, 6], "0080": [2, 6], "oper": [2, 3, 6, 17], "finish": [2, 3, 6, 13, 14, 17], "you": [2, 6, 17], "can": [2, 6, 17], "asyncresult": [2, 6, 13, 17], "order": [2, 10], "relev": 2, "first": 2, "could": [2, 17], "not_support": [2, 10, 12, 17, 20, 26], "typic": [2, 17], "happen": [2, 17], "coordin": [2, 4, 8, 17, 20], "middl": [2, 17], "ocean": [2, 17, 20, 26], "singl": 2, "repres": [2, 8, 10, 12, 15, 19], "given": [2, 6, 8, 10, 17], "latitud": [2, 8], "longitud": [2, 8], "lat": 2, "lon": 2, "some": 2, "ambigu": 2, "multipl": [2, 10, 20], "thei": 2, "name": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20], "descript": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 24], "r": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18], "handl": 3, "start": 3, "an": [3, 8, 10, 12, 13, 15, 20], "g_ifac": 3, "typeinterfac": 3, "pad": 3, "class": [3, 5, 7, 9, 11, 12, 14, 16, 18, 20, 24], "interfac": [3, 24], "defin": [3, 20], "basic": 3, "subclass": [4, 6, 8, 10, 13, 15, 17], "inherit": [4, 6, 8, 10, 13, 15, 17], "37": [4, 6, 8, 10, 13, 15, 17], "struct": [4, 6, 8, 10, 13, 15, 17], "objectclass": [4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18], "5": [4, 6, 8, 10, 13, 15, 17, 20], "top": 4, "bottom": 4, "left": 4, "right": 4, "equal": [4, 8, 15, 26], "b": [4, 8, 15], "get_bottom": [4, 26], "get_left": [4, 26], "get_right": [4, 26], "get_top": [4, 26], "7": [4, 6, 8, 10, 13, 15, 17, 20], "flag": [4, 6, 8, 13, 15], "short": [4, 6, 8, 13, 15], "float": [4, 8], "w": [4, 6, 8, 12, 13, 15], "co": [4, 8, 13, 15], "parent_inst": [4, 6, 8, 13, 15, 17], "kwarg": [4, 6, 8, 10, 13, 15, 17], "abstract": [4, 6, 8, 10, 13, 15, 17], "No": [4, 6, 8, 10, 13, 15, 17], "classmethod": [4, 6, 8, 10, 13, 15, 17, 20], "creat": [4, 6, 8, 10, 13, 15, 17], "anoth": [4, 8, 15], "bound": [4, 6, 15], "box": [4, 6, 15], "true": [4, 6, 8, 12, 15], "fals": [4, 6, 8, 12, 15], "otherwis": [4, 8, 12, 15], "bool": [4, 6, 8, 12, 15], "compar": [4, 8, 15], "two": [4, 8, 15], "onli": [4, 6, 8, 15], "exactli": [4, 8, 10, 15], "both": [4, 8, 15], "must": [4, 6, 8, 10, 13, 15], "non": [4, 8, 10, 15], "prop": [4, 6, 8, 13, 15], "default": [4, 6, 8, 13, 14, 15, 17], "0": [4, 8, 20], "readabl": [4, 6, 8, 13, 15], "writabl": [4, 6, 8, 13, 15], "construct_onli": [4, 8, 13, 15], "parent_class": [5, 7, 9, 11, 14, 16, 18], "new_for_param": [6, 26], "new_for_str": [6, 26], "get_answer_count": [6, 26], "get_bound": [6, 26], "get_search_area": [6, 26], "search": [6, 10, 12, 26], "search_async": [6, 26], "search_finish": [6, 26], "re": [6, 13, 17], "set_answer_count": [6, 26], "count": 6, "set_backend": [6, 17, 26], "backend": [6, 10, 13, 17, 25, 26], "set_bound": [6, 26], "set_search_area": [6, 26], "answer": 6, "int": [6, 8, 20, 21], "number": 6, "bind": 6, "area": [6, 15, 20], "limit": 6, "within": [6, 20], "": [6, 13, 14], "site": 6, "contain": [6, 20], "form": [6, 8], "regul": 6, "whether": 6, "act": 6, "restrict": 6, "set": [6, 8, 10, 12, 13, 15], "current": [6, 8, 17], "By": [6, 17], "gnome": [6, 13, 17, 24], "server": [6, 13, 17, 20], "web": [6, 17, 20], "servic": [6, 13, 17, 20, 24], "greater": 6, "than": [6, 12, 20], "zero": [6, 8], "one": [6, 8, 10, 17], "specifi": [6, 8, 17], "item": 6, "answer_count": 6, "10": [6, 20], "treat": 6, "like": [6, 8], "prefer": 6, "search_area": 6, "from": [6, 8, 13, 20], "accuraci": [8, 19], "new_with_descript": [8, 26], "get_accuraci": [8, 26], "get_altitud": [8, 26], "get_cr": [8, 26], "get_descript": [8, 26], "get_distance_from": [8, 26], "locb": 8, "get_latitud": [8, 26], "get_longitud": [8, 26], "get_timestamp": [8, 26], "set_descript": [8, 26], "set_from_uri": [8, 26], "uri": [8, 13, 14, 20], "to_uri": [8, 26], "scheme": [8, 20], "meter": 8, "altitud": 8, "cr": [8, 20], "locationcr": [8, 20, 26], "refer": [8, 13, 20], "system": [8, 20], "identif": [8, 20], "degre": 8, "timestamp": 8, "second": 8, "sinc": [8, 10], "epoch": 8, "valid": [8, 13], "For": [8, 15], "exampl": [8, 13, 14, 15], "have": [8, 10, 14, 15, 20], "physic": 8, "ha": [8, 15], "other": [8, 20], "doe": [8, 15], "similarli": 8, "differ": 8, "Or": 8, "obj": 8, "distanc": 8, "km": 8, "calcul": 8, "along": 8, "curvatur": 8, "earth": [8, 20], "between": 8, "2": [8, 20], "note": 8, "chang": 8, "taken": 8, "account": 8, "map": [8, 10, 24], "out": 8, "success": 8, "initi": [8, 10], "geo": [8, 20, 26], "rfc": [8, 20], "5870": [8, 20], "simplest": 8, "look": 8, "android": 8, "extens": 8, "support": [8, 20], "q": 8, "locationurischem": [8, 20, 26], "freed": 8, "longer": [8, 20], "need": 8, "7976931348623157e": 8, "308": 8, "wgs84": [8, 20, 26], "give": 8, "wa": [8, 12, 20], "resolv": [8, 10, 12, 17, 26], "address": [8, 13, 15], "interpret": 8, "time": [8, 10], "6": [10, 13, 20], "add_forward_result": [10, 26], "add_reverse_result": [10, 26], "clear": [10, 26], "get_query_log": [10, 26], "mock": 10, "so": 10, "empti": [10, 12], "respond": 10, "accept": [10, 12], "instead": 10, "match": [10, 20], "those": 10, "add": 10, "correspond": 10, "receiv": 10, "through": 10, "variant": 10, "caller": 10, "ad": 10, "recent": 10, "provid": 10, "store": 10, "been": 10, "addition": 10, "log": 10, "far": 10, "effect": 10, "reset": 10, "state": [10, 15, 20, 26], "potenti": 10, "sequenc": 10, "mockbackendqueri": [10, 26, 27], "either": 10, "were": 10, "made": [10, 20], "interleav": 10, "is_forward": 12, "applic": [12, 13, 14], "code": [12, 15, 20], "includ": 12, "input": 12, "output": 12, "rather": 12, "get_gnom": [13, 26], "base_url": 13, "maintainer_email_address": 13, "do_queri": 13, "do_query_async": 13, "do_query_finish": 13, "url": 13, "maintain": 13, "email": 13, "e": 13, "mail": 13, "user": 13, "agent": 13, "send": 13, "http": [13, 24], "org": [13, 24], "thread": 13, "safe": [13, 20], "softwar": 13, "onlin": 13, "overrid": [13, 14], "query_async": [13, 14], "make": [13, 14], "contact": 13, "them": 13, "event": 13, "problem": 13, "api": 13, "user_ag": 13, "deriv": [13, 14], "id": [13, 15], "20": [13, 20], "myappid": 13, "As": 13, "per": 13, "polici": 13, "identifi": 13, "query_finish": 14, "allow": 14, "each": 14, "client": 14, "bodi": [14, 20], "just": 14, "intern": [14, 20], "want": 14, "check": 14, "test": 14, "normal": 14, "virtual": 14, "mainli": 14, "intend": 14, "place_typ": 15, "new_with_loc": [15, 26], "get_administrative_area": [15, 26], "get_area": [15, 26], "get_bounding_box": [15, 26], "get_build": [15, 26], "get_contin": [15, 26], "get_countri": [15, 26], "get_country_cod": [15, 26], "get_counti": [15, 26], "get_icon": [15, 26], "get_loc": [15, 26], "get_nam": [15, 26], "get_osm_id": [15, 26], "get_osm_typ": [15, 26], "get_place_typ": [15, 26], "get_postal_cod": [15, 26], "get_stat": [15, 26], "get_street": [15, 26], "get_street_address": [15, 26], "get_town": [15, 26], "set_administrative_area": [15, 26], "admin_area": 15, "set_area": [15, 26], "set_bounding_box": [15, 26], "bbox": 15, "set_build": [15, 26], "build": [15, 20, 26], "set_contin": [15, 26], "contin": [15, 19, 20, 26], "set_countri": [15, 26], "countri": [15, 19, 20, 26], "set_country_cod": [15, 26], "country_cod": 15, "set_counti": [15, 26], "counti": [15, 20, 26], "set_loc": [15, 26], "set_nam": [15, 26], "set_postal_cod": [15, 26], "postal_cod": [15, 20, 26], "set_stat": [15, 26], "set_street": [15, 26], "street": [15, 19, 20, 26], "set_street_address": [15, 26], "street_address": 15, "set_town": [15, 26], "town": [15, 20, 26], "administr": [15, 20], "local": 15, "campu": 15, "neighborhood": [15, 20], "iso": [15, 20], "icon": 15, "info": 15, "osm": [15, 20], "openstreetmap": [15, 24], "placeosmtyp": [15, 20, 26], "placetyp": [15, 20, 26], "postal": [15, 20], "boundari": [15, 20], "unknown": [15, 19, 20, 26], "3166": [15, 20], "upper": 15, "associ": 15, "administrative_area": 15, "bounding_box": 15, "geocodeplac": [15, 26], "osm_id": 15, "osm_typ": 15, "new_for_loc": [17, 26], "resolve_async": [17, 26], "resolve_finish": [17, 26], "resolut": 17, "location_accuracy_c": [19, 26], "location_accuracy_contin": [19, 26], "location_accuracy_countri": [19, 26], "location_accuracy_region": [19, 26], "location_accuracy_street": [19, 26], "location_accuracy_unknown": [19, 26], "15000": 19, "citi": [19, 20], "level": 19, "3000000": 19, "300000": 19, "50000": 19, "region": 19, "1000": 19, "genum": 20, "quark": [20, 21, 26], "gquark": [20, 21], "pars": [20, 26], "occur": 20, "respons": 20, "didn": 20, "t": 20, "ani": 20, "invalid_argu": [20, 26], "invalid": 20, "argument": 20, "internal_serv": [20, 26], "4": 20, "encount": 20, "possibli": 20, "unrecover": 20, "world": 20, "geodet": 20, "standard": 20, "node": [20, 26], "point": 20, "space": 20, "relat": [20, 26], "explain": 20, "how": 20, "element": 20, "work": 20, "togeth": 20, "wai": [20, 26], "linear": 20, "featur": 20, "hous": 20, "airport": [20, 26], "railway_st": [20, 26], "11": 20, "railwai": 20, "station": 20, "bus_stop": [20, 26], "12": 20, "bu": 20, "stop": 20, "motorwai": [20, 26], "13": 20, "high": 20, "capac": 20, "highwai": 20, "design": 20, "carri": 20, "fast": 20, "motor": 20, "traffic": 20, "drainag": [20, 26], "14": 20, "water": 20, "river": 20, "canal": 20, "lake": 20, "bai": 20, "land_featur": [20, 26], "15": 20, "land": 20, "park": 20, "mountain": 20, "beach": 20, "miscellan": [20, 26], "16": 20, "uncategor": 20, "supernam": [20, 26], "17": 20, "cover": 20, "point_of_interest": [20, 26], "18": 20, "interest": 20, "school": [20, 26], "hospit": 20, "tourist": 20, "attract": 20, "suburb": [20, 26], "19": 20, "subdivis": 20, "colloqui": [20, 26], "known": 20, "zone": [20, 26], "21": 20, "context": 20, "msa": 20, "historical_st": [20, 26], "22": 20, "histor": 20, "primari": 20, "historical_counti": [20, 26], "secondari": 20, "24": 20, "One": 20, "major": 20, "mass": 20, "time_zon": [20, 26], "25": 20, "olson": 20, "tz": 20, "databas": 20, "estat": [20, 26], "26": 20, "develop": 20, "historical_town": [20, 26], "27": 20, "popul": 20, "settlement": 20, "origin": 20, "28": 20, "five": 20, "sea": [20, 26], "29": 20, "open": 20, "smaller": 20, "villag": 20, "30": 20, "institut": 20, "learn": 20, "under": 20, "supervis": 20, "teacher": 20, "place_of_worship": [20, 26], "31": 20, "worship": 20, "independ": 20, "religion": 20, "denomin": 20, "restaur": [20, 26], "32": 20, "gener": 20, "formal": 20, "sit": 20, "down": 20, "facil": 20, "sell": 20, "full": 20, "meal": 20, "serv": 20, "waiter": 20, "bar": [20, 26], "33": 20, "pub": 20, "light_rail_st": [20, 26], "34": 20, "light": 20, "rail": 20, "tram": 20, "local_administrative_area": [20, 26], "tertiari": 20, "partial": 20, "8": 20, "depend": [20, 24], "territori": 20, "island": [20, 26], "9": 20, "error_quark": [21, 26], "parent": 24, "project": 24, "helper": 24, "librari": 24, "offer": 24, "bug": 24, "tracker": 24, "gitlab": 24, "issu": 24, "debian": 24, "packag": 24, "gir1": 24, "json": 24, "soup": 24, "hierarchi": 24, "enum": 24, "constant": 24, "symbol": 24, "c": 26, "python": 26, "geocode_backend_forward_search": 26, "geocode_backend_forward_search_async": 26, "geocode_backend_forward_search_finish": 26, "geocode_backend_reverse_resolv": 26, "geocode_backend_reverse_resolve_async": 26, "geocode_backend_reverse_resolve_finish": 26, "geocode_bounding_box_equ": 26, "geocode_bounding_box_get_bottom": 26, "geocode_bounding_box_get_left": 26, "geocode_bounding_box_get_right": 26, "geocode_bounding_box_get_top": 26, "geocode_bounding_box_new": 26, "geocode_error_internal_serv": 26, "geocode_error_invalid_argu": 26, "geocode_error_no_match": 26, "geocode_error_not_support": 26, "geocode_error_pars": 26, "geocode_error_quark": 26, "geocode_forward_get_answer_count": 26, "geocode_forward_get_bound": 26, "geocode_forward_get_search_area": 26, "geocode_forward_new_for_param": 26, "geocode_forward_new_for_str": 26, "geocode_forward_search": 26, "geocode_forward_search_async": 26, "geocode_forward_search_finish": 26, "geocode_forward_set_answer_count": 26, "geocode_forward_set_backend": 26, "geocode_forward_set_bound": 26, "geocode_forward_set_search_area": 26, "geocode_location_accuracy_c": 26, "geocode_location_accuracy_contin": 26, "geocode_location_accuracy_countri": 26, "geocode_location_accuracy_region": 26, "geocode_location_accuracy_street": 26, "geocode_location_accuracy_unknown": 26, "geocode_location_crs_wgs84": 26, "geocode_location_equ": 26, "geocode_location_get_accuraci": 26, "geocode_location_get_altitud": 26, "geocode_location_get_cr": 26, "geocode_location_get_descript": 26, "geocode_location_get_distance_from": 26, "geocode_location_get_latitud": 26, "geocode_location_get_longitud": 26, "geocode_location_get_timestamp": 26, "geocode_location_new": 26, "geocode_location_new_with_descript": 26, "geocode_location_set_descript": 26, "geocode_location_set_from_uri": 26, "geocode_location_to_uri": 26, "geocode_location_uri_scheme_geo": 26, "geocode_mock_backend_add_forward_result": 26, "geocode_mock_backend_add_reverse_result": 26, "geocode_mock_backend_clear": 26, "geocode_mock_backend_get_query_log": 26, "geocode_mock_backend_new": 26, "geocode_nominatim_get_gnom": 26, "geocode_nominatim_new": 26, "geocode_place_equ": 26, "geocode_place_get_administrative_area": 26, "geocode_place_get_area": 26, "geocode_place_get_bounding_box": 26, "geocode_place_get_build": 26, "geocode_place_get_contin": 26, "geocode_place_get_countri": 26, "geocode_place_get_country_cod": 26, "geocode_place_get_counti": 26, "geocode_place_get_icon": 26, "geocode_place_get_loc": 26, "geocode_place_get_nam": 26, "geocode_place_get_osm_id": 26, "geocode_place_get_osm_typ": 26, "geocode_place_get_place_typ": 26, "geocode_place_get_postal_cod": 26, "geocode_place_get_st": 26, "geocode_place_get_street": 26, "geocode_place_get_street_address": 26, "geocode_place_get_town": 26, "geocode_place_new": 26, "geocode_place_new_with_loc": 26, "geocode_place_osm_type_nod": 26, "geocode_place_osm_type_rel": 26, "geocode_place_osm_type_unknown": 26, "geocode_place_osm_type_wai": 26, "geocode_place_set_administrative_area": 26, "geocode_place_set_area": 26, "geocode_place_set_bounding_box": 26, "geocode_place_set_build": 26, "geocode_place_set_contin": 26, "geocode_place_set_countri": 26, "geocode_place_set_country_cod": 26, "geocode_place_set_counti": 26, "geocode_place_set_loc": 26, "geocode_place_set_nam": 26, "geocode_place_set_postal_cod": 26, "geocode_place_set_st": 26, "geocode_place_set_street": 26, "geocode_place_set_street_address": 26, "geocode_place_set_town": 26, "geocode_place_type_airport": 26, "geocode_place_type_bar": 26, "geocode_place_type_build": 26, "geocode_place_type_bus_stop": 26, "geocode_place_type_colloqui": 26, "geocode_place_type_contin": 26, "geocode_place_type_countri": 26, "geocode_place_type_counti": 26, "geocode_place_type_drainag": 26, "geocode_place_type_est": 26, "geocode_place_type_historical_counti": 26, "geocode_place_type_historical_st": 26, "geocode_place_type_historical_town": 26, "geocode_place_type_island": 26, "geocode_place_type_land_featur": 26, "geocode_place_type_light_rail_st": 26, "geocode_place_type_local_administrative_area": 26, "geocode_place_type_miscellan": 26, "geocode_place_type_motorwai": 26, "geocode_place_type_ocean": 26, "geocode_place_type_place_of_worship": 26, "geocode_place_type_point_of_interest": 26, "geocode_place_type_postal_cod": 26, "geocode_place_type_railway_st": 26, "geocode_place_type_restaur": 26, "geocode_place_type_school": 26, "geocode_place_type_sea": 26, "geocode_place_type_st": 26, "geocode_place_type_street": 26, "geocode_place_type_suburb": 26, "geocode_place_type_supernam": 26, "geocode_place_type_time_zon": 26, "geocode_place_type_town": 26, "geocode_place_type_unknown": 26, "geocode_place_type_zon": 26, "geocode_reverse_new_for_loc": 26, "geocode_reverse_resolv": 26, "geocode_reverse_resolve_async": 26, "geocode_reverse_resolve_finish": 26, "geocode_reverse_set_backend": 26, "geocodebackend": 26, "geocodebackendinterfac": 26, "geocodeboundingbox": 26, "geocodeboundingboxclass": 26, "geocodeerror": 26, "geocodeforward": 26, "geocodeforwardclass": 26, "geocodeloc": 26, "geocodelocationclass": 26, "geocodelocationcr": 26, "geocodelocationurischem": 26, "geocodemockbackend": 26, "geocodemockbackendclass": 26, "geocodemockbackendqueri": 26, "geocodenominatim": 26, "geocodenominatimclass": 26, "geocodeplaceclass": 26, "geocodeplaceosmtyp": 26, "geocodeplacetyp": 26, "geocoderevers": 26, "geocodereverseclass": 26}, "objects": {"GeocodeGlib": [[2, 0, 1, "", "Backend"], [3, 0, 1, "", "BackendInterface"], [4, 0, 1, "", "BoundingBox"], [5, 0, 1, "", "BoundingBoxClass"], [20, 0, 1, "", "Error"], [6, 0, 1, "", "Forward"], [7, 0, 1, "", "ForwardClass"], [19, 2, 1, "", "LOCATION_ACCURACY_CITY"], [19, 2, 1, "", "LOCATION_ACCURACY_CONTINENT"], [19, 2, 1, "", "LOCATION_ACCURACY_COUNTRY"], [19, 2, 1, "", "LOCATION_ACCURACY_REGION"], [19, 2, 1, "", "LOCATION_ACCURACY_STREET"], [19, 2, 1, "", "LOCATION_ACCURACY_UNKNOWN"], [8, 0, 1, "", "Location"], [20, 0, 1, "", "LocationCRS"], [9, 0, 1, "", "LocationClass"], [20, 0, 1, "", "LocationURIScheme"], [10, 0, 1, "", "MockBackend"], [11, 0, 1, "", "MockBackendClass"], [12, 0, 1, "", "MockBackendQuery"], [13, 0, 1, "", "Nominatim"], [14, 0, 1, "", "NominatimClass"], [15, 0, 1, "", "Place"], [16, 0, 1, "", "PlaceClass"], [20, 0, 1, "", "PlaceOsmType"], [20, 0, 1, "", "PlaceType"], [17, 0, 1, "", "Reverse"], [18, 0, 1, "", "ReverseClass"], [21, 4, 1, "", "error_quark"]], "GeocodeGlib.Backend": [[2, 1, 1, "", "do_forward_search"], [2, 1, 1, "", "do_forward_search_async"], [2, 1, 1, "", "do_forward_search_finish"], [2, 1, 1, "", "do_reverse_resolve"], [2, 1, 1, "", "do_reverse_resolve_async"], [2, 1, 1, "", "do_reverse_resolve_finish"], [2, 1, 1, "", "forward_search"], [2, 1, 1, "", "forward_search_async"], [2, 1, 1, "", "forward_search_finish"], [2, 1, 1, "", "reverse_resolve"], [2, 1, 1, "", "reverse_resolve_async"], [2, 1, 1, "", "reverse_resolve_finish"]], "GeocodeGlib.BoundingBox": [[4, 1, 1, "", "equal"], [4, 1, 1, "", "get_bottom"], [4, 1, 1, "", "get_left"], [4, 1, 1, "", "get_right"], [4, 1, 1, "", "get_top"], [4, 1, 1, "", "new"]], "GeocodeGlib.BoundingBox.props": [[4, 2, 1, "", "bottom"], [4, 2, 1, "", "left"], [4, 2, 1, "", "right"], [4, 2, 1, "", "top"]], "GeocodeGlib.Error": [[20, 3, 1, "", "INTERNAL_SERVER"], [20, 3, 1, "", "INVALID_ARGUMENTS"], [20, 3, 1, "", "NOT_SUPPORTED"], [20, 3, 1, "", "NO_MATCHES"], [20, 3, 1, "", "PARSE"], [20, 1, 1, "", "quark"]], "GeocodeGlib.Forward": [[6, 1, 1, "", "get_answer_count"], [6, 1, 1, "", "get_bounded"], [6, 1, 1, "", "get_search_area"], [6, 1, 1, "", "new_for_params"], [6, 1, 1, "", "new_for_string"], [6, 1, 1, "", "search"], [6, 1, 1, "", "search_async"], [6, 1, 1, "", "search_finish"], [6, 1, 1, "", "set_answer_count"], [6, 1, 1, "", "set_backend"], [6, 1, 1, "", "set_bounded"], [6, 1, 1, "", "set_search_area"]], "GeocodeGlib.Forward.props": [[6, 2, 1, "", "answer_count"], [6, 2, 1, "", "bounded"], [6, 2, 1, "", "search_area"]], "GeocodeGlib.Location": [[8, 1, 1, "", "equal"], [8, 1, 1, "", "get_accuracy"], [8, 1, 1, "", "get_altitude"], [8, 1, 1, "", "get_crs"], [8, 1, 1, "", "get_description"], [8, 1, 1, "", "get_distance_from"], [8, 1, 1, "", "get_latitude"], [8, 1, 1, "", "get_longitude"], [8, 1, 1, "", "get_timestamp"], [8, 1, 1, "", "new"], [8, 1, 1, "", "new_with_description"], [8, 1, 1, "", "set_description"], [8, 1, 1, "", "set_from_uri"], [8, 1, 1, "", "to_uri"]], "GeocodeGlib.Location.props": [[8, 2, 1, "", "accuracy"], [8, 2, 1, "", "altitude"], [8, 2, 1, "", "crs"], [8, 2, 1, "", "description"], [8, 2, 1, "", "latitude"], [8, 2, 1, "", "longitude"], [8, 2, 1, "", "timestamp"]], "GeocodeGlib.LocationCRS": [[20, 3, 1, "", "WGS84"]], "GeocodeGlib.LocationURIScheme": [[20, 3, 1, "", "GEO"]], "GeocodeGlib.MockBackend": [[10, 1, 1, "", "add_forward_result"], [10, 1, 1, "", "add_reverse_result"], [10, 1, 1, "", "clear"], [10, 1, 1, "", "get_query_log"], [10, 1, 1, "", "new"]], "GeocodeGlib.Nominatim": [[13, 1, 1, "", "do_query"], [13, 1, 1, "", "do_query_async"], [13, 1, 1, "", "do_query_finish"], [13, 1, 1, "", "get_gnome"], [13, 1, 1, "", "new"]], "GeocodeGlib.Nominatim.props": [[13, 2, 1, "", "base_url"], [13, 2, 1, "", "maintainer_email_address"], [13, 2, 1, "", "user_agent"]], "GeocodeGlib.Place": [[15, 1, 1, "", "equal"], [15, 1, 1, "", "get_administrative_area"], [15, 1, 1, "", "get_area"], [15, 1, 1, "", "get_bounding_box"], [15, 1, 1, "", "get_building"], [15, 1, 1, "", "get_continent"], [15, 1, 1, "", "get_country"], [15, 1, 1, "", "get_country_code"], [15, 1, 1, "", "get_county"], [15, 1, 1, "", "get_icon"], [15, 1, 1, "", "get_location"], [15, 1, 1, "", "get_name"], [15, 1, 1, "", "get_osm_id"], [15, 1, 1, "", "get_osm_type"], [15, 1, 1, "", "get_place_type"], [15, 1, 1, "", "get_postal_code"], [15, 1, 1, "", "get_state"], [15, 1, 1, "", "get_street"], [15, 1, 1, "", "get_street_address"], [15, 1, 1, "", "get_town"], [15, 1, 1, "", "new"], [15, 1, 1, "", "new_with_location"], [15, 1, 1, "", "set_administrative_area"], [15, 1, 1, "", "set_area"], [15, 1, 1, "", "set_bounding_box"], [15, 1, 1, "", "set_building"], [15, 1, 1, "", "set_continent"], [15, 1, 1, "", "set_country"], [15, 1, 1, "", "set_country_code"], [15, 1, 1, "", "set_county"], [15, 1, 1, "", "set_location"], [15, 1, 1, "", "set_name"], [15, 1, 1, "", "set_postal_code"], [15, 1, 1, "", "set_state"], [15, 1, 1, "", "set_street"], [15, 1, 1, "", "set_street_address"], [15, 1, 1, "", "set_town"]], "GeocodeGlib.Place.props": [[15, 2, 1, "", "administrative_area"], [15, 2, 1, "", "area"], [15, 2, 1, "", "bounding_box"], [15, 2, 1, "", "building"], [15, 2, 1, "", "continent"], [15, 2, 1, "", "country"], [15, 2, 1, "", "country_code"], [15, 2, 1, "", "county"], [15, 2, 1, "", "icon"], [15, 2, 1, "", "location"], [15, 2, 1, "", "name"], [15, 2, 1, "", "osm_id"], [15, 2, 1, "", "osm_type"], [15, 2, 1, "", "place_type"], [15, 2, 1, "", "postal_code"], [15, 2, 1, "", "state"], [15, 2, 1, "", "street"], [15, 2, 1, "", "street_address"], [15, 2, 1, "", "town"]], "GeocodeGlib.PlaceOsmType": [[20, 3, 1, "", "NODE"], [20, 3, 1, "", "RELATION"], [20, 3, 1, "", "UNKNOWN"], [20, 3, 1, "", "WAY"]], "GeocodeGlib.PlaceType": [[20, 3, 1, "", "AIRPORT"], [20, 3, 1, "", "BAR"], [20, 3, 1, "", "BUILDING"], [20, 3, 1, "", "BUS_STOP"], [20, 3, 1, "", "COLLOQUIAL"], [20, 3, 1, "", "CONTINENT"], [20, 3, 1, "", "COUNTRY"], [20, 3, 1, "", "COUNTY"], [20, 3, 1, "", "DRAINAGE"], [20, 3, 1, "", "ESTATE"], [20, 3, 1, "", "HISTORICAL_COUNTY"], [20, 3, 1, "", "HISTORICAL_STATE"], [20, 3, 1, "", "HISTORICAL_TOWN"], [20, 3, 1, "", "ISLAND"], [20, 3, 1, "", "LAND_FEATURE"], [20, 3, 1, "", "LIGHT_RAIL_STATION"], [20, 3, 1, "", "LOCAL_ADMINISTRATIVE_AREA"], [20, 3, 1, "", "MISCELLANEOUS"], [20, 3, 1, "", "MOTORWAY"], [20, 3, 1, "", "OCEAN"], [20, 3, 1, "", "PLACE_OF_WORSHIP"], [20, 3, 1, "", "POINT_OF_INTEREST"], [20, 3, 1, "", "POSTAL_CODE"], [20, 3, 1, "", "RAILWAY_STATION"], [20, 3, 1, "", "RESTAURANT"], [20, 3, 1, "", "SCHOOL"], [20, 3, 1, "", "SEA"], [20, 3, 1, "", "STATE"], [20, 3, 1, "", "STREET"], [20, 3, 1, "", "SUBURB"], [20, 3, 1, "", "SUPERNAME"], [20, 3, 1, "", "TIME_ZONE"], [20, 3, 1, "", "TOWN"], [20, 3, 1, "", "UNKNOWN"], [20, 3, 1, "", "ZONE"]], "GeocodeGlib.Reverse": [[17, 1, 1, "", "new_for_location"], [17, 1, 1, "", "resolve"], [17, 1, 1, "", "resolve_async"], [17, 1, 1, "", "resolve_finish"], [17, 1, 1, "", "set_backend"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:data", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "data", "Python data"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"class": [0, 1, 2, 4, 6, 8, 10, 13, 15, 17], "structur": [0, 23, 27], "geocodeglib": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24], "backend": 2, "method": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "virtual": [2, 4, 6, 8, 10, 13, 15, 17], "properti": [2, 4, 6, 8, 10, 13, 15, 17], "signal": [2, 4, 6, 8, 10, 13, 15, 17], "field": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "detail": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "backendinterfac": 3, "boundingbox": 4, "boundingboxclass": 5, "forward": 6, "forwardclass": 7, "locat": 8, "locationclass": 9, "mockbackend": 10, "mockbackendclass": 11, "mockbackendqueri": 12, "nominatim": 13, "nominatimclass": 14, "place": 15, "placeclass": 16, "revers": 17, "reverseclass": 18, "constant": 19, "enum": 20, "function": 21, "hierarchi": 22, "interfac": [23, 25], "2": 24, "0": 24, "3": 24, "26": 24, "api": 24, "symbol": 26, "map": 26}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Class Structures": [[0, "class-structures"]], "Classes": [[1, "classes"]], "GeocodeGlib.Backend": [[2, "geocodeglib-backend"]], "Methods": [[2, "methods"], [3, "methods"], [4, "methods"], [5, "methods"], [6, "methods"], [7, "methods"], [8, "methods"], [9, "methods"], [10, "methods"], [11, "methods"], [12, "methods"], [13, "methods"], [14, "methods"], [15, "methods"], [16, "methods"], [17, "methods"], [18, "methods"]], "Virtual Methods": [[2, "virtual-methods"], [4, "virtual-methods"], [6, "virtual-methods"], [8, "virtual-methods"], [10, "virtual-methods"], [13, "virtual-methods"], [15, "virtual-methods"], [17, "virtual-methods"]], "Properties": [[2, "properties"], [4, "properties"], [6, "properties"], [8, "properties"], [10, "properties"], [13, "properties"], [15, "properties"], [17, "properties"]], "Signals": [[2, "signals"], [4, "signals"], [6, "signals"], [8, "signals"], [10, "signals"], [13, "signals"], [15, "signals"], [17, "signals"]], "Fields": [[2, "fields"], [3, "fields"], [4, "fields"], [5, "fields"], [6, "fields"], [7, "fields"], [8, "fields"], [9, "fields"], [10, "fields"], [11, "fields"], [12, "fields"], [13, "fields"], [14, "fields"], [15, "fields"], [16, "fields"], [17, "fields"], [18, "fields"]], "Class Details": [[2, "class-details"], [4, "class-details"], [6, "class-details"], [8, "class-details"], [10, "class-details"], [13, "class-details"], [15, "class-details"], [17, "class-details"]], "GeocodeGlib.BackendInterface": [[3, "geocodeglib-backendinterface"]], "Details": [[3, "details"], [5, "details"], [7, "details"], [9, "details"], [11, "details"], [12, "details"], [14, "details"], [16, "details"], [18, "details"], [19, "details"], [20, "details"], [21, "details"]], "GeocodeGlib.BoundingBox": [[4, "geocodeglib-boundingbox"]], "Property Details": [[4, "property-details"], [6, "property-details"], [8, "property-details"], [13, "property-details"], [15, "property-details"]], "GeocodeGlib.BoundingBoxClass": [[5, "geocodeglib-boundingboxclass"]], "GeocodeGlib.Forward": [[6, "geocodeglib-forward"]], "GeocodeGlib.ForwardClass": [[7, "geocodeglib-forwardclass"]], "GeocodeGlib.Location": [[8, "geocodeglib-location"]], "GeocodeGlib.LocationClass": [[9, "geocodeglib-locationclass"]], "GeocodeGlib.MockBackend": [[10, "geocodeglib-mockbackend"]], "GeocodeGlib.MockBackendClass": [[11, "geocodeglib-mockbackendclass"]], "GeocodeGlib.MockBackendQuery": [[12, "geocodeglib-mockbackendquery"]], "GeocodeGlib.Nominatim": [[13, "geocodeglib-nominatim"]], "GeocodeGlib.NominatimClass": [[14, "geocodeglib-nominatimclass"]], "GeocodeGlib.Place": [[15, "geocodeglib-place"]], "GeocodeGlib.PlaceClass": [[16, "geocodeglib-placeclass"]], "GeocodeGlib.Reverse": [[17, "geocodeglib-reverse"]], "GeocodeGlib.ReverseClass": [[18, "geocodeglib-reverseclass"]], "Constants": [[19, "constants"]], "Enums": [[20, "enums"]], "Functions": [[21, "functions"]], "Hierarchy": [[22, "hierarchy"]], "Interface Structures": [[23, "interface-structures"]], "GeocodeGlib 2.0 (3.26.3)": [[24, "geocodeglib-2-0-3-26-3"]], "API": [[24, "api"]], "Interfaces": [[25, "interfaces"]], "Symbol Mapping": [[26, "symbol-mapping"]], "Structures": [[27, "structures"]]}, "indexentries": {"geocodeglib.backend (built-in class)": [[2, "GeocodeGlib.Backend"]], "do_forward_search() (geocodeglib.backend method)": [[2, "GeocodeGlib.Backend.do_forward_search"]], "do_forward_search_async() (geocodeglib.backend method)": [[2, "GeocodeGlib.Backend.do_forward_search_async"]], "do_forward_search_finish() (geocodeglib.backend method)": [[2, "GeocodeGlib.Backend.do_forward_search_finish"]], "do_reverse_resolve() (geocodeglib.backend method)": [[2, "GeocodeGlib.Backend.do_reverse_resolve"]], "do_reverse_resolve_async() (geocodeglib.backend method)": [[2, "GeocodeGlib.Backend.do_reverse_resolve_async"]], "do_reverse_resolve_finish() (geocodeglib.backend method)": [[2, "GeocodeGlib.Backend.do_reverse_resolve_finish"]], "forward_search() (geocodeglib.backend method)": [[2, "GeocodeGlib.Backend.forward_search"]], "forward_search_async() (geocodeglib.backend method)": [[2, "GeocodeGlib.Backend.forward_search_async"]], "forward_search_finish() (geocodeglib.backend method)": [[2, "GeocodeGlib.Backend.forward_search_finish"]], "reverse_resolve() (geocodeglib.backend method)": [[2, "GeocodeGlib.Backend.reverse_resolve"]], "reverse_resolve_async() (geocodeglib.backend method)": [[2, "GeocodeGlib.Backend.reverse_resolve_async"]], "reverse_resolve_finish() (geocodeglib.backend method)": [[2, "GeocodeGlib.Backend.reverse_resolve_finish"]], "geocodeglib.backendinterface (built-in class)": [[3, "GeocodeGlib.BackendInterface"]], "geocodeglib.boundingbox (built-in class)": [[4, "GeocodeGlib.BoundingBox"]], "geocodeglib.boundingbox.props.bottom (built-in variable)": [[4, "GeocodeGlib.BoundingBox.props.bottom"]], "geocodeglib.boundingbox.props.left (built-in variable)": [[4, "GeocodeGlib.BoundingBox.props.left"]], "geocodeglib.boundingbox.props.right (built-in variable)": [[4, "GeocodeGlib.BoundingBox.props.right"]], "geocodeglib.boundingbox.props.top (built-in variable)": [[4, "GeocodeGlib.BoundingBox.props.top"]], "equal() (geocodeglib.boundingbox method)": [[4, "GeocodeGlib.BoundingBox.equal"]], "get_bottom() (geocodeglib.boundingbox method)": [[4, "GeocodeGlib.BoundingBox.get_bottom"]], "get_left() (geocodeglib.boundingbox method)": [[4, "GeocodeGlib.BoundingBox.get_left"]], "get_right() (geocodeglib.boundingbox method)": [[4, "GeocodeGlib.BoundingBox.get_right"]], "get_top() (geocodeglib.boundingbox method)": [[4, "GeocodeGlib.BoundingBox.get_top"]], "new() (geocodeglib.boundingbox class method)": [[4, "GeocodeGlib.BoundingBox.new"]], "geocodeglib.boundingboxclass (built-in class)": [[5, "GeocodeGlib.BoundingBoxClass"]], "geocodeglib.forward (built-in class)": [[6, "GeocodeGlib.Forward"]], "geocodeglib.forward.props.answer_count (built-in variable)": [[6, "GeocodeGlib.Forward.props.answer_count"]], "geocodeglib.forward.props.bounded (built-in variable)": [[6, "GeocodeGlib.Forward.props.bounded"]], "geocodeglib.forward.props.search_area (built-in variable)": [[6, "GeocodeGlib.Forward.props.search_area"]], "get_answer_count() (geocodeglib.forward method)": [[6, "GeocodeGlib.Forward.get_answer_count"]], "get_bounded() (geocodeglib.forward method)": [[6, "GeocodeGlib.Forward.get_bounded"]], "get_search_area() (geocodeglib.forward method)": [[6, "GeocodeGlib.Forward.get_search_area"]], "new_for_params() (geocodeglib.forward class method)": [[6, "GeocodeGlib.Forward.new_for_params"]], "new_for_string() (geocodeglib.forward class method)": [[6, "GeocodeGlib.Forward.new_for_string"]], "search() (geocodeglib.forward method)": [[6, "GeocodeGlib.Forward.search"]], "search_async() (geocodeglib.forward method)": [[6, "GeocodeGlib.Forward.search_async"]], "search_finish() (geocodeglib.forward method)": [[6, "GeocodeGlib.Forward.search_finish"]], "set_answer_count() (geocodeglib.forward method)": [[6, "GeocodeGlib.Forward.set_answer_count"]], "set_backend() (geocodeglib.forward method)": [[6, "GeocodeGlib.Forward.set_backend"]], "set_bounded() (geocodeglib.forward method)": [[6, "GeocodeGlib.Forward.set_bounded"]], "set_search_area() (geocodeglib.forward method)": [[6, "GeocodeGlib.Forward.set_search_area"]], "geocodeglib.forwardclass (built-in class)": [[7, "GeocodeGlib.ForwardClass"]], "geocodeglib.location (built-in class)": [[8, "GeocodeGlib.Location"]], "geocodeglib.location.props.accuracy (built-in variable)": [[8, "GeocodeGlib.Location.props.accuracy"]], "geocodeglib.location.props.altitude (built-in variable)": [[8, "GeocodeGlib.Location.props.altitude"]], "geocodeglib.location.props.crs (built-in variable)": [[8, "GeocodeGlib.Location.props.crs"]], "geocodeglib.location.props.description (built-in variable)": [[8, "GeocodeGlib.Location.props.description"]], "geocodeglib.location.props.latitude (built-in variable)": [[8, "GeocodeGlib.Location.props.latitude"]], "geocodeglib.location.props.longitude (built-in variable)": [[8, "GeocodeGlib.Location.props.longitude"]], "geocodeglib.location.props.timestamp (built-in variable)": [[8, "GeocodeGlib.Location.props.timestamp"]], "equal() (geocodeglib.location method)": [[8, "GeocodeGlib.Location.equal"]], "get_accuracy() (geocodeglib.location method)": [[8, "GeocodeGlib.Location.get_accuracy"]], "get_altitude() (geocodeglib.location method)": [[8, "GeocodeGlib.Location.get_altitude"]], "get_crs() (geocodeglib.location method)": [[8, "GeocodeGlib.Location.get_crs"]], "get_description() (geocodeglib.location method)": [[8, "GeocodeGlib.Location.get_description"]], "get_distance_from() (geocodeglib.location method)": [[8, "GeocodeGlib.Location.get_distance_from"]], "get_latitude() (geocodeglib.location method)": [[8, "GeocodeGlib.Location.get_latitude"]], "get_longitude() (geocodeglib.location method)": [[8, "GeocodeGlib.Location.get_longitude"]], "get_timestamp() (geocodeglib.location method)": [[8, "GeocodeGlib.Location.get_timestamp"]], "new() (geocodeglib.location class method)": [[8, "GeocodeGlib.Location.new"]], "new_with_description() (geocodeglib.location class method)": [[8, "GeocodeGlib.Location.new_with_description"]], "set_description() (geocodeglib.location method)": [[8, "GeocodeGlib.Location.set_description"]], "set_from_uri() (geocodeglib.location method)": [[8, "GeocodeGlib.Location.set_from_uri"]], "to_uri() (geocodeglib.location method)": [[8, "GeocodeGlib.Location.to_uri"]], "geocodeglib.locationclass (built-in class)": [[9, "GeocodeGlib.LocationClass"]], "geocodeglib.mockbackend (built-in class)": [[10, "GeocodeGlib.MockBackend"]], "add_forward_result() (geocodeglib.mockbackend method)": [[10, "GeocodeGlib.MockBackend.add_forward_result"]], "add_reverse_result() (geocodeglib.mockbackend method)": [[10, "GeocodeGlib.MockBackend.add_reverse_result"]], "clear() (geocodeglib.mockbackend method)": [[10, "GeocodeGlib.MockBackend.clear"]], "get_query_log() (geocodeglib.mockbackend method)": [[10, "GeocodeGlib.MockBackend.get_query_log"]], "new() (geocodeglib.mockbackend class method)": [[10, "GeocodeGlib.MockBackend.new"]], "geocodeglib.mockbackendclass (built-in class)": [[11, "GeocodeGlib.MockBackendClass"]], "geocodeglib.mockbackendquery (built-in class)": [[12, "GeocodeGlib.MockBackendQuery"]], "geocodeglib.nominatim (built-in class)": [[13, "GeocodeGlib.Nominatim"]], "geocodeglib.nominatim.props.base_url (built-in variable)": [[13, "GeocodeGlib.Nominatim.props.base_url"]], "geocodeglib.nominatim.props.maintainer_email_address (built-in variable)": [[13, "GeocodeGlib.Nominatim.props.maintainer_email_address"]], "geocodeglib.nominatim.props.user_agent (built-in variable)": [[13, "GeocodeGlib.Nominatim.props.user_agent"]], "do_query() (geocodeglib.nominatim method)": [[13, "GeocodeGlib.Nominatim.do_query"]], "do_query_async() (geocodeglib.nominatim method)": [[13, "GeocodeGlib.Nominatim.do_query_async"]], "do_query_finish() (geocodeglib.nominatim method)": [[13, "GeocodeGlib.Nominatim.do_query_finish"]], "get_gnome() (geocodeglib.nominatim class method)": [[13, "GeocodeGlib.Nominatim.get_gnome"]], "new() (geocodeglib.nominatim class method)": [[13, "GeocodeGlib.Nominatim.new"]], "geocodeglib.nominatimclass (built-in class)": [[14, "GeocodeGlib.NominatimClass"]], "geocodeglib.place (built-in class)": [[15, "GeocodeGlib.Place"]], "geocodeglib.place.props.administrative_area (built-in variable)": [[15, "GeocodeGlib.Place.props.administrative_area"]], "geocodeglib.place.props.area (built-in variable)": [[15, "GeocodeGlib.Place.props.area"]], "geocodeglib.place.props.bounding_box (built-in variable)": [[15, "GeocodeGlib.Place.props.bounding_box"]], "geocodeglib.place.props.building (built-in variable)": [[15, "GeocodeGlib.Place.props.building"]], "geocodeglib.place.props.continent (built-in variable)": [[15, "GeocodeGlib.Place.props.continent"]], "geocodeglib.place.props.country (built-in variable)": [[15, "GeocodeGlib.Place.props.country"]], "geocodeglib.place.props.country_code (built-in variable)": [[15, "GeocodeGlib.Place.props.country_code"]], "geocodeglib.place.props.county (built-in variable)": [[15, "GeocodeGlib.Place.props.county"]], "geocodeglib.place.props.icon (built-in variable)": [[15, "GeocodeGlib.Place.props.icon"]], "geocodeglib.place.props.location (built-in variable)": [[15, "GeocodeGlib.Place.props.location"]], "geocodeglib.place.props.name (built-in variable)": [[15, "GeocodeGlib.Place.props.name"]], "geocodeglib.place.props.osm_id (built-in variable)": [[15, "GeocodeGlib.Place.props.osm_id"]], "geocodeglib.place.props.osm_type (built-in variable)": [[15, "GeocodeGlib.Place.props.osm_type"]], "geocodeglib.place.props.place_type (built-in variable)": [[15, "GeocodeGlib.Place.props.place_type"]], "geocodeglib.place.props.postal_code (built-in variable)": [[15, "GeocodeGlib.Place.props.postal_code"]], "geocodeglib.place.props.state (built-in variable)": [[15, "GeocodeGlib.Place.props.state"]], "geocodeglib.place.props.street (built-in variable)": [[15, "GeocodeGlib.Place.props.street"]], "geocodeglib.place.props.street_address (built-in variable)": [[15, "GeocodeGlib.Place.props.street_address"]], "geocodeglib.place.props.town (built-in variable)": [[15, "GeocodeGlib.Place.props.town"]], "equal() (geocodeglib.place method)": [[15, "GeocodeGlib.Place.equal"]], "get_administrative_area() (geocodeglib.place method)": [[15, "GeocodeGlib.Place.get_administrative_area"]], "get_area() (geocodeglib.place method)": [[15, "GeocodeGlib.Place.get_area"]], "get_bounding_box() (geocodeglib.place method)": [[15, "GeocodeGlib.Place.get_bounding_box"]], "get_building() (geocodeglib.place method)": [[15, "GeocodeGlib.Place.get_building"]], "get_continent() (geocodeglib.place method)": [[15, "GeocodeGlib.Place.get_continent"]], "get_country() (geocodeglib.place method)": [[15, "GeocodeGlib.Place.get_country"]], "get_country_code() (geocodeglib.place method)": [[15, "GeocodeGlib.Place.get_country_code"]], "get_county() (geocodeglib.place method)": [[15, "GeocodeGlib.Place.get_county"]], "get_icon() (geocodeglib.place method)": [[15, "GeocodeGlib.Place.get_icon"]], "get_location() (geocodeglib.place method)": [[15, "GeocodeGlib.Place.get_location"]], "get_name() (geocodeglib.place method)": [[15, "GeocodeGlib.Place.get_name"]], "get_osm_id() (geocodeglib.place method)": [[15, "GeocodeGlib.Place.get_osm_id"]], "get_osm_type() (geocodeglib.place method)": [[15, "GeocodeGlib.Place.get_osm_type"]], "get_place_type() (geocodeglib.place method)": [[15, "GeocodeGlib.Place.get_place_type"]], "get_postal_code() (geocodeglib.place method)": [[15, "GeocodeGlib.Place.get_postal_code"]], "get_state() (geocodeglib.place method)": [[15, "GeocodeGlib.Place.get_state"]], "get_street() (geocodeglib.place method)": [[15, "GeocodeGlib.Place.get_street"]], "get_street_address() (geocodeglib.place method)": [[15, "GeocodeGlib.Place.get_street_address"]], "get_town() (geocodeglib.place method)": [[15, "GeocodeGlib.Place.get_town"]], "new() (geocodeglib.place class method)": [[15, "GeocodeGlib.Place.new"]], "new_with_location() (geocodeglib.place class method)": [[15, "GeocodeGlib.Place.new_with_location"]], "set_administrative_area() (geocodeglib.place method)": [[15, "GeocodeGlib.Place.set_administrative_area"]], "set_area() (geocodeglib.place method)": [[15, "GeocodeGlib.Place.set_area"]], "set_bounding_box() (geocodeglib.place method)": [[15, "GeocodeGlib.Place.set_bounding_box"]], "set_building() (geocodeglib.place method)": [[15, "GeocodeGlib.Place.set_building"]], "set_continent() (geocodeglib.place method)": [[15, "GeocodeGlib.Place.set_continent"]], "set_country() (geocodeglib.place method)": [[15, "GeocodeGlib.Place.set_country"]], "set_country_code() (geocodeglib.place method)": [[15, "GeocodeGlib.Place.set_country_code"]], "set_county() (geocodeglib.place method)": [[15, "GeocodeGlib.Place.set_county"]], "set_location() (geocodeglib.place method)": [[15, "GeocodeGlib.Place.set_location"]], "set_name() (geocodeglib.place method)": [[15, "GeocodeGlib.Place.set_name"]], "set_postal_code() (geocodeglib.place method)": [[15, "GeocodeGlib.Place.set_postal_code"]], "set_state() (geocodeglib.place method)": [[15, "GeocodeGlib.Place.set_state"]], "set_street() (geocodeglib.place method)": [[15, "GeocodeGlib.Place.set_street"]], "set_street_address() (geocodeglib.place method)": [[15, "GeocodeGlib.Place.set_street_address"]], "set_town() (geocodeglib.place method)": [[15, "GeocodeGlib.Place.set_town"]], "geocodeglib.placeclass (built-in class)": [[16, "GeocodeGlib.PlaceClass"]], "geocodeglib.reverse (built-in class)": [[17, "GeocodeGlib.Reverse"]], "new_for_location() (geocodeglib.reverse class method)": [[17, "GeocodeGlib.Reverse.new_for_location"]], "resolve() (geocodeglib.reverse method)": [[17, "GeocodeGlib.Reverse.resolve"]], "resolve_async() (geocodeglib.reverse method)": [[17, "GeocodeGlib.Reverse.resolve_async"]], "resolve_finish() (geocodeglib.reverse method)": [[17, "GeocodeGlib.Reverse.resolve_finish"]], "set_backend() (geocodeglib.reverse method)": [[17, "GeocodeGlib.Reverse.set_backend"]], "geocodeglib.reverseclass (built-in class)": [[18, "GeocodeGlib.ReverseClass"]], "geocodeglib.location_accuracy_city (built-in variable)": [[19, "GeocodeGlib.LOCATION_ACCURACY_CITY"]], "geocodeglib.location_accuracy_continent (built-in variable)": [[19, "GeocodeGlib.LOCATION_ACCURACY_CONTINENT"]], "geocodeglib.location_accuracy_country (built-in variable)": [[19, "GeocodeGlib.LOCATION_ACCURACY_COUNTRY"]], "geocodeglib.location_accuracy_region (built-in variable)": [[19, "GeocodeGlib.LOCATION_ACCURACY_REGION"]], "geocodeglib.location_accuracy_street (built-in variable)": [[19, "GeocodeGlib.LOCATION_ACCURACY_STREET"]], "geocodeglib.location_accuracy_unknown (built-in variable)": [[19, "GeocodeGlib.LOCATION_ACCURACY_UNKNOWN"]], "airport (geocodeglib.placetype attribute)": [[20, "GeocodeGlib.PlaceType.AIRPORT"]], "bar (geocodeglib.placetype attribute)": [[20, "GeocodeGlib.PlaceType.BAR"]], "building (geocodeglib.placetype attribute)": [[20, "GeocodeGlib.PlaceType.BUILDING"]], "bus_stop (geocodeglib.placetype attribute)": [[20, "GeocodeGlib.PlaceType.BUS_STOP"]], "colloquial (geocodeglib.placetype attribute)": [[20, "GeocodeGlib.PlaceType.COLLOQUIAL"]], "continent (geocodeglib.placetype attribute)": [[20, "GeocodeGlib.PlaceType.CONTINENT"]], "country (geocodeglib.placetype attribute)": [[20, "GeocodeGlib.PlaceType.COUNTRY"]], "county (geocodeglib.placetype attribute)": [[20, "GeocodeGlib.PlaceType.COUNTY"]], "drainage (geocodeglib.placetype attribute)": [[20, "GeocodeGlib.PlaceType.DRAINAGE"]], "estate (geocodeglib.placetype attribute)": [[20, "GeocodeGlib.PlaceType.ESTATE"]], "geo (geocodeglib.locationurischeme attribute)": [[20, "GeocodeGlib.LocationURIScheme.GEO"]], "geocodeglib.error (built-in class)": [[20, "GeocodeGlib.Error"]], "geocodeglib.locationcrs (built-in class)": [[20, "GeocodeGlib.LocationCRS"]], "geocodeglib.locationurischeme (built-in class)": [[20, "GeocodeGlib.LocationURIScheme"]], "geocodeglib.placeosmtype (built-in class)": [[20, "GeocodeGlib.PlaceOsmType"]], "geocodeglib.placetype (built-in class)": [[20, "GeocodeGlib.PlaceType"]], "historical_county (geocodeglib.placetype attribute)": [[20, "GeocodeGlib.PlaceType.HISTORICAL_COUNTY"]], "historical_state (geocodeglib.placetype attribute)": [[20, "GeocodeGlib.PlaceType.HISTORICAL_STATE"]], "historical_town (geocodeglib.placetype attribute)": [[20, "GeocodeGlib.PlaceType.HISTORICAL_TOWN"]], "internal_server (geocodeglib.error attribute)": [[20, "GeocodeGlib.Error.INTERNAL_SERVER"]], "invalid_arguments (geocodeglib.error attribute)": [[20, "GeocodeGlib.Error.INVALID_ARGUMENTS"]], "island (geocodeglib.placetype attribute)": [[20, "GeocodeGlib.PlaceType.ISLAND"]], "land_feature (geocodeglib.placetype attribute)": [[20, "GeocodeGlib.PlaceType.LAND_FEATURE"]], "light_rail_station (geocodeglib.placetype attribute)": [[20, "GeocodeGlib.PlaceType.LIGHT_RAIL_STATION"]], "local_administrative_area (geocodeglib.placetype attribute)": [[20, "GeocodeGlib.PlaceType.LOCAL_ADMINISTRATIVE_AREA"]], "miscellaneous (geocodeglib.placetype attribute)": [[20, "GeocodeGlib.PlaceType.MISCELLANEOUS"]], "motorway (geocodeglib.placetype attribute)": [[20, "GeocodeGlib.PlaceType.MOTORWAY"]], "node (geocodeglib.placeosmtype attribute)": [[20, "GeocodeGlib.PlaceOsmType.NODE"]], "not_supported (geocodeglib.error attribute)": [[20, "GeocodeGlib.Error.NOT_SUPPORTED"]], "no_matches (geocodeglib.error attribute)": [[20, "GeocodeGlib.Error.NO_MATCHES"]], "ocean (geocodeglib.placetype attribute)": [[20, "GeocodeGlib.PlaceType.OCEAN"]], "parse (geocodeglib.error attribute)": [[20, "GeocodeGlib.Error.PARSE"]], "place_of_worship (geocodeglib.placetype attribute)": [[20, "GeocodeGlib.PlaceType.PLACE_OF_WORSHIP"]], "point_of_interest (geocodeglib.placetype attribute)": [[20, "GeocodeGlib.PlaceType.POINT_OF_INTEREST"]], "postal_code (geocodeglib.placetype attribute)": [[20, "GeocodeGlib.PlaceType.POSTAL_CODE"]], "railway_station (geocodeglib.placetype attribute)": [[20, "GeocodeGlib.PlaceType.RAILWAY_STATION"]], "relation (geocodeglib.placeosmtype attribute)": [[20, "GeocodeGlib.PlaceOsmType.RELATION"]], "restaurant (geocodeglib.placetype attribute)": [[20, "GeocodeGlib.PlaceType.RESTAURANT"]], "school (geocodeglib.placetype attribute)": [[20, "GeocodeGlib.PlaceType.SCHOOL"]], "sea (geocodeglib.placetype attribute)": [[20, "GeocodeGlib.PlaceType.SEA"]], "state (geocodeglib.placetype attribute)": [[20, "GeocodeGlib.PlaceType.STATE"]], "street (geocodeglib.placetype attribute)": [[20, "GeocodeGlib.PlaceType.STREET"]], "suburb (geocodeglib.placetype attribute)": [[20, "GeocodeGlib.PlaceType.SUBURB"]], "supername (geocodeglib.placetype attribute)": [[20, "GeocodeGlib.PlaceType.SUPERNAME"]], "time_zone (geocodeglib.placetype attribute)": [[20, "GeocodeGlib.PlaceType.TIME_ZONE"]], "town (geocodeglib.placetype attribute)": [[20, "GeocodeGlib.PlaceType.TOWN"]], "unknown (geocodeglib.placeosmtype attribute)": [[20, "GeocodeGlib.PlaceOsmType.UNKNOWN"]], "unknown (geocodeglib.placetype attribute)": [[20, "GeocodeGlib.PlaceType.UNKNOWN"]], "way (geocodeglib.placeosmtype attribute)": [[20, "GeocodeGlib.PlaceOsmType.WAY"]], "wgs84 (geocodeglib.locationcrs attribute)": [[20, "GeocodeGlib.LocationCRS.WGS84"]], "zone (geocodeglib.placetype attribute)": [[20, "GeocodeGlib.PlaceType.ZONE"]], "quark() (geocodeglib.error class method)": [[20, "GeocodeGlib.Error.quark"]], "geocodeglib.error_quark()": [[21, "GeocodeGlib.error_quark"]], "built-in function": [[21, "GeocodeGlib.error_quark"]]}})